input AddAmRmaTrackingNumberInput {
  """Code of Tracking Carrier."""
  code: String!

  """Hash of Return Request."""
  hash: String!

  """Number of Tracking."""
  number: String!
}

"""Defines the configurable products to add to the cart."""
input AddConfigurableProductsToCartInput {
  """The ID of the cart."""
  cart_id: String!

  """An array of configurable products to add."""
  cart_items: [ConfigurableProductCartItemInput]!
}

"""Contains details about the cart after adding configurable products."""
type AddConfigurableProductsToCartOutput {
  """The cart after adding products."""
  cart: Cart!
}

"""Contains details about the cart after adding products to it."""
type AddProductsToCartOutput {
  """The cart after products have been added."""
  cart: Cart!

  """Contains errors encountered while adding an item to the cart."""
  user_errors: [CartUserInputError]!
}

"""Contains products to add to an existing compare list."""
input AddProductsToCompareListInput {
  """An array of product IDs to add to the compare list."""
  products: [ID]!

  """The unique identifier of the compare list to modify."""
  uid: ID!
}

"""Contains the customer's wish list and any errors encountered."""
type AddProductsToWishlistOutput {
  """An array of errors encountered while adding products to a wish list."""
  user_errors: [WishListUserInputError]!

  """Contains the wish list with all items that were successfully added."""
  wishlist: Wishlist!
}

"""Defines the simple and group products to add to the cart."""
input AddSimpleProductsToCartInput {
  """The unique ID of a `Cart` object."""
  cart_id: String!

  """An array of simple and group items to add."""
  cart_items: [SimpleProductCartItemInput]!
}

"""Contains details about the cart after adding simple or group products."""
type AddSimpleProductsToCartOutput {
  """The cart after adding products."""
  cart: Cart!
}

"""Defines the virtual products to add to the cart."""
input AddVirtualProductsToCartInput {
  """The unique ID of a `Cart` object."""
  cart_id: String!

  """An array of virtual products to add."""
  cart_items: [VirtualProductCartItemInput]!
}

"""Contains details about the cart after adding virtual products."""
type AddVirtualProductsToCartOutput {
  """The cart after adding products."""
  cart: Cart!
}

"""Contains the resultant wish list and any error information."""
type AddWishlistItemsToCartOutput {
  """
  An array of errors encountered while adding products to the customer's cart.
  """
  add_wishlist_items_to_cart_user_errors: [WishlistCartUserInputError]!

  """
  Indicates whether the attempt to add items to the customer's cart was successful.
  """
  status: Boolean!

  """Contains the wish list with all items that were successfully added."""
  wishlist: Wishlist!
}

"""
Contains information for each filterable option (such as price, category `UID`, and custom attributes).
"""
type Aggregation {
  """Attribute code of the aggregation group."""
  attribute_code: String!

  """The number of options in the aggregation group."""
  count: Int

  """The aggregation display name."""
  label: String

  """Array of options for the aggregation."""
  options: [AggregationOption]

  """The relative position of the attribute in a layered navigation block."""
  position: Int
}

"""An implementation of `AggregationOptionInterface`."""
type AggregationOption implements AggregationOptionInterface {
  """The number of items that match the aggregation option."""
  count: Int

  """The display label for an aggregation option."""
  label: String

  """Data required to render swatch filter item"""
  swatch_data: SwatchData

  """The internal ID that represents the value of the option."""
  value: String!
}

"""Defines aggregation option fields."""
interface AggregationOptionInterface {
  """The number of items that match the aggregation option."""
  count: Int

  """The display label for an aggregation option."""
  label: String

  """Data required to render swatch filter item"""
  swatch_data: SwatchData

  """The internal ID that represents the value of the option."""
  value: String!
}

"""Filter category aggregations in layered navigation."""
input AggregationsCategoryFilterInput {
  """
  Indicates whether to include only direct subcategories or all children categories at all levels.
  """
  includeDirectChildrenOnly: Boolean
}

"""
An input object that specifies the filters used in product aggregations.
"""
input AggregationsFilterInput {
  """Filter category aggregations in layered navigation."""
  category: AggregationsCategoryFilterInput
}

type AmRmaCondition {
  """RMA Item Condition ID."""
  condition_id: Int

  """RMA Item Condition Title."""
  label: String

  """Reason Payer ID."""
  payer: Int

  """RMA Item Condition Sort Order"""
  position: Int
}

type AmRmaCustomField {
  """Custom field code"""
  code: String

  """Custom field title"""
  title: String
}

"""Defines the input of custom fields for place request mutation"""
input AmRmaCustomFieldInput {
  """Code of custom field"""
  key: String!

  """Value of custom field"""
  value: String!
}

type AmRmaMessage {
  """Date of Message."""
  created: String!

  """Files Attached to Message."""
  files: [AmRmaMessageFile]

  """Is Message from Manager Flag."""
  is_manager: Boolean

  """Is Message from System Flag."""
  is_system: Boolean

  """Message Content."""
  message: String

  """Id of a Message."""
  message_id: Int!

  """Username of Message Sender."""
  username: String!
}

type AmRmaMessageFile {
  """Name of a Attached File."""
  filename: String!

  """Relative path of a Message File."""
  filepath: String
}

type AmRmaMutationCommonOutput {
  """Is an error occurred flag."""
  error: Boolean

  """Result message."""
  message: String
}

type AmRmaOrder {
  """Information about returnable order."""
  label: String

  """Order ID for return."""
  order_id: String!
}

type AmRmaPolicy {
  """Return Policy Page Content"""
  content: String

  """Return Policy Page Title"""
  title: String
}

type AmRmaProductReturnMessage {
  """Code of message."""
  code: String

  """Lable of message."""
  label: String

  """Value of message."""
  value: String
}

type AmRmaReason {
  """RMA Reason Title."""
  label: String

  """RMA Reason Payer ID."""
  payer: Int

  """RMA Reason Sort Order"""
  position: Int

  """RMA Reason ID."""
  reason_id: Int
}

type AmRmaRequestItem {
  """RMA Request Item Associated Condition ID."""
  condition_id: Int

  """Files Attached to Message."""
  files: [AmRmaMessageFile]

  """RMA Request Item Associated Item Status."""
  item_status: String

  """RMA Request Item Associated Order ID."""
  order_item_id: Int

  """RMA Request Item Associated Product Name."""
  product_name: String

  """RMA Request Item Associated Product URL Key."""
  product_url_key: String

  """RMA Request Item Total Qty."""
  qty: Int

  """RMA Request Item Associated Reason ID."""
  reason_id: Int

  """RMA Request Item Associated Request ID."""
  request_id: Int

  """RMA Request Item ID."""
  request_item_id: Int

  """RMA Request Item Requested Qty."""
  request_qty: Int

  """RMA Request Item Associated Resolution ID."""
  resolution_id: Int
}

type AmRmaRequestStatus {
  """RMA Request Status Color."""
  color: String

  """RMA Request Status Label."""
  label: String

  """RMA Request Status State ID."""
  state: Int

  """RMA Request Status ID."""
  status_id: Int

  """RMA Request Status Title."""
  title: String
}

type AmRmaRequestTrackingNumber {
  """RMA Tracking Number Added By Customer Flag."""
  is_customer: Boolean

  """RMA Tracking Number Associated Request ID."""
  request_id: Int

  """RMA Tracking Code."""
  tracking_code: String

  """RMA Tracking Number ID."""
  tracking_id: Int

  """RMA Tracking Number."""
  tracking_number: String
}

type AmRmaResolution {
  """RMA resolutions label"""
  label: String

  """RMA resolutions sort order"""
  position: Int

  """RMA resolutions ID"""
  resolution_id: Int

  """RMA resolutions status"""
  status: Int
}

type AmRmaReturnOrderItem {
  """Existing Request IDs for Allready Returned Reason."""
  already_returned_requests: [Int]

  """Available Qty for Return."""
  available_qty: Float

  """Is Item Returnable Flag."""
  is_returnable: Boolean

  """Reason ID Why Item Can't Be Returned."""
  no_returnable_reason: Int

  """Order Id of an Order Item."""
  order_id: Int

  """ID of an Order Item."""
  order_item_id: Int

  """Purchased Qty."""
  purchased_qty: Float

  """Resolutions for Item."""
  resolutions: [AmRmaResolution]
}

type AmRmaReturnRequest {
  """RMA Request auto approved date."""
  auto_approved_date: String

  """RMA Request auto rá»‡ct date."""
  auto_rejected_date: String

  """RMA Request Creation Date."""
  created_at: String

  """RMA Request Custom Fields JSON."""
  custom_fields: String

  """RMA Request Associated Customer ID."""
  customer_id: Int

  """RMA Request Associated Customer Name."""
  customer_name: String

  """RMA Request Manager ID."""
  manager_id: Int

  """RMA Request Last Modification Date."""
  modified_at: String

  """RMA Request Note."""
  note: String

  """RMA Request Associated Order ID."""
  order_id: Int

  """RMA Request Associated Order Increment ID."""
  order_increment_id: String

  """RMA Request Customer's Rating (1-5 stars)."""
  rating: Int

  """RMA Request Customer's Rating Comment."""
  rating_comment: String

  """RMA Request ID."""
  request_id: Int

  """RMA Request Associated Request Items."""
  request_items: [AmRmaRequestItem]

  """RMA Request Shipping Label."""
  shipping_label: String

  """RMA Request Status."""
  status: AmRmaRequestStatus

  """RMA Request Associated Store ID."""
  store_id: Int

  """RMA Request Associated Tracking Numbers."""
  tracking_numbers: [AmRmaRequestTrackingNumber]

  """RMA Request Unique Hash."""
  url_hash: String
}

type AmRmaReturns {
  """A list of return requests"""
  items: [AmRmaReturnRequest]

  """Pagination metadata"""
  page_info: SearchResultPageInfo

  """The total number of return requests"""
  total_count: Int
}

type AmRmaSetting {
  """Administrator email address"""
  administratorEmail: String

  """Administrator phone number"""
  administratorPhoneNumber: String

  """All allowed return item conditions"""
  allConditions: [AmRmaCondition]

  """All allowed return reasons"""
  allReasons: [AmRmaReason]

  """All allowed return resolutions"""
  allResolutions: [AmRmaResolution]

  """Custom fields list"""
  customFields: [AmRmaCustomField]

  """Title of custom fields block"""
  customFieldsBlockTitle: String

  """Is show popup with rating for feedback from customer."""
  isAskForFeedback: Boolean

  """Is chat feature enabled flag."""
  isChatEnabled: Boolean

  """Is RMA module enabled flag."""
  isEnabled: Boolean

  """Is policy checkbox enabled flag."""
  isReturnPolicyEnabled: Boolean

  """Is show administrator contact on storefront."""
  isShowAdministratorContact: Boolean

  """Max File Size of a message attachment."""
  maxAttachmentSize: Int

  """Return policy CMS page url"""
  policyUrl: String

  """Available for RMA Shipping Carriers."""
  shippingCarriers: [AmRmaShippingCarrier]

  """Base url RMA prefix"""
  urlPrefix: String
}

type AmRmaShippingCarrier {
  """Code of a Carrier."""
  code: String

  """Lable of a Carrier."""
  label: String
}

"""Contains the applied coupon code."""
type AppliedCoupon {
  """The coupon code the shopper applied to the card."""
  code: String!
}

"""Specifies the coupon code to apply to the cart."""
input ApplyCouponToCartInput {
  """The unique ID of a `Cart` object."""
  cart_id: String!

  """A valid coupon code."""
  coupon_code: String!
}

"""Contains details about the cart after applying a coupon."""
type ApplyCouponToCartOutput {
  """The cart after applying a coupon."""
  cart: Cart!
}

"""
AreaInput defines the parameters which will be used for filter by specified location.
"""
input AreaInput {
  """The radius for the search in KM."""
  radius: Int!

  """
  The country code where search must be performed. Required parameter together with region, city or postcode.
  """
  search_term: String!
}

"""Contains the results of the request to assign a compare list."""
type AssignCompareListToCustomerOutput {
  """The contents of the customer's compare list."""
  compare_list: CompareList

  """
  Indicates whether the compare list was successfully assigned to the customer.
  """
  result: Boolean!
}

"""Contains details about the attribute, including the code and type."""
type Attribute {
  """
  The unique identifier for an attribute code. This value should be in lowercase letters without spaces.
  """
  attribute_code: String

  """Attribute options list."""
  attribute_options: [AttributeOption]

  """The data type of the attribute."""
  attribute_type: String

  """The type of entity that defines the attribute."""
  entity_type: String

  """The frontend input type of the attribute."""
  input_type: String

  """Details about the storefront properties configured for the attribute."""
  storefront_properties: StorefrontProperties
}

enum AttributeEntityTypeEnum {
  PRODUCT
}

"""
Defines the attribute characteristics to search for the `attribute_code` and `entity_type` to search.
"""
input AttributeInput {
  """
  The unique identifier for an attribute code. This value should be in lowercase letters without spaces.
  """
  attribute_code: String

  """The type of entity that defines the attribute."""
  entity_type: String
}

"""An interface containing fields that define attributes."""
interface AttributeMetadataInterface {
  """An array of attribute labels defined for the current store."""
  attribute_labels: [StoreLabels]

  """
  The unique identifier for an attribute code. This value should be in lowercase letters without spaces.
  """
  code: String

  """The data type of the attribute."""
  data_type: ObjectDataTypeEnum

  """The type of entity that defines the attribute."""
  entity_type: AttributeEntityTypeEnum

  """Indicates whether the attribute is a system attribute."""
  is_system: Boolean

  """The label assigned to the attribute."""
  label: String

  """The relative position of the attribute."""
  sort_order: Int

  """Frontend UI properties of the attribute."""
  ui_input: UiInputTypeInterface

  """The unique ID of an attribute."""
  uid: ID
}

"""Defines an attribute option."""
type AttributeOption implements AttributeOptionInterface {
  """Indicates if option is set to be used as default value."""
  is_default: Boolean

  """The label assigned to the attribute option."""
  label: String

  """The unique ID of an attribute option."""
  uid: ID!

  """The attribute option value."""
  value: String
}

"""Defines attribute options."""
interface AttributeOptionInterface {
  """Indicates if option is set to be used as default value."""
  is_default: Boolean

  """The label assigned to the attribute option."""
  label: String

  """The unique ID of an attribute option."""
  uid: ID!
}

type AttributeOptions implements AttributeOptionsInterface {
  """An array of attribute options."""
  attribute_options: [AttributeOptionInterface]
}

"""Defines attribute options."""
interface AttributeOptionsInterface {
  """An array of attribute options."""
  attribute_options: [AttributeOptionInterface]
}

"""Contains an array of custom and system attributes."""
type AttributesMetadata {
  """An array of attributes."""
  items: [AttributeMetadataInterface]
}

"""
Describes a payment method that the shopper can use to pay for the order.
"""
type AvailablePaymentMethod {
  """The payment method code."""
  code: String!

  """The payment method title."""
  title: String!
}

"""Contains details about the possible shipping methods and carriers."""
type AvailableShippingMethod {
  """The cost of shipping using this shipping method."""
  amount: Money!

  """Indicates whether this shipping method can be applied to the cart."""
  available: Boolean!
  base_amount: Money @deprecated(reason: "The field should not be used on the storefront.")

  """
  A string that identifies a commercial carrier or an offline shipping method.
  """
  carrier_code: String!

  """The label for the carrier code."""
  carrier_title: String!

  """Describes an error condition."""
  error_message: String

  """
  A shipping method code associated with a carrier. The value could be null if no method is available.
  """
  method_code: String

  """
  The label for the shipping method code. The value could be null if no method is available.
  """
  method_title: String

  """The cost of shipping using this shipping method, excluding tax."""
  price_excl_tax: Money!

  """The cost of shipping using this shipping method, including tax."""
  price_incl_tax: Money!
}

enum BatchMutationStatus {
  SUCCESS
  FAILURE
  MIXED_RESULTS
}

"""Defines the billing address."""
input BillingAddressInput {
  """Defines a billing address."""
  address: CartAddressInput

  """
  An ID from the customer's address book that uniquely identifies the address to be used for billing.
  """
  customer_address_id: Int

  """
  Indicates whether to set the billing address to be the same as the existing shipping address on the cart.
  """
  same_as_shipping: Boolean

  """
  Indicates whether to set the shipping address to be the same as this billing address.
  """
  use_for_shipping: Boolean
}

"""Contains details about the billing address."""
type BillingCartAddress implements CartAddressInterface {
  """The city specified for the billing or shipping address."""
  city: String

  """The company specified for the billing or shipping address."""
  company: String

  """The company branch id for tax invoice"""
  company_branch_id: String

  """The company branch name for tax invoice"""
  company_branch_name: String

  """An object containing the country label and code."""
  country: CartAddressCountry!
  customer_notes: String @deprecated(reason: "The field is used only in shipping address.")

  """The request district of the customer or guest."""
  district: String

  """The first name of the customer or guest."""
  firstname: String!

  """The last name of the customer or guest."""
  lastname: String!

  """The ZIP or postal code of the billing or shipping address."""
  postcode: String

  """An object containing the region label and code."""
  region: CartAddressRegion

  """Address remark"""
  remark: String

  """The request tax invoice of the customer or guest."""
  request_tax_invoice: Boolean

  """An array containing the street for the billing or shipping address."""
  street: [String]!

  """The request sub_district of the customer or guest."""
  sub_district: String

  """The telephone number for the billing or shipping address."""
  telephone: String

  """The 1 number of the customer or guest."""
  the_1_number: String

  """VAT ID"""
  vat_id: String
}

input BraintreeCcVaultInput {
  device_data: String
  public_hash: String!
}

input BraintreeInput {
  """
  Contains a fingerprint provided by Braintree JS SDK and should be sent with
  sale transaction details to the Braintree payment gateway. Should be specified
  only in a case if Kount (advanced fraud protection) is enabled for Braintree
  payment integration.
  """
  device_data: String

  """
  States whether an entered by a customer credit/debit card should be tokenized
  for later usage. Required only if Vault is enabled for Braintree payment integration.
  """
  is_active_payment_token_enabler: Boolean!

  """
  The one-time payment token generated by Braintree payment gateway based on
  card details. Required field to make sale transaction.
  """
  payment_method_nonce: String!
}

"""
Contains details about an individual category that comprises a breadcrumb.
"""
type Breadcrumb {
  """The ID of the category."""
  category_id: Int @deprecated(reason: "Use `category_uid` instead.")

  """The category level."""
  category_level: Int

  """The display name of the category."""
  category_name: String

  """The unique ID for a `Breadcrumb` object."""
  category_uid: ID!

  """The URL key of the category."""
  category_url_key: String

  """The URL path of the category."""
  category_url_path: String
}

type BundleCartItem {
  """The entered gift message for the cart item"""
  gift_message: GiftMessage
}

"""
Contains the contents and other details about a guest or customer cart.
"""
type Cart {
  applied_coupon: AppliedCoupon @deprecated(reason: "Use `applied_coupons` instead.")

  """
  An array of `AppliedCoupon` objects. Each object contains the `code` text attribute, which specifies the coupon code.
  """
  applied_coupons: [AppliedCoupon]

  """An array of available payment methods."""
  available_payment_methods: [AvailablePaymentMethod]

  """The billing address assigned to the cart."""
  billing_address: BillingCartAddress

  """Customer uuid of cart."""
  customer_uuid: String!

  """The email address of the guest or customer."""
  email: String

  """The entered gift message for the cart"""
  gift_message: GiftMessage

  """The unique ID for a `Cart` object."""
  id: ID!

  """Indicates whether the cart contains only virtual products."""
  is_virtual: Boolean!

  """An array of products that have been added to the cart."""
  items: [CartItemInterface]

  """Pricing details for the quote."""
  prices: CartPrices

  """Indicates which payment method was applied to the cart."""
  selected_payment_method: SelectedPaymentMethod

  """An array of shipping addresses assigned to the cart."""
  shipping_addresses: [ShippingCartAddress]!

  """The the one point earn of cart."""
  the_1_point_earn: Float!

  """The total number of items in the cart."""
  total_quantity: Float!
}

"""Contains details the country in a billing or shipping address."""
type CartAddressCountry {
  """The country code."""
  code: String!

  """The display label for the country."""
  label: String!
}

"""Defines the billing or shipping address to be applied to the cart."""
input CartAddressInput {
  """The city specified for the billing or shipping address."""
  city: String

  """The company specified for the billing or shipping address."""
  company: String

  """The company branch id for tax invoice"""
  company_branch_id: String

  """The company branch name for tax invoice"""
  company_branch_name: String

  """The country code and label for the billing or shipping address."""
  country_code: String!

  """The request district of the customer or guest."""
  district: String

  """The first name of the customer or guest."""
  firstname: String!

  """The last name of the customer or guest."""
  lastname: String!

  """The ZIP or postal code of the billing or shipping address."""
  postcode: String

  """
  A string that defines the state or province of the billing or shipping address.
  """
  region: String

  """
  An integer that defines the state or province of the billing or shipping address.
  """
  region_id: Int

  """Address remark"""
  remark: String

  """The request tax invoice of the customer or guest."""
  request_tax_invoice: Boolean

  """
  Determines whether to save the address in the customer's address book. The default value is true.
  """
  save_in_address_book: Boolean

  """An array containing the street for the billing or shipping address."""
  street: [String]!

  """The request sub_district of the customer or guest."""
  sub_district: String

  """The telephone number for the billing or shipping address."""
  telephone: String

  """The 1 number of the customer or guest."""
  the_1_number: String

  """VAT ID"""
  vat_id: String
}

"""Contains details about the billing address."""
interface CartAddressInterface {
  """The city specified for the billing or shipping address."""
  city: String

  """The company specified for the billing or shipping address."""
  company: String

  """An object containing the country label and code."""
  country: CartAddressCountry!

  """The first name of the customer or guest."""
  firstname: String!

  """The last name of the customer or guest."""
  lastname: String!

  """The ZIP or postal code of the billing or shipping address."""
  postcode: String

  """An object containing the region label and code."""
  region: CartAddressRegion

  """The request tax invoice of the customer or guest."""
  request_tax_invoice: Boolean

  """An array containing the street for the billing or shipping address."""
  street: [String]!

  """The telephone number for the billing or shipping address."""
  telephone: String

  """VAT ID"""
  vat_id: String
}

"""Contains details about the region in a billing or shipping address."""
type CartAddressRegion {
  """The state or province code."""
  code: String

  """The display label for the region."""
  label: String

  """The unique ID for a pre-defined region."""
  region_id: Int
}

"""Contains information about discounts applied to the cart."""
type CartDiscount {
  """The amount of the discount applied to the item."""
  amount: Money!

  """The description of the discount."""
  label: [String]!
}

type CartItemError {
  """An error code that describes the error encountered"""
  code: CartItemErrorType!

  """A localized error message"""
  message: String!
}

enum CartItemErrorType {
  UNDEFINED
  ITEM_QTY
  ITEM_INCREMENTS
}

"""Defines an item to be added to the cart."""
input CartItemInput {
  """
  An array of entered options for the base product, such as personalization text.
  """
  entered_options: [EnteredOptionInput]

  """For a child product, the SKU of its parent product."""
  parent_sku: String

  """The amount or number of an item to add."""
  quantity: Float!

  """
  The selected options for the base product, such as color or size, using the
  unique ID for an object such as `CustomizableRadioOption`,
  `CustomizableDropDownOption`, or `ConfigurableProductOptionsValues`.
  """
  selected_options: [ID]

  """The SKU of the product."""
  sku: String!
}

"""An interface for products in a cart."""
interface CartItemInterface {
  """An array of product return messages."""
  amrma_return_info: [AmRmaProductReturnMessage]

  """An array of errors encountered while loading the cart item"""
  errors: [CartItemError]
  id: String! @deprecated(reason: "Use `uid` instead.")

  """
  Contains details about the price of the item, including taxes and discounts.
  """
  prices: CartItemPrices

  """Details about an item in the cart."""
  product: ProductInterface!

  """The quantity of this item in the cart."""
  quantity: Float!

  """Contains details about the seller of the item"""
  seller: Retailer

  """The unique ID for a `CartItemInterface` object."""
  uid: ID!
}

"""
Contains details about the price of the item, including taxes and discounts.
"""
type CartItemPrices {
  """An array of discounts to be applied to the cart item."""
  discounts: [Discount]

  """An array of FPTs applied to the cart item."""
  fixed_product_taxes: [FixedProductTax]

  """
  The price of the item before any discounts were applied. The price that might
  include tax, depending on the configured display settings for cart.
  """
  price: Money!

  """The value of the price multiplied by the quantity of the item."""
  row_total: Money!

  """The value of `row_total` plus the tax applied to the item."""
  row_total_including_tax: Money!

  """The total of all discounts applied to the item."""
  total_item_discount: Money
}

"""
Deprecated: The `ShippingCartAddress.cart_items` field now returns `CartItemInterface`.
"""
type CartItemQuantity {
  cart_item_id: Int! @deprecated(reason: "The `ShippingCartAddress.cart_items` field now returns `CartItemInterface`.")
  quantity: Float! @deprecated(reason: "The `ShippingCartAddress.cart_items` field now returns `CartItemInterface`.")
}

"""Contains details about the price of a selected customizable value."""
type CartItemSelectedOptionValuePrice {
  """Indicates whether the price type is fixed, percent, or dynamic."""
  type: PriceTypeEnum!

  """A string that describes the unit of the value."""
  units: String!

  """A price value."""
  value: Float!
}

"""A single item to be updated."""
input CartItemUpdateInput {
  """Deprecated. Use `cart_item_uid` instead."""
  cart_item_id: Int

  """The unique ID for a `CartItemInterface` object."""
  cart_item_uid: ID

  """An array that defines customizable options for the product."""
  customizable_options: [CustomizableOptionInput]

  """Gift message details for the cart item"""
  gift_message: GiftMessageInput

  """The new quantity of the item."""
  quantity: Float
}

"""
Contains details about the final price of items in the cart, including discount and tax information.
"""
type CartPrices {
  """
  An array containing the names and amounts of taxes applied to each item in the cart.
  """
  applied_taxes: [CartTaxItem]
  discount: CartDiscount @deprecated(reason: "Use discounts instead.")

  """An array containing all discounts applied to the cart."""
  discounts: [Discount]

  """The total, including discounts, taxes, shipping, and other fees."""
  grand_total: Money

  """The subtotal without any applied taxes."""
  subtotal_excluding_tax: Money

  """The subtotal including any applied taxes."""
  subtotal_including_tax: Money

  """The subtotal with any discounts applied, but not taxes."""
  subtotal_with_discount_excluding_tax: Money
}

"""Contains tax information about an item in the cart."""
type CartTaxItem {
  """The amount of tax applied to the item."""
  amount: Money!

  """The description of the tax."""
  label: String!
}

"""An error encountered while adding an item to the the cart."""
type CartUserInputError {
  """A cart-specific error code."""
  code: CartUserInputErrorType!

  """A localized error message."""
  message: String!
}

enum CartUserInputErrorType {
  PRODUCT_NOT_FOUND
  NOT_SALABLE
  INSUFFICIENT_STOCK
  UNDEFINED
}

"""
Defines the filters to be used in the search. A filter contains at least one
attribute, a comparison operator, and the value that is being searched for.
"""
input CategoryFilterInput {
  """Filter by the unique category ID for a `CategoryInterface` object."""
  category_uid: FilterEqualTypeInput

  """
  Deprecated: use 'category_uid' to filter uniquely identifiers of categories.
  """
  ids: FilterEqualTypeInput

  """Filter by the display name of the category."""
  name: FilterMatchTypeInput

  """
  Filter by the unique parent category ID for a `CategoryInterface` object.
  """
  parent_category_uid: FilterEqualTypeInput

  """
  Filter by the unique parent category ID for a `CategoryInterface` object.
  """
  parent_id: FilterEqualTypeInput

  """Filter by the part of the URL that identifies the category."""
  url_key: FilterEqualTypeInput

  """Filter by the URL path for the category."""
  url_path: FilterEqualTypeInput
}

"""
Contains the full set of attributes that can be returned in a category search.
"""
interface CategoryInterface {
  available_sort_by: [String]

  """An array of breadcrumb items."""
  breadcrumbs: [Breadcrumb]

  """
  The relative canonical URL. This value is returned only if the system setting
  'Use Canonical Link Meta Tag For Categories' is enabled.
  """
  canonical_url: String
  children_count: String

  """Contains a category CMS block."""
  cms_block: CmsBlock

  """The timestamp indicating when the category was created."""
  created_at: String @deprecated(reason: "The field should not be used on the storefront.")
  custom_layout_update_file: String

  """The attribute to use for sorting."""
  default_sort_by: String

  """An optional description of the category."""
  description: String
  display_mode: String
  filter_price_range: Float

  """An ID that uniquely identifies the category."""
  id: Int @deprecated(reason: "Use `uid` instead.")
  image: String
  include_in_menu: Int
  is_anchor: Int
  landing_page: Int

  """The depth of the category within the tree."""
  level: Int
  meta_description: String
  meta_keywords: String
  meta_title: String

  """The display name of the category."""
  name: String

  """The full category path."""
  path: String

  """The category path within the store."""
  path_in_store: String

  """
  The position of the category relative to other categories at the same level in tree.
  """
  position: Int

  """
  The number of products in the category that are marked as visible. By default,
  in complex products, parent products are visible, but their child products are not.
  """
  product_count: Int

  """The list of products assigned to the category."""
  products(
    """
    The maximum number of results to return at once. The default value is 20.
    """
    pageSize: Int = 20

    """The page of results to return. The default value is 1."""
    currentPage: Int = 1

    """
    The attributes to sort on, and whether to return the results in ascending or descending order.
    """
    sort: ProductAttributeSortInput
  ): CategoryProducts

  """The unique ID for a `CategoryInterface` object."""
  uid: ID!

  """The timestamp indicating when the category was updated."""
  updated_at: String @deprecated(reason: "The field should not be used on the storefront.")

  """The URL key assigned to the category."""
  url_key: String

  """The URL path assigned to the category."""
  url_path: String

  """The part of the category URL that is appended after the url key"""
  url_suffix: String
}

"""Contains details about the products assigned to a category."""
type CategoryProducts {
  """An array of products that are assigned to the category."""
  items: [ProductInterface]

  """Pagination metadata."""
  page_info: SearchResultPageInfo

  """
  The number of products in the category that are marked as visible. By default,
  in complex products, parent products are visible, but their child products are not.
  """
  total_count: Int
}

"""
Contains a collection of `CategoryTree` objects and pagination information.
"""
type CategoryResult {
  """A list of categories that match the filter criteria."""
  items: [CategoryTree]

  """
  An object that includes the `page_info` and `currentPage` values specified in the query.
  """
  page_info: SearchResultPageInfo

  """The total number of categories that match the criteria."""
  total_count: Int
}

"""Contains the hierarchy of categories."""
type CategoryTree implements CategoryInterface & RoutableInterface {
  available_sort_by: [String]

  """An array of breadcrumb items."""
  breadcrumbs: [Breadcrumb]

  """
  The relative canonical URL. This value is returned only if the system setting
  'Use Canonical Link Meta Tag For Categories' is enabled.
  """
  canonical_url: String

  """A tree of child categories."""
  children: [CategoryTree]
  children_count: String

  """Contains a category CMS block."""
  cms_block: CmsBlock

  """The timestamp indicating when the category was created."""
  created_at: String @deprecated(reason: "The field should not be used on the storefront.")
  custom_layout_update_file: String

  """The attribute to use for sorting."""
  default_sort_by: String

  """An optional description of the category."""
  description: String
  display_mode: String
  filter_price_range: Float

  """An ID that uniquely identifies the category."""
  id: Int @deprecated(reason: "Use `uid` instead.")
  image: String
  include_in_menu: Int
  is_anchor: Int
  landing_page: Int

  """The depth of the category within the tree."""
  level: Int
  meta_description: String
  meta_keywords: String
  meta_title: String

  """The display name of the category."""
  name: String

  """The full category path."""
  path: String

  """The category path within the store."""
  path_in_store: String

  """
  The position of the category relative to other categories at the same level in tree.
  """
  position: Int

  """
  The number of products in the category that are marked as visible. By default,
  in complex products, parent products are visible, but their child products are not.
  """
  product_count: Int

  """The list of products assigned to the category."""
  products(
    """
    The maximum number of results to return at once. The default value is 20.
    """
    pageSize: Int = 20

    """The page of results to return. The default value is 1."""
    currentPage: Int = 1

    """
    The attributes to sort on, and whether to return the results in ascending or descending order.
    """
    sort: ProductAttributeSortInput
  ): CategoryProducts

  """
  Contains 0 when there is no redirect error. A value of 301 indicates the URL
  of the requested resource has been changed permanently, while a value of 302
  indicates a temporary redirect.
  """
  redirect_code: Int!

  """
  The internal relative URL. If the specified URL is a redirect, the query returns the redirected URL, not the original.
  """
  relative_url: String

  """One of PRODUCT, CATEGORY, or CMS_PAGE."""
  type: UrlRewriteEntityTypeEnum

  """The unique ID for a `CategoryInterface` object."""
  uid: ID!

  """The timestamp indicating when the category was updated."""
  updated_at: String @deprecated(reason: "The field should not be used on the storefront.")

  """The URL key assigned to the category."""
  url_key: String

  """The URL path assigned to the category."""
  url_path: String

  """The part of the category URL that is appended after the url key"""
  url_suffix: String
}

input ChangeCustomFieldsAmRmaInput {
  """Fullfilled custom fields list"""
  custom_fields: [AmRmaCustomFieldInput]

  """RMA Request ID."""
  request_id: Int
}

type ChangeCustomFieldsRmaOutput {
  success: Boolean!
}

"""Defines details about an individual checkout agreement."""
type CheckoutAgreement {
  """The ID for a checkout agreement."""
  agreement_id: Int!

  """The checkbox text for the checkout agreement."""
  checkbox_text: String!

  """Required. The text of the agreement."""
  content: String!

  """
  The height of the text box where the Terms and Conditions statement appears during checkout.
  """
  content_height: String

  """Indicates whether the `content` text is in HTML format."""
  is_html: Boolean!

  """Indicates whether agreements are accepted automatically or manually."""
  mode: CheckoutAgreementMode!

  """The name given to the condition."""
  name: String!
}

"""Indicates how agreements are accepted."""
enum CheckoutAgreementMode {
  """Conditions are automatically accepted upon checkout."""
  AUTO

  """Shoppers must manually accept the conditions to place an order."""
  MANUAL
}

"""An error encountered while adding an item to the cart."""
type CheckoutUserInputError {
  """An error code that is specific to Checkout."""
  code: CheckoutUserInputErrorCodes!

  """A localized error message."""
  message: String!

  """
  The path to the input field that caused an error. See the GraphQL
  specification about path errors for details:
  http://spec.graphql.org/draft/#sec-Errors
  """
  path: [String]!
}

enum CheckoutUserInputErrorCodes {
  REORDER_NOT_AVAILABLE
  PRODUCT_NOT_FOUND
  NOT_SALABLE
  INSUFFICIENT_STOCK
  UNDEFINED
}

"""Contains details about a specific CMS block."""
type CmsBlock {
  """The content of the CMS block in raw HTML."""
  content: String

  """The CMS block identifier."""
  identifier: String

  """The title assigned to the CMS block."""
  title: String
}

"""Contains an array CMS block items."""
type CmsBlocks {
  """An array of CMS blocks."""
  items: [CmsBlock]
}

"""Contains details about a CMS page."""
type CmsPage implements RoutableInterface {
  """The content of the CMS page in raw HTML."""
  content: String

  """The heading that displays at the top of the CMS page."""
  content_heading: String

  """The ID of a CMS page."""
  identifier: String

  """A brief description of the page for search results listings."""
  meta_description: String

  """A brief description of the page for search results listings."""
  meta_keywords: String

  """
  A page title that is indexed by search engines and appears in search results listings.
  """
  meta_title: String

  """
  The design layout of the page, indicating the number of columns and navigation features used on the page.
  """
  page_layout: String

  """
  Contains 0 when there is no redirect error. A value of 301 indicates the URL
  of the requested resource has been changed permanently, while a value of 302
  indicates a temporary redirect.
  """
  redirect_code: Int!

  """
  The internal relative URL. If the specified URL is a redirect, the query returns the redirected URL, not the original.
  """
  relative_url: String

  """
  The name that appears in the breadcrumb trail navigation and in the browser title bar and tab.
  """
  title: String

  """One of PRODUCT, CATEGORY, or CMS_PAGE."""
  type: UrlRewriteEntityTypeEnum

  """
  The URL key of the CMS page, which is often based on the `content_heading`.
  """
  url_key: String
}

type ColorSwatchData implements SwatchDataInterface {
  """The value can be represented as color (HEX code), image link, or text."""
  value: String
}

"""Contains an attribute code that is used for product comparisons."""
type ComparableAttribute {
  """An attribute code that is enabled for product comparisons."""
  code: String!

  """The label of the attribute code."""
  label: String!
}

"""
Defines an object used to iterate through items for product comparisons.
"""
type ComparableItem {
  """An array of product attributes that can be used to compare products."""
  attributes: [ProductAttribute]!

  """Details about a product in a compare list."""
  product: ProductInterface!

  """The unique ID of an item in a compare list."""
  uid: ID!
}

"""
Contains iterable information such as the array of items, the count, and attributes that represent the compare list.
"""
type CompareList {
  """An array of attributes that can be used for comparing products."""
  attributes: [ComparableAttribute]

  """The number of items in the compare list."""
  item_count: Int!

  """An array of products to compare."""
  items: [ComparableItem]

  """The unique ID assigned to the compare list."""
  uid: ID!
}

type ComplexTextValue {
  """Text that can contain HTML tags."""
  html: String!
}

"""Contains details about a configurable product attribute option."""
type ConfigurableAttributeOption {
  """The ID assigned to the attribute."""
  code: String

  """A string that describes the configurable attribute option."""
  label: String

  """The unique ID for a `ConfigurableAttributeOption` object."""
  uid: ID!

  """A unique index number assigned to the configurable product option."""
  value_index: Int
}

"""An implementation for configurable product cart items."""
type ConfigurableCartItem implements CartItemInterface {
  """An array of product return messages."""
  amrma_return_info: [AmRmaProductReturnMessage]

  """An array containing the configuranle options the shopper selected."""
  configurable_options: [SelectedConfigurableOption]!

  """Product details of the cart item."""
  configured_variant: ProductInterface!

  """An array containing the customizable options the shopper selected."""
  customizable_options: [SelectedCustomizableOption]

  """An array of errors encountered while loading the cart item"""
  errors: [CartItemError]

  """The entered gift message for the cart item"""
  gift_message: GiftMessage
  id: String! @deprecated(reason: "Use `uid` instead.")

  """
  Contains details about the price of the item, including taxes and discounts.
  """
  prices: CartItemPrices

  """Details about an item in the cart."""
  product: ProductInterface!

  """The quantity of this item in the cart."""
  quantity: Float!

  """Contains details about the seller of the item"""
  seller: Retailer

  """The unique ID for a `CartItemInterface` object."""
  uid: ID!
}

"""
Describes configurable options that have been selected and can be selected as a result of the previous selections.
"""
type ConfigurableOptionAvailableForSelection {
  """An attribute code that uniquely identifies a configurable option."""
  attribute_code: String!

  """An array of selectable option value IDs."""
  option_value_uids: [ID]!
}

"""
Defines basic features of a configurable product and its simple product variants.
"""
type ConfigurableProduct implements ProductInterface & RoutableInterface & PhysicalProductInterface & CustomizableProductInterface {
  accessory_announcement_date: String
  accessory_brand: Int
  accessory_custom_engraving_text: String
  accessory_description_detailed_extra: String
  accessory_description_extra: String
  accessory_description_pagebuilder_extra: String
  accessory_gemstone_addon: String
  accessory_recyclable_material: Int
  activity: String

  """An array of product return messages."""
  amrma_return_info: [AmRmaProductReturnMessage]

  """The attribute set assigned to the product."""
  attribute_set_id: Int @deprecated(reason: "The field should not be used on the storefront.")
  brand: Int

  """
  The relative canonical URL. This value is returned only if the system setting
  'Use Canonical Link Meta Tag For Products' is enabled.
  """
  canonical_url: String

  """The categories assigned to a product."""
  categories: [CategoryInterface]
  color: Int

  """An array of options for the configurable product."""
  configurable_options: [ConfigurableProductOptions]

  """
  An array of media gallery items and other details about selected configurable
  product options as well as details about remaining selectable options.
  """
  configurable_product_options_selection(configurableOptionValueUids: [ID!]): ConfigurableProductOptionsSelection

  """The product's country of origin."""
  country_of_manufacture: String

  """Timestamp indicating when the product was created."""
  created_at: String @deprecated(reason: "The field should not be used on the storefront.")

  """Crosssell Products"""
  crosssell_products: [ProductInterface]

  """List of product custom attributes details."""
  custom_attributes: [CustomAttribute]!

  """
  Detailed information about the product. The value can include simple HTML tags.
  """
  description: ComplexTextValue
  description_extra: String
  description_test: String
  discount_percentage: Float
  fashion_color: Int
  fashion_material: String
  fashion_size: Int
  fashion_style: String
  format: Int

  """Indicates whether a gift message is available."""
  gift_message_available: String
  has_video: Int

  """The ID number assigned to the product."""
  id: Int @deprecated(reason: "Use the `uid` field instead.")

  """The relative path to the main image on the product page."""
  image: ProductImage

  """A number representing the product's manufacturer."""
  manufacturer: Int

  """An array of media gallery objects."""
  media_gallery: [MediaGalleryInterface]

  """An array of MediaGalleryEntry objects."""
  media_gallery_entries: [MediaGalleryEntry] @deprecated(reason: "Use `media_gallery` instead.")

  """
  A brief overview of the product for search results listings, maximum 255 characters.
  """
  meta_description: String

  """
  A comma-separated list of keywords that are visible only to search engines.
  """
  meta_keyword: String

  """
  A string that is displayed in the title bar and tab of the browser and in search results lists.
  """
  meta_title: String

  """The product name. Customers use this name to identify the product."""
  name: String

  """
  The beginning date for new product listings, and determines if the product is featured as a new product.
  """
  new_from_date: String @deprecated(reason: "The field should not be used on the storefront.")

  """The end date for new product listings."""
  new_to_date: String @deprecated(reason: "The field should not be used on the storefront.")

  """Product stock only x left count"""
  only_x_left_in_stock: Float

  """An array of options for a customizable product."""
  options: [CustomizableOptionInterface]

  """
  If the product has multiple options, determines where they appear on the product page.
  """
  options_container: String

  """Indicates the price of an item."""
  price: ProductPrices @deprecated(reason: "Use `price_range` for product price information.")

  """The range of prices for the product"""
  price_range: PriceRange!

  """An array of `TierPrice` objects."""
  price_tiers: [TierPrice]

  """An array of `ProductLinks` objects."""
  product_links: [ProductLinksInterface]

  """The average of all the ratings given to the product."""
  rating_summary: Float!

  """
  Contains 0 when there is no redirect error. A value of 301 indicates the URL
  of the requested resource has been changed permanently, while a value of 302
  indicates a temporary redirect.
  """
  redirect_code: Int!

  """An array of products to be displayed in a Related Products block."""
  related_products: [ProductInterface]

  """
  The internal relative URL. If the specified URL is a redirect, the query returns the redirected URL, not the original.
  """
  relative_url: String

  """The total count of all the reviews given to the product."""
  review_count: Int!

  """The list of products reviews."""
  reviews(
    """The maximum number of results to return at once. The default is 20."""
    pageSize: Int = 20

    """The page of results to return. The default is 1."""
    currentPage: Int = 1
  ): ProductReviews!
  seller_id: Int

  """A short description of the product. Its use depends on the theme."""
  short_description: ComplexTextValue

  """
  A number or code assigned to a product to identify the product, options, price, and manufacturer.
  """
  sku: String

  """The relative path to the small image, which is used on catalog pages."""
  small_image: ProductImage

  """The beginning date that a product has a special price."""
  special_from_date: String @deprecated(reason: "The field should not be used on the storefront.")

  """The discounted price of the product."""
  special_price: Float

  """The end date for a product with a special price."""
  special_to_date: String

  """Stock status of the product"""
  stock_status: ProductStockStatus

  """The file name of a swatch image."""
  swatch_image: String

  """The relative path to the product's thumbnail image."""
  thumbnail: ProductImage

  """
  The price when tier pricing is in effect and the items purchased threshold has been reached.
  """
  tier_price: Float @deprecated(reason: "Use `price_tiers` for product tier price information.")

  """An array of ProductTierPrices objects."""
  tier_prices: [ProductTierPrices] @deprecated(reason: "Use `price_tiers` for product tier price information.")

  """One of PRODUCT, CATEGORY, or CMS_PAGE."""
  type: UrlRewriteEntityTypeEnum

  """
  One of simple, virtual, bundle, downloadable, grouped, or configurable.
  """
  type_id: String @deprecated(reason: "Use `__typename` instead.")

  """The unique ID for a `ProductInterface` object."""
  uid: ID!

  """Timestamp indicating when the product was updated."""
  updated_at: String @deprecated(reason: "The field should not be used on the storefront.")

  """Upsell Products"""
  upsell_products: [ProductInterface]

  """The part of the URL that identifies the product"""
  url_key: String
  url_path: String @deprecated(reason: "Use product's `canonical_url` or url rewrites instead")

  """URL rewrites list"""
  url_rewrites: [UrlRewrite]

  """The part of the product URL that is appended after the url key"""
  url_suffix: String

  """An array of simple product variants."""
  variants: [ConfigurableVariant]
  video_file: String

  """An array of websites in which the product is available."""
  websites: [Website] @deprecated(reason: "The field should not be used on the storefront.")

  """The weight of the item, in units defined by the store."""
  weight: Float
}

input ConfigurableProductCartItemInput {
  """The ID and value of the option."""
  customizable_options: [CustomizableOptionInput]

  """The quantity and SKU of the configurable product."""
  data: CartItemInput!

  """The SKU of the parent configurable product."""
  parent_sku: String

  """Deprecated. Use `CartItemInput.sku` instead."""
  variant_sku: String
}

"""Contains details about configurable product options."""
type ConfigurableProductOption {
  """An attribute code that uniquely identifies a configurable option."""
  attribute_code: String!

  """The display name of the option."""
  label: String!

  """The unique ID of the configurable option."""
  uid: ID!

  """An array of values that are applicable for this option."""
  values: [ConfigurableProductOptionValue]
}

"""Defines configurable attributes for the specified product."""
type ConfigurableProductOptions {
  """A string that identifies the attribute."""
  attribute_code: String

  """The ID assigned to the attribute."""
  attribute_id: String @deprecated(reason: "Use `attribute_uid` instead.")

  """The ID assigned to the attribute."""
  attribute_id_v2: Int @deprecated(reason: "Use `attribute_uid` instead.")

  """The unique ID for an `Attribute` object."""
  attribute_uid: ID!

  """The configurable option ID number assigned by the system."""
  id: Int @deprecated(reason: "Use `uid` instead.")

  """A displayed string that describes the configurable product option."""
  label: String

  """A number that indicates the order in which the attribute is displayed."""
  position: Int

  """This is the same as a product's `id` field."""
  product_id: Int @deprecated(reason: "`product_id` is not needed and can be obtained from its parent.")

  """The unique ID for a `ConfigurableProductOptions` object."""
  uid: ID!

  """Indicates whether the option is the default."""
  use_default: Boolean

  """
  An array that defines the `value_index` codes assigned to the configurable product.
  """
  values: [ConfigurableProductOptionsValues]
}

"""Contains metadata corresponding to the selected configurable options."""
type ConfigurableProductOptionsSelection {
  """An array of all possible configurable options."""
  configurable_options: [ConfigurableProductOption]

  """
  Product images and videos corresponding to the specified configurable options selection.
  """
  media_gallery: [MediaGalleryInterface]

  """
  The configurable options available for further selection based on the current selection.
  """
  options_available_for_selection: [ConfigurableOptionAvailableForSelection]

  """
  A variant represented by the specified configurable options selection. The
  value is expected to be null until selections are made for each configurable option.
  """
  variant: SimpleProduct
}

"""Contains the index number assigned to a configurable product option."""
type ConfigurableProductOptionsValues {
  """The label of the product on the default store."""
  default_label: String

  """The label of the product."""
  label: String

  """The label of the product on the current store."""
  store_label: String

  """Swatch data for a configurable product option."""
  swatch_data: SwatchDataInterface

  """The unique ID for a `ConfigurableProductOptionsValues` object."""
  uid: ID

  """Indicates whether to use the default_label."""
  use_default_value: Boolean

  """A unique index number assigned to the configurable product option."""
  value_index: Int @deprecated(reason: "Use `uid` instead.")
}

"""Defines a value for a configurable product option."""
type ConfigurableProductOptionValue {
  """Indicates whether the product is available with this selected option."""
  is_available: Boolean!

  """Indicates whether the value is the default."""
  is_use_default: Boolean!

  """The display name of the value."""
  label: String!

  """The URL assigned to the thumbnail of the swatch image."""
  swatch: SwatchDataInterface

  """The unique ID of the value."""
  uid: ID!
}

"""Contains all the simple product variants of a configurable product."""
type ConfigurableVariant {
  """An array of configurable attribute options."""
  attributes: [ConfigurableAttributeOption]

  """An array of linked simple products."""
  product: SimpleProduct
}

"""A configurable product wish list item."""
type ConfigurableWishlistItem implements WishlistItemInterface {
  """The date and time the item was added to the wish list."""
  added_at: String!

  """
  The SKU of the simple product corresponding to a set of selected configurable options.
  """
  child_sku: String!

  """An array of selected configurable options."""
  configurable_options: [SelectedConfigurableOption]

  """Custom options selected for the wish list item."""
  customizable_options: [SelectedCustomizableOption]!

  """The description of the item."""
  description: String

  """The unique ID for a `WishlistItemInterface` object."""
  id: ID!

  """Product details of the wish list item."""
  product: ProductInterface

  """The quantity of this wish list item."""
  quantity: Float!
}

input ContactUsInput {
  """The shopper's comment to the merchant."""
  comment: String!

  """The email address of the shopper."""
  email: String!

  """The full name of the shopper."""
  name: String!

  """The shopper's telephone number."""
  telephone: String
}

"""Contains the status of the request."""
type ContactUsOutput {
  """Indicates whether the request was successful."""
  status: Boolean!
}

type Coordinate {
  """Latitude"""
  latitude: Float

  """Longitude"""
  longitude: Float
}

type Country {
  """An array of regions within a particular country."""
  available_regions: [Region]

  """The name of the country in English."""
  full_name_english: String

  """The name of the country in the current locale."""
  full_name_locale: String

  """The unique ID for a `Country` object."""
  id: String

  """The three-letter abbreviation of the country, such as USA."""
  three_letter_abbreviation: String

  """The two-letter abbreviation of the country, such as US."""
  two_letter_abbreviation: String
}

"""The list of country codes."""
enum CountryCodeEnum {
  """Afghanistan"""
  AF

  """Ã…land Islands"""
  AX

  """Albania"""
  AL

  """Algeria"""
  DZ

  """American Samoa"""
  AS

  """Andorra"""
  AD

  """Angola"""
  AO

  """Anguilla"""
  AI

  """Antarctica"""
  AQ

  """Antigua & Barbuda"""
  AG

  """Argentina"""
  AR

  """Armenia"""
  AM

  """Aruba"""
  AW

  """Australia"""
  AU

  """Austria"""
  AT

  """Azerbaijan"""
  AZ

  """Bahamas"""
  BS

  """Bahrain"""
  BH

  """Bangladesh"""
  BD

  """Barbados"""
  BB

  """Belarus"""
  BY

  """Belgium"""
  BE

  """Belize"""
  BZ

  """Benin"""
  BJ

  """Bermuda"""
  BM

  """Bhutan"""
  BT

  """Bolivia"""
  BO

  """Bosnia & Herzegovina"""
  BA

  """Botswana"""
  BW

  """Bouvet Island"""
  BV

  """Brazil"""
  BR

  """British Indian Ocean Territory"""
  IO

  """British Virgin Islands"""
  VG

  """Brunei"""
  BN

  """Bulgaria"""
  BG

  """Burkina Faso"""
  BF

  """Burundi"""
  BI

  """Cambodia"""
  KH

  """Cameroon"""
  CM

  """Canada"""
  CA

  """Cape Verde"""
  CV

  """Cayman Islands"""
  KY

  """Central African Republic"""
  CF

  """Chad"""
  TD

  """Chile"""
  CL

  """China"""
  CN

  """Christmas Island"""
  CX

  """Cocos (Keeling) Islands"""
  CC

  """Colombia"""
  CO

  """Comoros"""
  KM

  """Congo-Brazzaville"""
  CG

  """Congo-Kinshasa"""
  CD

  """Cook Islands"""
  CK

  """Costa Rica"""
  CR

  """CÃ´te dâ€™Ivoire"""
  CI

  """Croatia"""
  HR

  """Cuba"""
  CU

  """Cyprus"""
  CY

  """Czech Republic"""
  CZ

  """Denmark"""
  DK

  """Djibouti"""
  DJ

  """Dominica"""
  DM

  """Dominican Republic"""
  DO

  """Ecuador"""
  EC

  """Egypt"""
  EG

  """El Salvador"""
  SV

  """Equatorial Guinea"""
  GQ

  """Eritrea"""
  ER

  """Estonia"""
  EE

  """Ethiopia"""
  ET

  """Falkland Islands"""
  FK

  """Faroe Islands"""
  FO

  """Fiji"""
  FJ

  """Finland"""
  FI

  """France"""
  FR

  """French Guiana"""
  GF

  """French Polynesia"""
  PF

  """French Southern Territories"""
  TF

  """Gabon"""
  GA

  """Gambia"""
  GM

  """Georgia"""
  GE

  """Germany"""
  DE

  """Ghana"""
  GH

  """Gibraltar"""
  GI

  """Greece"""
  GR

  """Greenland"""
  GL

  """Grenada"""
  GD

  """Guadeloupe"""
  GP

  """Guam"""
  GU

  """Guatemala"""
  GT

  """Guernsey"""
  GG

  """Guinea"""
  GN

  """Guinea-Bissau"""
  GW

  """Guyana"""
  GY

  """Haiti"""
  HT

  """Heard &amp; McDonald Islands"""
  HM

  """Honduras"""
  HN

  """Hong Kong SAR China"""
  HK

  """Hungary"""
  HU

  """Iceland"""
  IS

  """India"""
  IN

  """Indonesia"""
  ID

  """Iran"""
  IR

  """Iraq"""
  IQ

  """Ireland"""
  IE

  """Isle of Man"""
  IM

  """Israel"""
  IL

  """Italy"""
  IT

  """Jamaica"""
  JM

  """Japan"""
  JP

  """Jersey"""
  JE

  """Jordan"""
  JO

  """Kazakhstan"""
  KZ

  """Kenya"""
  KE

  """Kiribati"""
  KI

  """Kuwait"""
  KW

  """Kyrgyzstan"""
  KG

  """Laos"""
  LA

  """Latvia"""
  LV

  """Lebanon"""
  LB

  """Lesotho"""
  LS

  """Liberia"""
  LR

  """Libya"""
  LY

  """Liechtenstein"""
  LI

  """Lithuania"""
  LT

  """Luxembourg"""
  LU

  """Macau SAR China"""
  MO

  """Macedonia"""
  MK

  """Madagascar"""
  MG

  """Malawi"""
  MW

  """Malaysia"""
  MY

  """Maldives"""
  MV

  """Mali"""
  ML

  """Malta"""
  MT

  """Marshall Islands"""
  MH

  """Martinique"""
  MQ

  """Mauritania"""
  MR

  """Mauritius"""
  MU

  """Mayotte"""
  YT

  """Mexico"""
  MX

  """Micronesia"""
  FM

  """Moldova"""
  MD

  """Monaco"""
  MC

  """Mongolia"""
  MN

  """Montenegro"""
  ME

  """Montserrat"""
  MS

  """Morocco"""
  MA

  """Mozambique"""
  MZ

  """Myanmar (Burma)"""
  MM

  """Namibia"""
  NA

  """Nauru"""
  NR

  """Nepal"""
  NP

  """Netherlands"""
  NL

  """Netherlands Antilles"""
  AN

  """New Caledonia"""
  NC

  """New Zealand"""
  NZ

  """Nicaragua"""
  NI

  """Niger"""
  NE

  """Nigeria"""
  NG

  """Niue"""
  NU

  """Norfolk Island"""
  NF

  """Northern Mariana Islands"""
  MP

  """North Korea"""
  KP

  """Norway"""
  NO

  """Oman"""
  OM

  """Pakistan"""
  PK

  """Palau"""
  PW

  """Palestinian Territories"""
  PS

  """Panama"""
  PA

  """Papua New Guinea"""
  PG

  """Paraguay"""
  PY

  """Peru"""
  PE

  """Philippines"""
  PH

  """Pitcairn Islands"""
  PN

  """Poland"""
  PL

  """Portugal"""
  PT

  """Qatar"""
  QA

  """RÃ©union"""
  RE

  """Romania"""
  RO

  """Russia"""
  RU

  """Rwanda"""
  RW

  """Samoa"""
  WS

  """San Marino"""
  SM

  """SÃ£o TomÃ© & PrÃ­ncipe"""
  ST

  """Saudi Arabia"""
  SA

  """Senegal"""
  SN

  """Serbia"""
  RS

  """Seychelles"""
  SC

  """Sierra Leone"""
  SL

  """Singapore"""
  SG

  """Slovakia"""
  SK

  """Slovenia"""
  SI

  """Solomon Islands"""
  SB

  """Somalia"""
  SO

  """South Africa"""
  ZA

  """South Georgia & South Sandwich Islands"""
  GS

  """South Korea"""
  KR

  """Spain"""
  ES

  """Sri Lanka"""
  LK

  """St. BarthÃ©lemy"""
  BL

  """St. Helena"""
  SH

  """St. Kitts & Nevis"""
  KN

  """St. Lucia"""
  LC

  """St. Martin"""
  MF

  """St. Pierre & Miquelon"""
  PM

  """St. Vincent & Grenadines"""
  VC

  """Sudan"""
  SD

  """Suriname"""
  SR

  """Svalbard & Jan Mayen"""
  SJ

  """Swaziland"""
  SZ

  """Sweden"""
  SE

  """Switzerland"""
  CH

  """Syria"""
  SY

  """Taiwan"""
  TW

  """Tajikistan"""
  TJ

  """Tanzania"""
  TZ

  """Thailand"""
  TH

  """Timor-Leste"""
  TL

  """Togo"""
  TG

  """Tokelau"""
  TK

  """Tonga"""
  TO

  """Trinidad & Tobago"""
  TT

  """Tunisia"""
  TN

  """Turkey"""
  TR

  """Turkmenistan"""
  TM

  """Turks & Caicos Islands"""
  TC

  """Tuvalu"""
  TV

  """Uganda"""
  UG

  """Ukraine"""
  UA

  """United Arab Emirates"""
  AE

  """United Kingdom"""
  GB

  """United States"""
  US

  """Uruguay"""
  UY

  """U.S. Outlying Islands"""
  UM

  """U.S. Virgin Islands"""
  VI

  """Uzbekistan"""
  UZ

  """Vanuatu"""
  VU

  """Vatican City"""
  VA

  """Venezuela"""
  VE

  """Vietnam"""
  VN

  """Wallis & Futuna"""
  WF

  """Western Sahara"""
  EH

  """Yemen"""
  YE

  """Zambia"""
  ZM

  """Zimbabwe"""
  ZW
}

"""Contains an array of product IDs to use for creating a compare list."""
input CreateCompareListInput {
  """An array of product IDs to add to the compare list."""
  products: [ID]
}

"""Assigns a specific `cart_id` to the empty cart."""
input createEmptyCartInput {
  """The ID to assign to the cart."""
  cart_id: String
}

"""
Contains the secure information used to authorize transaction. Applies to Payflow Pro and Payments Pro payment methods.
"""
type CreatePayflowProTokenOutput {
  """
  The RESPMSG returned by PayPal. If the `result` is `0`, then `response_message` is `Approved`.
  """
  response_message: String!

  """A non-zero value if any errors occurred."""
  result: Int!

  """
  The RESULT returned by PayPal. A value of `0` indicates the transaction was approved.
  """
  result_code: Int!

  """A secure token generated by PayPal."""
  secure_token: String!

  """A secure token ID generated by PayPal."""
  secure_token_id: String!
}

"""Defines a new product review."""
input CreateProductReviewInput {
  """The customer's nickname. Defaults to the customer name, if logged in."""
  nickname: String!

  """
  The ratings details by category. For example, Price: 5 stars, Quality: 4 stars, etc.
  """
  ratings: [ProductReviewRatingInput]!

  """The SKU of the reviewed product."""
  sku: String!

  """The summary (title) of the review."""
  summary: String!

  """The review text."""
  text: String!
}

"""Contains the completed product review."""
type CreateProductReviewOutput {
  """Product review details."""
  review: ProductReview!
}

"""Required fields for Payflow Pro and Payments Pro credit card payments."""
input CreditCardDetailsInput {
  """The credit card expiration month."""
  cc_exp_month: Int!

  """The credit card expiration year."""
  cc_exp_year: Int!

  """The last 4 digits of the credit card."""
  cc_last_4: Int!

  """The credit card type."""
  cc_type: String!
}

"""Contains credit memo details."""
type CreditMemo {
  """Comments on the credit memo."""
  comments: [SalesCommentItem]

  """The unique ID for a `CreditMemo` object."""
  id: ID!

  """An array containing details about refunded items."""
  items: [CreditMemoItemInterface]

  """The sequential credit memo number."""
  number: String!

  """Details about the total refunded amount."""
  total: CreditMemoTotal
}

type CreditMemoItem implements CreditMemoItemInterface {
  """
  Details about the final discount amount for the base product, including discounts on options.
  """
  discounts: [Discount]

  """The unique ID for a `CreditMemoItemInterface` object."""
  id: ID!

  """The order item the credit memo is applied to."""
  order_item: OrderItemInterface

  """The name of the base product."""
  product_name: String

  """The sale price for the base product, including selected options."""
  product_sale_price: Money!

  """The SKU of the base product."""
  product_sku: String!

  """The number of refunded items."""
  quantity_refunded: Float
}

"""Credit memo item details."""
interface CreditMemoItemInterface {
  """
  Details about the final discount amount for the base product, including discounts on options.
  """
  discounts: [Discount]

  """The unique ID for a `CreditMemoItemInterface` object."""
  id: ID!

  """The order item the credit memo is applied to."""
  order_item: OrderItemInterface

  """The name of the base product."""
  product_name: String

  """The sale price for the base product, including selected options."""
  product_sale_price: Money!

  """The SKU of the base product."""
  product_sku: String!

  """The number of refunded items."""
  quantity_refunded: Float
}

"""Contains credit memo price details."""
type CreditMemoTotal {
  """An adjustment manually applied to the order."""
  adjustment: Money!

  """The final base grand total amount in the base currency."""
  base_grand_total: Money!

  """The applied discounts to the credit memo."""
  discounts: [Discount]

  """The final total amount, including shipping, discounts, and taxes."""
  grand_total: Money!

  """Details about the shipping and handling costs for the credit memo."""
  shipping_handling: ShippingHandling

  """The subtotal of the invoice, excluding shipping, discounts, and taxes."""
  subtotal: Money!

  """The credit memo tax details."""
  taxes: [TaxItem]

  """The shipping amount for the credit memo."""
  total_shipping: Money!

  """The amount of tax applied to the credit memo."""
  total_tax: Money!
}

type Currency {
  """
  An array of three-letter currency codes accepted by the store, such as USD and EUR.
  """
  available_currency_codes: [String]

  """The base currency set for the store, such as USD."""
  base_currency_code: String

  """The symbol for the specified base currency, such as $."""
  base_currency_symbol: String
  default_display_currecy_code: String @deprecated(reason: "Symbol was missed. Use `default_display_currency_code`.")
  default_display_currecy_symbol: String @deprecated(reason: "Symbol was missed. Use `default_display_currency_code`.")

  """The currency that is displayed by default, such as USD."""
  default_display_currency_code: String

  """The currency symbol that is displayed by default, such as $."""
  default_display_currency_symbol: String

  """An array of exchange rates for currencies defined in the store."""
  exchange_rates: [ExchangeRate]
}

"""The list of available currency codes."""
enum CurrencyEnum {
  AFN
  ALL
  AZN
  DZD
  AOA
  ARS
  AMD
  AWG
  AUD
  BSD
  BHD
  BDT
  BBD
  BYN
  BZD
  BMD
  BTN
  BOB
  BAM
  BWP
  BRL
  GBP
  BND
  BGN
  BUK
  BIF
  KHR
  CAD
  CVE
  CZK
  KYD
  GQE
  CLP
  CNY
  COP
  KMF
  CDF
  CRC
  HRK
  CUP
  DKK
  DJF
  DOP
  XCD
  EGP
  SVC
  ERN
  EEK
  ETB
  EUR
  FKP
  FJD
  GMD
  GEK
  GEL
  GHS
  GIP
  GTQ
  GNF
  GYD
  HTG
  HNL
  HKD
  HUF
  ISK
  INR
  IDR
  IRR
  IQD
  ILS
  JMD
  JPY
  JOD
  KZT
  KES
  KWD
  KGS
  LAK
  LVL
  LBP
  LSL
  LRD
  LYD
  LTL
  MOP
  MKD
  MGA
  MWK
  MYR
  MVR
  LSM
  MRO
  MUR
  MXN
  MDL
  MNT
  MAD
  MZN
  MMK
  NAD
  NPR
  ANG
  YTL
  NZD
  NIC
  NGN
  KPW
  NOK
  OMR
  PKR
  PAB
  PGK
  PYG
  PEN
  PHP
  PLN
  QAR
  RHD
  RON
  RUB
  RWF
  SHP
  STD
  SAR
  RSD
  SCR
  SLL
  SGD
  SKK
  SBD
  SOS
  ZAR
  KRW
  LKR
  SDG
  SRD
  SZL
  SEK
  CHF
  SYP
  TWD
  TJS
  TZS
  THB
  TOP
  TTD
  TND
  TMM
  USD
  UGX
  UAH
  AED
  UYU
  UZS
  VUV
  VEB
  VEF
  VND
  CHE
  CHW
  XOF
  WST
  YER
  ZMK
  ZWD
  TRY
  AZM
  ROL
  TRL
  XPF
}

"""Contains custom attribute value and metadata details."""
type CustomAttribute {
  """Attribute metadata details."""
  attribute_metadata: AttributeMetadataInterface

  """
  Attribute value represented as entered data using input type like text field.
  """
  entered_attribute_value: EnteredAttributeValue

  """
  Attribute value represented as selected options using input type like select.
  """
  selected_attribute_options: SelectedAttributeOption
}

"""Defines an array of custom attributes."""
type CustomAttributeMetadata {
  """An array of attributes."""
  items: [Attribute]
}

enum CustomAttributesListsEnum {
  PRODUCT_DETAILS_PAGE
  PRODUCTS_LISTING
  PRODUCTS_COMPARE
  PRODUCT_SORT
  PRODUCT_FILTER
  PRODUCT_SEARCH_RESULTS_FILTER
  ADVANCED_CATALOG_SEARCH
}

"""Defines the customer name, addresses, and other details."""
type Customer {
  """An array containing the customer's shipping and billing addresses."""
  addresses: [CustomerAddress]

  """Indicates whether the customer has enabled remote shopping assistance."""
  allow_remote_shopping_assistance: Boolean!

  """Information about the customer's return requests."""
  amrma_returns(
    """
    Specifies the maximum number of results to return at once. The default value is 20
    """
    pageSize: Int = 10

    """Specifies which page of results to return. The default value is 1"""
    currentPage: Int = 1
  ): AmRmaReturns

  """The contents of the customer's compare list."""
  compare_list: CompareList

  """Timestamp indicating when the account was created."""
  created_at: String

  """The customer's date of birth."""
  date_of_birth: String

  """The ID assigned to the billing address."""
  default_billing: String

  """The ID assigned to the shipping address."""
  default_shipping: String

  """The customer's date of birth."""
  dob: String @deprecated(reason: "Use `date_of_birth` instead.")

  """The customer's email address. Required."""
  email: String

  """The customer's first name."""
  firstname: String

  """The customer's gender (Male - 1, Female - 2)."""
  gender: Int
  group_id: Int @deprecated(reason: "Customer group should not be exposed in the storefront scenarios.")

  """The ID assigned to the customer."""
  id: Int @deprecated(reason: "`id` is not needed as part of `Customer`, because on the server side, it can be identified based on the customer token used for authentication. There is no need to know customer ID on the client side.")

  """
  Indicates whether the customer is subscribed to the company's newsletter.
  """
  is_subscribed: Boolean

  """The customer's family name."""
  lastname: String

  """The customer's middle name."""
  middlename: String
  orders(
    """Defines the filter to use for searching customer orders."""
    filter: CustomerOrdersFilterInput

    """Specifies which page of results to return. The default value is 1."""
    currentPage: Int = 1

    """
    Specifies the maximum number of results to return at once. The default value is 20.
    """
    pageSize: Int = 20
  ): CustomerOrders

  """An honorific, such as Dr., Mr., or Mrs."""
  prefix: String

  """Contains the customer's product reviews."""
  reviews(
    """
    The maximum number of results to return at once. The default value is 20.
    """
    pageSize: Int = 20

    """The page of results to return. The default value is 1."""
    currentPage: Int = 1
  ): ProductReviews!

  """A value such as Sr., Jr., or III."""
  suffix: String

  """The customer's Value-added tax (VAT) number (for corporate customers)."""
  taxvat: String

  """Return a customer's wish lists."""
  wishlist: Wishlist! @deprecated(reason: "Use `Customer.wishlists` or `Customer.wishlist_v2` instead.")

  """
  Retrieve the wish list identified by the unique ID for a `Wishlist` object.
  """
  wishlist_v2(id: ID!): Wishlist

  """
  An array of wishlists. In Magento Open Source, customers are limited to one
  wish list. The number of wish lists is configurable for Adobe Commerce.
  """
  wishlists(
    """
    Specifies the maximum number of results to return at once. This attribute is optional.
    """
    pageSize: Int = 20

    """Specifies which page of results to return. The default value is 1."""
    currentPage: Int = 1
  ): [Wishlist]!
}

"""
Contains detailed information about a customer's billing or shipping address.
"""
type CustomerAddress {
  """The customer's city or town."""
  city: String

  """The customer's company."""
  company: String

  """The customer's country."""
  country_code: CountryCodeEnum

  """The customer's country."""
  country_id: String @deprecated(reason: "Use `country_code` instead.")
  custom_attributes: [CustomerAddressAttribute] @deprecated(reason: "Custom attributes should not be put into a container.")

  """The customer ID"""
  customer_id: Int @deprecated(reason: "`customer_id` is not needed as part of `CustomerAddress`. The `id` is a unique identifier for the addresses.")

  """
  Indicates whether the address is the customer's default billing address.
  """
  default_billing: Boolean

  """
  Indicates whether the address is the customer's default shipping address.
  """
  default_shipping: Boolean

  """Contains any extension attributes for the address."""
  extension_attributes: [CustomerAddressAttribute]

  """The customer's fax number."""
  fax: String

  """
  The first name of the person associated with the shipping/billing address.
  """
  firstname: String

  """The ID of a `CustomerAddress` object."""
  id: Int

  """
  The family name of the person associated with the shipping/billing address.
  """
  lastname: String

  """
  The middle name of the person associated with the shipping/billing address.
  """
  middlename: String

  """The customer's ZIP or postal code."""
  postcode: String

  """An honorific, such as Dr., Mr., or Mrs."""
  prefix: String

  """An object containing the region name, region code, and region ID."""
  region: CustomerAddressRegion

  """The unique ID for a pre-defined region."""
  region_id: Int

  """An array of strings that define the street number and name."""
  street: [String]

  """A value such as Sr., Jr., or III."""
  suffix: String

  """The customer's telephone number."""
  telephone: String

  """The customer's Value-added tax (VAT) number (for corporate customers)."""
  vat_id: String
}

"""
Specifies the attribute code and value of a customer address attribute.
"""
type CustomerAddressAttribute {
  """The name assigned to the customer address attribute."""
  attribute_code: String

  """The valuue assigned to the customer address attribute."""
  value: String
}

"""Specifies the attribute code and value of a customer attribute."""
input CustomerAddressAttributeInput {
  """The name assigned to the attribute."""
  attribute_code: String!

  """The value assigned to the attribute."""
  value: String!
}

"""Contains details about a billing or shipping address."""
input CustomerAddressInput {
  """The customer's city or town."""
  city: String

  """The customer's company."""
  company: String

  """The two-letter code representing the customer's country."""
  country_code: CountryCodeEnum

  """Deprecated: use `country_code` instead."""
  country_id: CountryCodeEnum

  """Deprecated: Custom attributes should not be put into container."""
  custom_attributes: [CustomerAddressAttributeInput]

  """Indicates whether the address is the default billing address."""
  default_billing: Boolean

  """Indicates whether the address is the default shipping address."""
  default_shipping: Boolean

  """The customer's fax number."""
  fax: String

  """
  The first name of the person associated with the billing/shipping address.
  """
  firstname: String

  """
  The family name of the person associated with the billing/shipping address.
  """
  lastname: String

  """
  The middle name of the person associated with the billing/shipping address.
  """
  middlename: String

  """The customer's ZIP or postal code."""
  postcode: String

  """An honorific, such as Dr., Mr., or Mrs."""
  prefix: String

  """An object containing the region name, region code, and region ID."""
  region: CustomerAddressRegionInput

  """An array of strings that define the street number and name."""
  street: [String]

  """A value such as Sr., Jr., or III."""
  suffix: String

  """The customer's telephone number."""
  telephone: String

  """The customer's Tax/VAT number (for corporate customers)."""
  vat_id: String
}

"""Defines the customer's state or province."""
type CustomerAddressRegion {
  """The state or province name."""
  region: String

  """The address region code."""
  region_code: String

  """The unique ID for a pre-defined region."""
  region_id: Int
}

"""Defines the customer's state or province."""
input CustomerAddressRegionInput {
  """The state or province name."""
  region: String

  """The address region code."""
  region_code: String

  """The unique ID for a pre-defined region."""
  region_id: Int
}

"""Customer Bank Account."""
type CustomerBankAccount {
  bank_name: String
  id: Int
  logo_image_url: String
  store_view_code: Int
}

"""An input object for creating a customer."""
input CustomerCreateInput {
  """Indicates whether the customer has enabled remote shopping assistance."""
  allow_remote_shopping_assistance: Boolean

  """The customer's date of birth."""
  date_of_birth: String

  """Deprecated: Use `date_of_birth` instead."""
  dob: String

  """The customer's email address."""
  email: String!

  """The customer's first name."""
  firstname: String!

  """The customer's gender (Male - 1, Female - 2)."""
  gender: Int

  """
  Indicates whether the customer is subscribed to the company's newsletter.
  """
  is_subscribed: Boolean

  """The customer's family name."""
  lastname: String!

  """The customer's middle name."""
  middlename: String

  """The customer's password."""
  password: String

  """An honorific, such as Dr., Mr., or Mrs."""
  prefix: String

  """A value such as Sr., Jr., or III."""
  suffix: String

  """The customer's Tax/VAT number (for corporate customers)."""
  taxvat: String
}

"""An input object that assigns or updates customer attributes."""
input CustomerInput {
  """The customer's date of birth."""
  date_of_birth: String

  """Deprecated: Use `date_of_birth` instead."""
  dob: String

  """The customer's email address. Required when creating a customer."""
  email: String

  """The customer's first name."""
  firstname: String

  """The customer's gender (Male - 1, Female - 2)."""
  gender: Int

  """
  Indicates whether the customer is subscribed to the company's newsletter.
  """
  is_subscribed: Boolean

  """The customer's family name."""
  lastname: String

  """The customer's middle name."""
  middlename: String

  """The customer's password."""
  password: String

  """An honorific, such as Dr., Mr., or Mrs."""
  prefix: String

  """A value such as Sr., Jr., or III."""
  suffix: String

  """The customer's Tax/VAT number (for corporate customers)."""
  taxvat: String
}

"""Contains details about each of the customer's orders."""
type CustomerOrder {
  """Is order allowed to be returned."""
  amrma_is_returnable: Boolean

  """The billing address for the order."""
  billing_address: OrderAddress

  """The shipping carrier for the order delivery."""
  carrier: String

  """Comments about the order."""
  comments: [SalesCommentItem]
  created_at: String @deprecated(reason: "Use the `order_date` field instead.")

  """A list of credit memos."""
  credit_memos: [CreditMemo]

  """The entered gift message for the order"""
  gift_message: GiftMessage
  grand_total: Float @deprecated(reason: "Use the `totals.grand_total` field instead.")

  """The unique ID for a `CustomerOrder` object."""
  id: ID!
  increment_id: String @deprecated(reason: "Use the `id` field instead.")

  """A list of invoices for the order."""
  invoices: [Invoice]!

  """An array containing the items purchased in this order."""
  items: [OrderItemInterface]

  """The order number."""
  number: String!

  """The date the order was placed."""
  order_date: String!
  order_number: String! @deprecated(reason: "Use the `number` field instead.")

  """Payment details for the order."""
  payment_methods: [OrderPaymentMethod]

  """A list of shipments for the order."""
  shipments: [OrderShipment]

  """The shipping address for the order."""
  shipping_address: OrderAddress

  """The delivery method for the order."""
  shipping_method: String

  """The current status of the order."""
  status: String!

  """The status code of the order."""
  status_code: String

  """The the one point earn of order."""
  the_1_point_earn: Float!

  """Details about the calculated totals for this order."""
  total: OrderTotal
}

"""
The collection of orders that match the conditions defined in the filter.
"""
type CustomerOrders {
  """An array of customer orders."""
  items: [CustomerOrder]!

  """Contains pagination metadata."""
  page_info: SearchResultPageInfo

  """The total count of customer orders."""
  total_count: Int
}

"""Identifies the filter to use for filtering orders."""
input CustomerOrdersFilterInput {
  """Filters by order number."""
  number: FilterStringTypeInput
}

"""
CustomerOrdersSortInput specifies attribute to use for sorting search results
and indicates whether the results are sorted in ascending or descending order.
"""
input CustomerOrdersSortInput {
  """Sort by order date."""
  order_date: SortEnum
}

"""Contains details about a newly-created or updated customer."""
type CustomerOutput {
  """Customer details after creating or updating a customer."""
  customer: Customer!
}

"""Contains payment tokens stored in the customer's vault."""
type CustomerPaymentTokens {
  """An array of payment tokens."""
  items: [PaymentToken]!
}

"""
The collection of shipment that match the conditions defined in the filter.
"""
type CustomerSalesShipments {
  """An array of customer shipments."""
  items: [OrderShipment]!

  """Contains pagination metadata."""
  page_info: SearchResultPageInfo

  """The total count of customer orders."""
  total_count: Int
}

"""
CustomerSalesShipmentSortInput specifies attribute to use for sorting search
results and indicates whether the results are sorted in ascending or descending order.
"""
input CustomerSalesShipmentSortInput {
  """Sort by order date."""
  order_date: SortEnum
}

"""Customer shipmment filter input type"""
input CustomerShipmentFilterInput {
  """Filters by shipping state."""
  shipping_state: FilterTypeInput
}

"""Contains a customer authorization token."""
type CustomerToken {
  """The customer authorization token."""
  token: String
}

"""An input object for updating a customer."""
input CustomerUpdateInput {
  """Indicates whether the customer has enabled remote shopping assistance."""
  allow_remote_shopping_assistance: Boolean

  """The customer's date of birth."""
  date_of_birth: String

  """Deprecated: Use `date_of_birth` instead."""
  dob: String

  """The customer's first name."""
  firstname: String

  """The customer's gender (Male - 1, Female - 2)."""
  gender: Int

  """
  Indicates whether the customer is subscribed to the company's newsletter.
  """
  is_subscribed: Boolean

  """The customer's family name."""
  lastname: String

  """The customer's middle name."""
  middlename: String

  """An honorific, such as Dr., Mr., or Mrs."""
  prefix: String

  """A value such as Sr., Jr., or III."""
  suffix: String

  """The customer's Tax/VAT number (for corporate customers)."""
  taxvat: String
}

"""
Contains information about a text area that is defined as part of a customizable option.
"""
type CustomizableAreaOption implements CustomizableOptionInterface {
  """Option ID."""
  option_id: Int @deprecated(reason: "Use `uid` instead")

  """The Stock Keeping Unit of the base product."""
  product_sku: String

  """Indicates whether the option is required."""
  required: Boolean

  """The order in which the option is displayed."""
  sort_order: Int

  """The display name for this option."""
  title: String

  """The unique ID for a `CustomizableOptionInterface` object."""
  uid: ID!

  """An object that defines a text area."""
  value: CustomizableAreaValue
}

"""
Defines the price and sku of a product whose page contains a customized text area.
"""
type CustomizableAreaValue {
  """
  The maximum number of characters that can be entered for this customizable option.
  """
  max_characters: Int

  """The price assigned to this option."""
  price: Float

  """FIXED, PERCENT, or DYNAMIC."""
  price_type: PriceTypeEnum

  """The Stock Keeping Unit for this option."""
  sku: String

  """The unique ID for a `CustomizableAreaValue` object."""
  uid: ID!
}

"""
Contains information about a set of checkbox values that are defined as part of a customizable option.
"""
type CustomizableCheckboxOption implements CustomizableOptionInterface {
  """Option ID."""
  option_id: Int @deprecated(reason: "Use `uid` instead")

  """Indicates whether the option is required."""
  required: Boolean

  """The order in which the option is displayed."""
  sort_order: Int

  """The display name for this option."""
  title: String

  """The unique ID for a `CustomizableOptionInterface` object."""
  uid: ID!

  """An array that defines a set of checkbox values."""
  value: [CustomizableCheckboxValue]
}

"""
Defines the price and sku of a product whose page contains a customized set of checkbox values.
"""
type CustomizableCheckboxValue {
  """The ID assigned to the value."""
  option_type_id: Int

  """The price assigned to this option."""
  price: Float

  """FIXED, PERCENT, or DYNAMIC."""
  price_type: PriceTypeEnum

  """The Stock Keeping Unit for this option."""
  sku: String

  """The order in which the checkbox value is displayed."""
  sort_order: Int

  """The display name for this option."""
  title: String

  """The unique ID for a `CustomizableCheckboxValue` object."""
  uid: ID!
}

"""
Contains information about a date picker that is defined as part of a customizable option.
"""
type CustomizableDateOption implements CustomizableOptionInterface {
  """Option ID."""
  option_id: Int @deprecated(reason: "Use `uid` instead")

  """The Stock Keeping Unit of the base product."""
  product_sku: String

  """Indicates whether the option is required."""
  required: Boolean

  """The order in which the option is displayed."""
  sort_order: Int

  """The display name for this option."""
  title: String

  """The unique ID for a `CustomizableOptionInterface` object."""
  uid: ID!

  """An object that defines a date field in a customizable option."""
  value: CustomizableDateValue
}

"""Defines the customizable date type."""
enum CustomizableDateTypeEnum {
  DATE
  DATE_TIME
  TIME
}

"""
Defines the price and sku of a product whose page contains a customized date picker.
"""
type CustomizableDateValue {
  """The price assigned to this option."""
  price: Float

  """FIXED, PERCENT, or DYNAMIC."""
  price_type: PriceTypeEnum

  """The Stock Keeping Unit for this option."""
  sku: String

  """DATE, DATE_TIME or TIME"""
  type: CustomizableDateTypeEnum

  """The unique ID for a `CustomizableDateValue` object."""
  uid: ID!
}

"""
Contains information about a drop down menu that is defined as part of a customizable option.
"""
type CustomizableDropDownOption implements CustomizableOptionInterface {
  """Option ID."""
  option_id: Int @deprecated(reason: "Use `uid` instead")

  """Indicates whether the option is required."""
  required: Boolean

  """The order in which the option is displayed."""
  sort_order: Int

  """The display name for this option."""
  title: String

  """The unique ID for a `CustomizableOptionInterface` object."""
  uid: ID!

  """An array that defines the set of options for a drop down menu."""
  value: [CustomizableDropDownValue]
}

"""
Defines the price and sku of a product whose page contains a customized drop down menu.
"""
type CustomizableDropDownValue {
  """The ID assigned to the value."""
  option_type_id: Int

  """The price assigned to this option."""
  price: Float

  """FIXED, PERCENT, or DYNAMIC."""
  price_type: PriceTypeEnum

  """The Stock Keeping Unit for this option."""
  sku: String

  """The order in which the option is displayed."""
  sort_order: Int

  """The display name for this option."""
  title: String

  """The unique ID for a `CustomizableDropDownValue` object."""
  uid: ID!
}

"""
Contains information about a text field that is defined as part of a customizable option.
"""
type CustomizableFieldOption implements CustomizableOptionInterface {
  """Option ID."""
  option_id: Int @deprecated(reason: "Use `uid` instead")

  """The Stock Keeping Unit of the base product."""
  product_sku: String

  """Indicates whether the option is required."""
  required: Boolean

  """The order in which the option is displayed."""
  sort_order: Int

  """The display name for this option."""
  title: String

  """The unique ID for a `CustomizableOptionInterface` object."""
  uid: ID!

  """An object that defines a text field."""
  value: CustomizableFieldValue
}

"""
Defines the price and sku of a product whose page contains a customized text field.
"""
type CustomizableFieldValue {
  """
  The maximum number of characters that can be entered for this customizable option.
  """
  max_characters: Int

  """The price of the custom value."""
  price: Float

  """FIXED, PERCENT, or DYNAMIC."""
  price_type: PriceTypeEnum

  """The Stock Keeping Unit for this option."""
  sku: String

  """The unique ID for a `CustomizableFieldValue` object."""
  uid: ID!
}

"""
Contains information about a file picker that is defined as part of a customizable option.
"""
type CustomizableFileOption implements CustomizableOptionInterface {
  """Option ID."""
  option_id: Int @deprecated(reason: "Use `uid` instead")

  """The Stock Keeping Unit of the base product."""
  product_sku: String

  """Indicates whether the option is required."""
  required: Boolean

  """The order in which the option is displayed."""
  sort_order: Int

  """The display name for this option."""
  title: String

  """The unique ID for a `CustomizableOptionInterface` object."""
  uid: ID!

  """An object that defines a file value."""
  value: CustomizableFileValue
}

"""
Defines the price and sku of a product whose page contains a customized file picker.
"""
type CustomizableFileValue {
  """The file extension to accept."""
  file_extension: String

  """The maximum width of an image."""
  image_size_x: Int

  """The maximum height of an image."""
  image_size_y: Int

  """The price assigned to this option."""
  price: Float

  """FIXED, PERCENT, or DYNAMIC."""
  price_type: PriceTypeEnum

  """The Stock Keeping Unit for this option."""
  sku: String

  """The unique ID for a `CustomizableFileValue` object."""
  uid: ID!
}

"""
Contains information about a multiselect that is defined as part of a customizable option.
"""
type CustomizableMultipleOption implements CustomizableOptionInterface {
  """Option ID."""
  option_id: Int @deprecated(reason: "Use `uid` instead")

  """Indicates whether the option is required."""
  required: Boolean

  """The order in which the option is displayed."""
  sort_order: Int

  """The display name for this option."""
  title: String

  """The unique ID for a `CustomizableOptionInterface` object."""
  uid: ID!

  """An array that defines the set of options for a multiselect."""
  value: [CustomizableMultipleValue]
}

"""
Defines the price and sku of a product whose page contains a customized multiselect.
"""
type CustomizableMultipleValue {
  """The ID assigned to the value."""
  option_type_id: Int

  """The price assigned to this option."""
  price: Float

  """FIXED, PERCENT, or DYNAMIC."""
  price_type: PriceTypeEnum

  """The Stock Keeping Unit for this option."""
  sku: String

  """The order in which the option is displayed."""
  sort_order: Int

  """The display name for this option."""
  title: String

  """The unique ID for a `CustomizableMultipleValue` object."""
  uid: ID!
}

"""Defines a customizable option."""
input CustomizableOptionInput {
  """The customizable option ID of the product."""
  id: Int

  """The string value of the option."""
  value_string: String!
}

"""
Contains basic information about a customizable option. It can be implemented by several types of configurable options.
"""
interface CustomizableOptionInterface {
  """Option ID."""
  option_id: Int @deprecated(reason: "Use `uid` instead")

  """Indicates whether the option is required."""
  required: Boolean

  """The order in which the option is displayed."""
  sort_order: Int

  """The display name for this option."""
  title: String

  """The unique ID for a `CustomizableOptionInterface` object."""
  uid: ID!
}

"""Contains information about customizable product options."""
interface CustomizableProductInterface {
  """An array of options for a customizable product."""
  options: [CustomizableOptionInterface]
}

"""
Contains information about a set of radio buttons that are defined as part of a customizable option.
"""
type CustomizableRadioOption implements CustomizableOptionInterface {
  """Option ID."""
  option_id: Int @deprecated(reason: "Use `uid` instead")

  """Indicates whether the option is required."""
  required: Boolean

  """The order in which the option is displayed."""
  sort_order: Int

  """The display name for this option."""
  title: String

  """The unique ID for a `CustomizableOptionInterface` object."""
  uid: ID!

  """An array that defines a set of radio buttons."""
  value: [CustomizableRadioValue]
}

"""
Defines the price and sku of a product whose page contains a customized set of radio buttons.
"""
type CustomizableRadioValue {
  """The ID assigned to the value."""
  option_type_id: Int

  """The price assigned to this option."""
  price: Float

  """FIXED, PERCENT, or DYNAMIC."""
  price_type: PriceTypeEnum

  """The Stock Keeping Unit for this option."""
  sku: String

  """The order in which the radio button is displayed."""
  sort_order: Int

  """The display name for this option."""
  title: String

  """The unique ID for a `CustomizableRadioValue` object."""
  uid: ID!
}

input DeleteAmRmaMessageInput {
  """Hash of Return Request."""
  hash: String!

  """Id of a Message to Delete."""
  message_id: Int!
}

"""Contains the results of the request to delete a compare list."""
type DeleteCompareListOutput {
  """Indicates whether the compare list was successfully deleted."""
  result: Boolean!
}

"""
Indicates whether the request succeeded and returns the remaining customer payment tokens.
"""
type DeletePaymentTokenOutput {
  """A container for the customer's remaining payment tokens."""
  customerPaymentTokens: CustomerPaymentTokens

  """Indicates whether the request succeeded."""
  result: Boolean!
}

"""
Defines an individual discount. A discount can be applied to the cart as a whole or to an item.
"""
type Discount {
  """The amount of the discount."""
  amount: Money!

  """A description of the discount."""
  label: String!
}

type EnteredAttributeValue {
  """Attribute value."""
  value: String
}

"""Defines a customer-entered option."""
input EnteredOptionInput {
  """
  The unique ID for a `CustomizableOptionInterface` object, such as a
  `CustomizableFieldOption`, `CustomizableFileOption`, or
  `CustomizableAreaOption` object.
  """
  uid: ID!

  """Text the customer entered."""
  value: String!
}

"""Contains the `uid`, `relative_url`, and `type` attributes."""
type EntityUrl {
  canonical_url: String @deprecated(reason: "Use `relative_url` instead.")

  """
  The unique ID for a `ProductInterface`, `CategoryInterface`, `CmsPage`, or
  similar object associated with the specified URL. This could be a product,
  category, or CMS page UID.
  """
  entity_uid: ID

  """
  The ID assigned to the object associated with the specified url. This could be a product ID, category ID, or page ID.
  """
  id: Int @deprecated(reason: "Use `entity_uid` instead.")

  """
  Contains 0 when there is no redirect error. A value of 301 indicates the URL
  of the requested resource has been changed permanently, while a value of 302
  indicates a temporary redirect.
  """
  redirectCode: Int

  """
  The internal relative URL. If the specified URL is a redirect, the query returns the redirected URL, not the original.
  """
  relative_url: String

  """One of PRODUCT, CATEGORY, or CMS_PAGE."""
  type: UrlRewriteEntityTypeEnum
}

interface ErrorInterface {
  """The returned error message."""
  message: String!
}

"""Lists the exchange rate."""
type ExchangeRate {
  """Specifies the storeâ€™s default currency to exchange to."""
  currency_to: String

  """The exchange rate for the storeâ€™s default currency."""
  rate: Float
}

"""Defines a filter that matches the input exactly."""
input FilterEqualTypeInput {
  """
  Use this attribute to exactly match the specified string. For example, to
  filter on a specific category ID, specify a value such as `5`.
  """
  eq: String

  """
  Use this attribute to filter on an array of values. For example, to filter on
  category IDs 4, 5, and 6, specify a value of `["4", "5", "6"]`.
  """
  in: [String]
}

"""Defines a filter that performs a fuzzy search."""
input FilterMatchTypeInput {
  """
  Use this attribute to exactly match the specified string. For example, to
  filter on a specific SKU, specify a value such as `24-MB01`.
  """
  match: String
}

"""
Defines a filter that matches a range of values, such as prices or dates.
"""
input FilterRangeTypeInput {
  """Use this attribute to specify the lowest possible value in the range."""
  from: String

  """Use this attribute to specify the highest possible value in the range."""
  to: String
}

"""Defines a filter for an input string."""
input FilterStringTypeInput {
  """Filters items that are exactly the same as the specified string."""
  eq: String

  """
  Filters items that are exactly the same as entries specified in an array of strings.
  """
  in: [String]

  """
  Defines a filter that performs a fuzzy search using the specified string.
  """
  match: String
}

"""Defines the comparison operators that can be used in a filter."""
input FilterTypeInput {
  """Equals."""
  eq: String
  finset: [String]

  """From. Must be used with the `to` field."""
  from: String

  """Greater than."""
  gt: String

  """Greater than or equal to."""
  gteq: String

  """In. The value can contain a set of comma-separated values."""
  in: [String]

  """
  Like. The specified value can contain % (percent signs) to allow matching of 0 or more characters.
  """
  like: String

  """Less than."""
  lt: String

  """Less than or equal to."""
  lteq: String

  """More than or equal to."""
  moreq: String

  """Not equal to."""
  neq: String

  """Not in. The value can contain a set of comma-separated values."""
  nin: [String]

  """Not null."""
  notnull: String

  """Is null."""
  null: String

  """To. Must be used with the `from` field."""
  to: String
}

"""A single FPT that can be applied to a product price."""
type FixedProductTax {
  """The amount of the Fixed Product Tax."""
  amount: Money

  """The display label assigned to the Fixed Product Tax."""
  label: String
}

"""Lists display settings for the Fixed Product Tax."""
enum FixedProductTaxDisplaySettings {
  """
  The displayed price includes the FPT amount without displaying the
  `ProductPrice.fixed_product_taxes` values. This value corresponds to
  'Including FPT only'.
  """
  INCLUDE_FPT_WITHOUT_DETAILS

  """
  The displayed price includes the FPT amount while displaying the values of
  `ProductPrice.fixed_product_taxes` separately. This value corresponds to
  'Including FPT and FPT description'.
  """
  INCLUDE_FPT_WITH_DETAILS

  """
  The displayed price does not include the FPT amount. The values of
  `ProductPrice.fixed_product_taxes` and the price including the FPT are
  displayed separately. This value corresponds to 'Excluding FPT, Including FPT
  description and final price.'
  """
  EXCLUDE_FPT_AND_INCLUDE_WITH_DETAILS

  """
  The displayed price does not include the FPT amount. The values from
  `ProductPrice.fixed_product_taxes` are not displayed. This value corresponds
  to 'Excluding FPT'.
  """
  EXCLUDE_FPT_WITHOUT_DETAILS

  """
  The FPT feature is not enabled. You can omit `ProductPrice.fixed_product_taxes` from your query.
  """
  FPT_DISABLED
}

"""Identifies which customer requires remote shopping assistance."""
input GenerateCustomerTokenAsAdminInput {
  """
  The email address of the customer requesting remote shopping assistance.
  """
  customer_email: String!
}

"""Contains the generated customer token."""
type GenerateCustomerTokenAsAdminOutput {
  """The generated customer token."""
  customer_token: String!
}

"""Contains the text of a gift message, its sender, and recipient"""
type GiftMessage {
  """Sender name"""
  from: String!

  """Gift message text"""
  message: String!

  """Recipient name"""
  to: String!
}

"""Contains the text of a gift message, its sender, and recipient"""
input GiftMessageInput {
  """Sender name"""
  from: String!

  """Gift message text"""
  message: String!

  """Recipient name"""
  to: String!
}

"""
Contains a set of relative URLs that PayPal uses in response to various actions
during the authorization process. Magento prepends the base URL to this value to
create a full URL. For example, if the full URL is
https://www.example.com/path/to/page.html, the relative URL is
path/to/page.html. Use this input for Payments Pro Hosted Solution payment method.
"""
input HostedProInput {
  """
  The relative URL of the page that PayPal redirects to when the buyer cancels
  the transaction in order to choose a different payment method. For example, if
  the full URL to this page is
  https://www.example.com/paypal/action/cancel.html, the relative URL is
  paypal/action/cancel.html.
  """
  cancel_url: String!

  """
  The relative URL of the final confirmation page that PayPal redirects to upon
  payment success. For example, if the full URL to this page is
  https://www.example.com/paypal/action/return.html, the relative URL is
  paypal/action/return.html.
  """
  return_url: String!
}

"""
Contains the secure URL used for the Payments Pro Hosted Solution payment method.
"""
type HostedProUrl {
  """The secure URL generated by PayPal."""
  secure_form_url: String
}

"""
Contains the required input to request the secure URL for Payments Pro Hosted Solution payment.
"""
input HostedProUrlInput {
  """The unique ID that identifies the shopper's cart."""
  cart_id: String!
}

"""Contains target path parameters."""
type HttpQueryParameter {
  """A parameter name."""
  name: String

  """A parameter value."""
  value: String
}

type ImageSwatchData implements SwatchDataInterface {
  """The URL assigned to the thumbnail of the swatch image."""
  thumbnail: String

  """The value can be represented as color (HEX code), image link, or text."""
  value: String
}

"""Contains an error message when an internal error occurred."""
type InternalError implements ErrorInterface {
  """The returned error message."""
  message: String!
}

"""Contains invoice details."""
type Invoice {
  """Comments on the invoice."""
  comments: [SalesCommentItem]

  """The unique ID for a `Invoice` object."""
  id: ID!

  """Invoiced product details."""
  items: [InvoiceItemInterface]

  """Sequential invoice number."""
  number: String!

  """Invoice total amount details."""
  total: InvoiceTotal
}

type InvoiceItem implements InvoiceItemInterface {
  """
  Information about the final discount amount for the base product, including discounts on options.
  """
  discounts: [Discount]

  """The unique ID for an `InvoiceItemInterface` object."""
  id: ID!

  """Details about an individual order item."""
  order_item: OrderItemInterface

  """The name of the base product."""
  product_name: String

  """The sale price for the base product including selected options."""
  product_sale_price: Money!

  """The SKU of the base product."""
  product_sku: String!

  """The number of invoiced items."""
  quantity_invoiced: Float
}

"""Contains detailes about invoiced items."""
interface InvoiceItemInterface {
  """
  Information about the final discount amount for the base product, including discounts on options.
  """
  discounts: [Discount]

  """The unique ID for an `InvoiceItemInterface` object."""
  id: ID!

  """Details about an individual order item."""
  order_item: OrderItemInterface

  """The name of the base product."""
  product_name: String

  """The sale price for the base product including selected options."""
  product_sale_price: Money!

  """The SKU of the base product."""
  product_sku: String!

  """The number of invoiced items."""
  quantity_invoiced: Float
}

"""Contains price details from an invoice."""
type InvoiceTotal {
  """The final base grand total amount in the base currency."""
  base_grand_total: Money!

  """The applied discounts to the invoice."""
  discounts: [Discount]

  """The final total amount, including shipping, discounts, and taxes."""
  grand_total: Money!

  """Details about the shipping and handling costs for the invoice."""
  shipping_handling: ShippingHandling

  """The subtotal of the invoice, excluding shipping, discounts, and taxes."""
  subtotal: Money!

  """The invoice tax details."""
  taxes: [TaxItem]

  """The shipping amount for the invoice."""
  total_shipping: Money!

  """The amount of tax applied to the invoice."""
  total_tax: Money!
}

"""Contains the result of the `isEmailAvailable` query."""
type IsEmailAvailableOutput {
  """
  Indicates whether the specified email address can be used to create a customer.
  """
  is_email_available: Boolean
}

"""Contains a key-value pair."""
type KeyValue {
  """The name part of the key/value pair."""
  name: String

  """The value part of the key/value pair."""
  value: String
}

"""Contains information for rendering layered navigation."""
type LayerFilter {
  """An array of filter items."""
  filter_items: [LayerFilterItemInterface] @deprecated(reason: "Use `Aggregation.options` instead.")

  """The count of filter items in filter group."""
  filter_items_count: Int @deprecated(reason: "Use `Aggregation.count` instead.")

  """The name of a layered navigation filter."""
  name: String @deprecated(reason: "Use `Aggregation.label` instead.")

  """The request variable name for a filter query."""
  request_var: String @deprecated(reason: "Use `Aggregation.attribute_code` instead.")
}

type LayerFilterItem implements LayerFilterItemInterface {
  """The count of items per filter."""
  items_count: Int @deprecated(reason: "Use `AggregationOption.count` instead.")

  """The label for a filter."""
  label: String @deprecated(reason: "Use `AggregationOption.label` instead.")

  """The value of a filter request variable to be used in query."""
  value_string: String @deprecated(reason: "Use `AggregationOption.value` instead.")
}

interface LayerFilterItemInterface {
  """The count of items per filter."""
  items_count: Int @deprecated(reason: "Use `AggregationOption.count` instead.")

  """The label for a filter."""
  label: String @deprecated(reason: "Use `AggregationOption.label` instead.")

  """The value of a filter request variable to be used in query."""
  value_string: String @deprecated(reason: "Use `AggregationOption.value` instead.")
}

"""
Defines characteristics about images and videos associated with a specific product.
"""
type MediaGalleryEntry {
  """Details about the content of the media gallery item."""
  content: ProductMediaGalleryEntriesContent

  """Indicates whether the image is hidden from view."""
  disabled: Boolean

  """The path of the image on the server."""
  file: String

  """The identifier assigned to the object."""
  id: Int @deprecated(reason: "Use `uid` instead.")

  """
  The alt text displayed on the storefront when the user points to the image.
  """
  label: String

  """Either `image` or `video`."""
  media_type: String

  """The media item's position after it has been sorted."""
  position: Int

  """
  Array of image types. It can have the following values: image, small_image, thumbnail.
  """
  types: [String]

  """The unique ID for a `MediaGalleryEntry` object."""
  uid: ID!

  """Details about the content of a video item."""
  video_content: ProductMediaGalleryEntriesVideoContent
}

"""Contains basic information about a product image or video."""
interface MediaGalleryInterface {
  """Indicates whether the image is hidden from view."""
  disabled: Boolean

  """The label of the product image or video."""
  label: String

  """The media item's position after it has been sorted."""
  position: Int

  """The URL of the product image or video."""
  url: String
}

"""
Defines a monetary value, including a numeric value and a currency code.
"""
type Money {
  """A three-letter currency code, such as USD or EUR."""
  currency: CurrencyEnum

  """A number expressing a monetary value."""
  value: Float
}

type Mutation {
  """Add Tracking Number to Return Request."""
  addAmRmaTrackingNumber(input: AddAmRmaTrackingNumberInput): AmRmaRequestTrackingNumber

  """
  Add one or more configurable products to the specified cart. We recommend using `addProductsToCart` instead.
  """
  addConfigurableProductsToCart(
    """
    An input object that defines which configurable products to add to the cart.
    """
    input: AddConfigurableProductsToCartInput
  ): AddConfigurableProductsToCartOutput

  """Add any type of product to the cart."""
  addProductsToCart(
    """The cart ID of the shopper."""
    cartId: String!

    """An array that defines the products to add to the cart."""
    cartItems: [CartItemInput!]!
  ): AddProductsToCartOutput

  """Add products to the specified compare list."""
  addProductsToCompareList(
    """
    An input object that defines which products to add to an existing compare list.
    """
    input: AddProductsToCompareListInput
  ): CompareList

  """
  Add one or more products to the specified wish list. This mutation supports all product types.
  """
  addProductsToWishlist(
    """The ID of a wish list."""
    wishlistId: ID!

    """An array of products to add to the wish list."""
    wishlistItems: [WishlistItemInput!]!
  ): AddProductsToWishlistOutput

  """
  Add one or more simple products to the specified cart. We recommend using `addProductsToCart` instead.
  """
  addSimpleProductsToCart(
    """An input object that defines which simple products to add to the cart."""
    input: AddSimpleProductsToCartInput
  ): AddSimpleProductsToCartOutput

  """
  Add one or more virtual products to the specified cart. We recommend using `addProductsToCart` instead.
  """
  addVirtualProductsToCart(
    """
    An input object that defines which virtual products to add to the cart.
    """
    input: AddVirtualProductsToCartInput
  ): AddVirtualProductsToCartOutput

  """Add items in the specified wishlist to the customer's cart."""
  addWishlistItemsToCart(
    """The unique ID of the wish list"""
    wishlistId: ID!

    """
    An array of IDs representing products to be added to the cart. If no IDs are
    specified, all items in the wishlist will be added to the cart
    """
    wishlistItemIds: [ID!]
  ): AddWishlistItemsToCartOutput

  """Apply a pre-defined coupon code to the specified cart."""
  applyCouponToCart(
    """An input object that defines the coupon code to apply to the cart."""
    input: ApplyCouponToCartInput
  ): ApplyCouponToCartOutput

  """Assign the specified compare list to the logged in customer."""
  assignCompareListToCustomer(
    """The unique ID of the compare list to be assigned."""
    uid: ID!
  ): AssignCompareListToCustomerOutput

  """Assign a logged-in customer to the specified guest shopping cart."""
  assignCustomerToGuestCart(cart_id: String!): Cart!

  """Change custom fields rma"""
  changeCustomFieldsAmRma(input: ChangeCustomFieldsAmRmaInput): ChangeCustomFieldsRmaOutput

  """Change the password for the logged-in customer."""
  changeCustomerPassword(
    """The customer's original password."""
    currentPassword: String!

    """The customer's updated password."""
    newPassword: String!
  ): Customer

  """Cancel RMA return request for current customer."""
  closeAmRmaCustomerReturnRequest(id: Int!): AmRmaMutationCommonOutput

  """Send a 'Contact Us' email to the merchant."""
  contactUs(
    """An input object that defines shopper information."""
    input: ContactUsInput!
  ): ContactUsOutput

  """Creates Client Token for Braintree Javascript SDK initialization."""
  createBraintreeClientToken: String!

  """
  Create a new compare list. The compare list is saved for logged in customers.
  """
  createCompareList(input: CreateCompareListInput): CompareList

  """Use `createCustomerV2` instead."""
  createCustomer(
    """An input object that defines the customer to be created."""
    input: CustomerInput!
  ): CustomerOutput

  """Create a billing or shipping address for a customer or guest."""
  createCustomerAddress(input: CustomerAddressInput!): CustomerAddress

  """Create a customer account."""
  createCustomerV2(
    """An input object that defines the customer to be created."""
    input: CustomerCreateInput!
  ): CustomerOutput

  """Create an empty shopping cart for a guest or logged in user"""
  createEmptyCart(
    """An optional input object that assigns the specified ID to the cart."""
    input: createEmptyCartInput
  ): String

  """
  Initiate a transaction and receive a token. Use this mutation for Payflow Pro and Payments Pro payment methods
  """
  createPayflowProToken(
    """
    An input object that defines the requirements to fetch payment token information.
    """
    input: PayflowProTokenInput!
  ): CreatePayflowProTokenOutput

  """
  Initiate an Express Checkout transaction and receive a token. Use this
  mutation for Express Checkout and Payments Standard payment methods.
  """
  createPaypalExpressToken(
    """
    An input object that defines the requirements to receive a payment token.
    """
    input: PaypalExpressTokenInput!
  ): PaypalExpressTokenOutput

  """Create a product review for the specified product."""
  createProductReview(
    """
    An input object that contains the details necessary to create a product review.
    """
    input: CreateProductReviewInput!
  ): CreateProductReviewOutput!
  customerRemark(
    """Customer remark."""
    remark: String!
  ): Boolean

  """Delete Message from Chat."""
  deleteAmRmaMessage(input: DeleteAmRmaMessageInput): AmRmaMutationCommonOutput

  """Delete attached to message file."""
  deleteAmRmaMessageFile(
    """Hash of File."""
    filehash: String!
  ): AmRmaMutationCommonOutput

  """Delete the specified compare list."""
  deleteCompareList(
    """The unique ID of the compare list to be deleted."""
    uid: ID!
  ): DeleteCompareListOutput

  """Delete the billing or shipping address of a customer."""
  deleteCustomerAddress(
    """The ID of the customer address to be deleted."""
    id: Int!
  ): Boolean

  """Delete a customer's payment token."""
  deletePaymentToken(
    """The reusable payment token securely stored in the vault."""
    public_hash: String!
  ): DeletePaymentTokenOutput

  """Generate a token for specified customer."""
  generateCustomerToken(
    """The customer's email address."""
    email: String!

    """The customer's password."""
    password: String!
  ): CustomerToken

  """
  Request a customer token so that an administrator can perform remote shopping assistance.
  """
  generateCustomerTokenAsAdmin(
    """An input object that defines the customer email address."""
    input: GenerateCustomerTokenAsAdminInput!
  ): GenerateCustomerTokenAsAdminOutput

  """
  Handle a payment response and save the payment in Quote. Use this mutation for
  Payflow Pro and Payments Pro payment methods.
  """
  handlePayflowProResponse(
    """
    An input object that includes the payload returned by PayPal and the cart ID.
    """
    input: PayflowProResponseInput!
  ): PayflowProResponseOutput

  """
  Transfer the contents of a guest cart into the cart of a logged-in customer.
  """
  mergeCarts(
    """The guest's cart ID before they login."""
    source_cart_id: String!

    """The cart ID after the guest logs in."""
    destination_cart_id: String
  ): Cart!

  """Place new RMA return request."""
  placeAmRmaCustomerReturnRequest(input: PlaceAmRmaReturnRequestInput): [AmRmaReturnRequest]

  """Convert the quote into an order."""
  placeOrder(
    """An input object that defines the shopper's cart ID."""
    input: PlaceOrderInput
  ): PlaceOrderOutput

  """Rate Return Request."""
  rateAmRmaReturnRequest(input: RateAmRmaReturnRequest): AmRmaMutationCommonOutput

  """Confirm shipment received"""
  receiveShipment(input: ReceiveShipmentInput!): ReceiveShipmentOutput

  """Remove Tracking Number attached to Return Request."""
  removeAmRmaTrackingNumber(input: RemoveAmRmaTrackingNumberInput): AmRmaMutationCommonOutput

  """
  Remove a previously-applied coupon from the cart. The cart must contain at least one item in order to remove the coupon.
  """
  removeCouponFromCart(
    """
    An input object that defines which coupon code to remove from the cart.
    """
    input: RemoveCouponFromCartInput
  ): RemoveCouponFromCartOutput

  """
  Delete the entire quantity of a specified item from the cart. If you remove
  all items from the cart, the cart continues to exist.
  """
  removeItemFromCart(
    """An input object that defines which products to remove from the cart."""
    input: RemoveItemFromCartInput
  ): RemoveItemFromCartOutput

  """Remove products from the specified compare list."""
  removeProductsFromCompareList(
    """
    An input object that defines which products to remove from a compare list.
    """
    input: RemoveProductsFromCompareListInput
  ): CompareList

  """Remove one or more products from the specified wish list."""
  removeProductsFromWishlist(
    """The ID of a wish list."""
    wishlistId: ID!

    """An array of item IDs representing products to be removed."""
    wishlistItemsIds: [ID!]!
  ): RemoveProductsFromWishlistOutput

  """Add all products from a customer's previous order to the cart."""
  reorderItems(orderNumber: String!): ReorderItemsOutput

  """
  Request an email with a reset password token for the registered customer identified by the specified email.
  """
  requestPasswordResetEmail(
    """The customer's email address."""
    email: String!
  ): Boolean

  """
  Reset a customer's password using the reset password token that the customer
  received in an email after requesting it using `requestPasswordResetEmail`.
  """
  resetPassword(
    """The customer's email address."""
    email: String!

    """A runtime token generated by the `requestPasswordResetEmail` mutation."""
    resetPasswordToken: String!

    """The customer's new password."""
    newPassword: String!
  ): Boolean

  """Revoke the customer token."""
  revokeCustomerToken: RevokeCustomerTokenOutput

  """Send Message to Chat."""
  sendAmRmaMessage(input: SendAmRmaMessageInput): AmRmaMessage

  """
  Send a message on behalf of a customer to the specified email addresses.
  """
  sendEmailToFriend(
    """An input object that defines sender, recipients, and product."""
    input: SendEmailToFriendInput
  ): SendEmailToFriendOutput

  """Set the billing address on a specific cart."""
  setBillingAddressOnCart(
    """
    An input object that defines the billing address to be assigned to the cart.
    """
    input: SetBillingAddressOnCartInput
  ): SetBillingAddressOnCartOutput

  """
  Transfer the contents of a guest cart into the cart of a logged-in customer.
  """
  setCustomerCartUuid(
    """Customer cart id"""
    cart_id: String!
  ): Cart!

  """Assign the email address of a guest to the cart."""
  setGuestEmailOnCart(
    """An input object that defines a guest email address."""
    input: SetGuestEmailOnCartInput
  ): SetGuestEmailOnCartOutput

  """Set the cart payment method and convert the cart into an order."""
  setPaymentMethodAndPlaceOrder(input: SetPaymentMethodAndPlaceOrderInput): PlaceOrderOutput @deprecated(reason: "Should use setPaymentMethodOnCart and placeOrder mutations in single request.")

  """Apply a payment method to the cart."""
  setPaymentMethodOnCart(
    """
    An input object that defines which payment method to apply to the cart.
    """
    input: SetPaymentMethodOnCartInput
  ): SetPaymentMethodOnCartOutput

  """Set one or more delivery methods on a cart."""
  setSellerShippingOnCart(
    """An input object that apply seller shipping cost to the cart."""
    input: SellerShippingOnCartInput
  ): SetShippingMethodsOnCartOutput

  """Set one or more shipping addresses on a specific cart."""
  setShippingAddressesOnCart(
    """
    An input object that defines one or more shipping addresses to be assigned to the cart.
    """
    input: SetShippingAddressesOnCartInput
  ): SetShippingAddressesOnCartOutput

  """Set one or more delivery methods on a cart."""
  setShippingMethodsOnCart(
    """An input object that applies one or more shipping methods to the cart."""
    input: SetShippingMethodsOnCartInput
  ): SetShippingMethodsOnCartOutput

  """Subscribe the specified email to the store's newsletter."""
  subscribeEmailToNewsletter(
    """The email address that will receive the store's newsletter."""
    email: String!
  ): SubscribeEmailToNewsletterOutput

  """Modify items in the cart."""
  updateCartItems(
    """An input object that defines products to be updated."""
    input: UpdateCartItemsInput
  ): UpdateCartItemsOutput

  """Use `updateCustomerV2` instead."""
  updateCustomer(
    """An input object that defines the customer characteristics to update."""
    input: CustomerInput!
  ): CustomerOutput

  """Update the billing or shipping address of a customer or guest."""
  updateCustomerAddress(
    """The ID assigned to the customer address."""
    id: Int!

    """An input object that contains changes to the customer address."""
    input: CustomerAddressInput
  ): CustomerAddress

  """Change the email address for the logged-in customer."""
  updateCustomerEmail(
    """The customer's email address."""
    email: String!

    """The customer's password."""
    password: String!
  ): CustomerOutput

  """Update the customer's personal information."""
  updateCustomerV2(
    """An input object that defines the customer characteristics to update."""
    input: CustomerUpdateInput!
  ): CustomerOutput

  """Update one or more products in the specified wish list."""
  updateProductsInWishlist(
    """The ID of a wish list."""
    wishlistId: ID!

    """An array of items to be updated."""
    wishlistItems: [WishlistItemUpdateInput!]!
  ): UpdateProductsInWishlistOutput
}

"""Contains an error message when an invalid UID was specified."""
type NoSuchEntityUidError implements ErrorInterface {
  """The returned error message."""
  message: String!

  """The specified invalid unique ID of an object."""
  uid: ID!
}

enum ObjectDataTypeEnum {
  STRING
  FLOAT
  INT
  BOOLEAN
  COMPLEX
}

"""Contains the order ID."""
type Order {
  order_id: String @deprecated(reason: "Use `order_number` instead.")

  """The unique ID for an `Order` object."""
  order_number: String!
}

"""
Contains detailed information about an order's billing and shipping addresses.
"""
type OrderAddress {
  """The city or town."""
  city: String

  """The customer's company."""
  company: String

  """The company branch id for tax invoice"""
  company_branch_id: String

  """The company branch name for tax invoice"""
  company_branch_name: String

  """The customer's country."""
  country_code: CountryCodeEnum

  """The request district of the customer or guest."""
  district: String

  """The fax number."""
  fax: String

  """
  The first name of the person associated with the shipping/billing address.
  """
  firstname: String!

  """
  The family name of the person associated with the shipping/billing address.
  """
  lastname: String!

  """
  The middle name of the person associated with the shipping/billing address.
  """
  middlename: String

  """The customer's ZIP or postal code."""
  postcode: String

  """An honorific, such as Dr., Mr., or Mrs."""
  prefix: String

  """The state or province name."""
  region: String

  """The unique ID for a `Region` object of a pre-defined region."""
  region_id: ID

  """Address remark"""
  remark: String

  """An array of strings that define the street number and name."""
  street: [String]!

  """The request sub_district of the customer or guest."""
  sub_district: String

  """A value such as Sr., Jr., or III."""
  suffix: String

  """The telephone number."""
  telephone: String

  """The customer's Value-added tax (VAT) number (for corporate customers)."""
  vat_id: String
}

type OrderItem implements OrderItemInterface {
  """Return Order Item Information"""
  amrma_order_item: AmRmaReturnOrderItem

  """The final discount information for the product."""
  discounts: [Discount]

  """The entered option for the base product, such as a logo or image."""
  entered_options: [OrderItemOption]

  """The unique ID for an `OrderItemInterface` object."""
  id: ID!

  """The name of the base product."""
  product_name: String

  """The original price of the base product, including selected options."""
  product_original_price: Money!

  """The sale price of the base product, including selected options."""
  product_sale_price: Money!

  """The original price of the base product, including selected options."""
  product_sale_price_including_tax: Money!

  """The SKU of the base product."""
  product_sku: String!

  """The type of product, such as simple, configurable, etc."""
  product_type: String

  """URL key of the base product."""
  product_url_key: String

  """The number of canceled items."""
  quantity_canceled: Float

  """The number of invoiced items."""
  quantity_invoiced: Float

  """The number of units ordered for this item."""
  quantity_ordered: Float

  """The number of refunded items."""
  quantity_refunded: Float

  """The number of returned items."""
  quantity_returned: Float

  """The number of shipped items."""
  quantity_shipped: Float

  """The selected options for the base product, such as color or size."""
  selected_options: [OrderItemOption]

  """Contains details about the seller of the item"""
  seller: Retailer

  """The status of the order item."""
  status: String
}

"""Order item details."""
interface OrderItemInterface {
  """Return Order Item Information"""
  amrma_order_item: AmRmaReturnOrderItem

  """The final discount information for the product."""
  discounts: [Discount]

  """The entered option for the base product, such as a logo or image."""
  entered_options: [OrderItemOption]

  """The unique ID for an `OrderItemInterface` object."""
  id: ID!

  """The name of the base product."""
  product_name: String

  """The original price of the base product, including selected options."""
  product_original_price: Money!

  """The sale price of the base product, including selected options."""
  product_sale_price: Money!

  """The original price of the base product, including selected options."""
  product_sale_price_including_tax: Money!

  """The SKU of the base product."""
  product_sku: String!

  """The type of product, such as simple, configurable, etc."""
  product_type: String

  """URL key of the base product."""
  product_url_key: String

  """The number of canceled items."""
  quantity_canceled: Float

  """The number of invoiced items."""
  quantity_invoiced: Float

  """The number of units ordered for this item."""
  quantity_ordered: Float

  """The number of refunded items."""
  quantity_refunded: Float

  """The number of returned items."""
  quantity_returned: Float

  """The number of shipped items."""
  quantity_shipped: Float

  """The selected options for the base product, such as color or size."""
  selected_options: [OrderItemOption]

  """Contains details about the seller of the item"""
  seller: Retailer

  """The status of the order item."""
  status: String
}

"""Represents order item options like selected or entered."""
type OrderItemOption {
  """The name of the option."""
  label: String!

  """The value of the option."""
  value: String!
}

"""Contains details about the payment method used to pay for the order."""
type OrderPaymentMethod {
  """Additional data per payment method type."""
  additional_data: [KeyValue]

  """The label that describes the payment method."""
  name: String!

  """The payment method code that indicates how the order was paid for."""
  type: String!
}

"""Contains order shipment details."""
type OrderShipment {
  """The date time that the shipment will be auto completed"""
  auto_completed_date: String

  """Comments added to the shipment."""
  comments: [SalesCommentItem]

  """The unique ID for a `OrderShipment` object."""
  id: ID!

  """An array of items included in the shipment."""
  items: [ShipmentItemInterface]

  """The sequential credit shipment number."""
  number: String!

  """A customer order that is the parent of this shipment"""
  order: CustomerOrder

  """Contains details about the seller of the item"""
  seller: Retailer

  """The state of shipment"""
  shipping_state: Int

  """An array of shipment tracking details."""
  tracking: [ShipmentTracking]

  """The date time that the shipment is updated"""
  updated_at: String
}

"""
Contains details about the sales total amounts used to calculate the final price.
"""
type OrderTotal {
  """The final base grand total amount in the base currency."""
  base_grand_total: Money!

  """The applied discounts to the order."""
  discounts: [Discount]

  """The final total amount, including shipping, discounts, and taxes."""
  grand_total: Money!

  """Details about the shipping and handling costs for the order."""
  shipping_handling: ShippingHandling

  """The subtotal of the order, excluding shipping, discounts, and taxes."""
  subtotal: Money!

  """The subtotal of the order, excluding shipping, discounts."""
  subtotal_including_tax: Money!

  """The order tax details."""
  taxes: [TaxItem]

  """The shipping amount for the order."""
  total_shipping: Money!

  """The amount of tax applied to the order."""
  total_tax: Money!
}

"""Contains required input for Payflow Express Checkout payments."""
input PayflowExpressInput {
  """The unique ID of the PayPal user."""
  payer_id: String!

  """The token returned by the createPaypalExpressToken mutation."""
  token: String!
}

"""
A set of relative URLs that PayPal uses in response to various actions during
the authorization process. Adobe Commerce prepends the base URL to this value to
create a full URL. For example, if the full URL is
https://www.example.com/path/to/page.html, the relative URL is
path/to/page.html. Use this input for Payflow Link and Payments Advanced payment methods.
"""
input PayflowLinkInput {
  """
  The relative URL of the page that PayPal redirects to when the buyer cancels
  the transaction in order to choose a different payment method. If the full URL
  to this page is https://www.example.com/paypal/action/cancel.html, the
  relative URL is paypal/action/cancel.html.
  """
  cancel_url: String!

  """
  The relative URL of the transaction error page that PayPal redirects to upon
  payment error. If the full URL to this page is
  https://www.example.com/paypal/action/error.html, the relative URL is
  paypal/action/error.html.
  """
  error_url: String!

  """
  The relative URL of the order confirmation page that PayPal redirects to when
  the payment is successful and additional confirmation is not needed. If the
  full URL to this page is https://www.example.com/paypal/action/return.html,
  the relative URL is paypal/action/return.html.
  """
  return_url: String!
}

"""
Indicates the mode for payment. Applies to the Payflow Link and Payments Advanced payment methods.
"""
enum PayflowLinkMode {
  TEST
  LIVE
}

"""
Contains information used to generate PayPal iframe for transaction. Applies to
Payflow Link and Payments Advanced payment methods.
"""
type PayflowLinkToken {
  """The mode for the Payflow transaction."""
  mode: PayflowLinkMode

  """The PayPal URL used for requesting a Payflow form."""
  paypal_url: String

  """The secure token generated by PayPal."""
  secure_token: String

  """The secure token ID generated by PayPal."""
  secure_token_id: String
}

"""
Contains information required to fetch payment token information for the Payflow Link and Payments Advanced payment methods.
"""
input PayflowLinkTokenInput {
  """The unique ID that identifies the customer's cart."""
  cart_id: String!
}

"""Contains input for the Payflow Pro and Payments Pro payment methods."""
input PayflowProInput {
  """Required input for credit card related information."""
  cc_details: CreditCardDetailsInput!

  """
  Indicates whether details about the shopper's credit/debit card should be
  tokenized for later usage. Required only if Vault is enabled for the PayPal
  Payflow Pro payment integration.
  """
  is_active_payment_token_enabler: Boolean
}

"""
Input required to complete payment. Applies to Payflow Pro and Payments Pro payment methods.
"""
input PayflowProResponseInput {
  """The unique ID that identifies the shopper's cart."""
  cart_id: String!

  """The payload returned from PayPal."""
  paypal_payload: String!
}

type PayflowProResponseOutput {
  """The cart with the updated selected payment method."""
  cart: Cart!
}

"""
Contains the secure information used to authorize transaction. Applies to Payflow Pro and Payments Pro payment methods.
"""
type PayflowProToken {
  """
  The RESPMSG returned by PayPal. If the `result` is `0`, then `response_message` is `Approved`.
  """
  response_message: String!

  """A non-zero value if any errors occurred."""
  result: Int!

  """
  The RESULT returned by PayPal. A value of `0` indicates the transaction was approved.
  """
  result_code: Int!

  """A secure token generated by PayPal."""
  secure_token: String!

  """A secure token ID generated by PayPal."""
  secure_token_id: String!
}

"""
Contains input required to fetch payment token information for the Payflow Pro and Payments Pro payment methods.
"""
input PayflowProTokenInput {
  """The unique ID that identifies the shopper's cart."""
  cart_id: String!

  """A set of relative URLs that PayPal uses for callback."""
  urls: PayflowProUrlInput!
}

"""
Contains a set of relative URLs that PayPal uses in response to various actions
during the authorization process. Magento prepends the base URL to this value to
create a full URL. For example, if the full URL is
https://www.example.com/path/to/page.html, the relative URL is
path/to/page.html. Use this input for the Payflow Pro and Payment Pro payment methods.
"""
input PayflowProUrlInput {
  """
  The relative URL of the page that PayPal redirects to when the buyer cancels
  the transaction in order to choose a different payment method. If the full URL
  to this page is https://www.example.com/paypal/action/cancel.html, the
  relative URL is paypal/action/cancel.html.
  """
  cancel_url: String!

  """
  The relative URL of the transaction error page that PayPal redirects to upon
  payment error. If the full URL to this page is
  https://www.example.com/paypal/action/error.html, the relative URL is
  paypal/action/error.html.
  """
  error_url: String!

  """
  The relative URL of the final confirmation page that PayPal redirects to upon
  payment success. If the full URL to this page is
  https://www.example.com/paypal/action/return.html, the relative URL is
  paypal/action/return.html.
  """
  return_url: String!
}

"""Defines the payment method."""
input PaymentMethodInput {
  braintree: BraintreeInput
  braintree_cc_vault: BraintreeCcVaultInput

  """The internal name for the payment method."""
  code: String!

  """Required input for PayPal Hosted pro payments."""
  hosted_pro: HostedProInput

  """Required input for Payflow Express Checkout payments."""
  payflow_express: PayflowExpressInput

  """Required input for PayPal Payflow Link and Payments Advanced payments."""
  payflow_link: PayflowLinkInput

  """Required input for PayPal Payflow Pro and Payment Pro payments."""
  payflowpro: PayflowProInput

  """Required input for PayPal Payflow Pro vault payments."""
  payflowpro_cc_vault: VaultTokenInput

  """Required input for Express Checkout and Payments Standard payments."""
  paypal_express: PaypalExpressInput

  """The purchase order number. Optional for most payment methods."""
  purchase_order_number: String
}

"""The stored payment method available to the customer."""
type PaymentToken {
  """A description of the stored account details."""
  details: String

  """The payment method code associated with the token."""
  payment_method_code: String!

  """The public hash of the token."""
  public_hash: String!

  """Specifies the payment token type."""
  type: PaymentTokenTypeEnum!
}

"""The list of available payment token types."""
enum PaymentTokenTypeEnum {
  """phpcs:ignore Magento2.GraphQL.ValidArgumentName"""
  card

  """phpcs:ignore Magento2.GraphQL.ValidArgumentName"""
  account
}

"""
Contains required input for Express Checkout and Payments Standard payments.
"""
input PaypalExpressInput {
  """The unique ID of the PayPal user."""
  payer_id: String!

  """The token returned by the `createPaypalExpressToken` mutation."""
  token: String!
}

"""Deprecated. Use `PaypalExpressTokenOutput` instead."""
type PaypalExpressToken {
  """
  A set of URLs that allow the buyer to authorize payment and adjust checkout details.
  """
  paypal_urls: PaypalExpressUrlList @deprecated(reason: "Use `PaypalExpressTokenOutput.paypal_urls` instead.")

  """The token returned by PayPal."""
  token: String @deprecated(reason: "Use `PaypalExpressTokenOutput.token` instead.")
}

"""
Defines the attributes required to receive a payment token for Express Checkout and Payments Standard payment methods.
"""
input PaypalExpressTokenInput {
  """The unique ID that identifies the customer's cart."""
  cart_id: String!

  """The payment method code."""
  code: String!

  """
  Indicates whether the buyer selected the quick checkout button. The default value is false.
  """
  express_button: Boolean

  """
  A set of relative URLs that PayPal uses in response to various actions during the authorization process.
  """
  urls: PaypalExpressUrlsInput!

  """
  Indicates whether the buyer clicked the PayPal credit button. The default value is false.
  """
  use_paypal_credit: Boolean
}

"""
Contains the token returned by PayPal and a set of URLs that allow the buyer to
authorize payment and adjust checkout details. Applies to Express Checkout and
Payments Standard payment methods.
"""
type PaypalExpressTokenOutput {
  """
  A set of URLs that allow the buyer to authorize payment and adjust checkout details.
  """
  paypal_urls: PaypalExpressUrlList

  """The token returned by PayPal."""
  token: String
}

"""
Contains a set of URLs that allow the buyer to authorize payment and adjust
checkout details for Express Checkout and Payments Standard transactions.
"""
type PaypalExpressUrlList {
  """The PayPal URL that allows the buyer to edit their checkout details."""
  edit: String

  """The URL to the PayPal login page."""
  start: String
}

"""
Contains a set of relative URLs that PayPal uses in response to various actions
during the authorization process. Magento prepends the base URL to this value to
create a full URL. For example, if the full URL is
https://www.example.com/path/to/page.html, the relative URL is
path/to/page.html. Use this input for Express Checkout and Payments Standard
payment methods.
"""
input PaypalExpressUrlsInput {
  """
  The relative URL of the page that PayPal redirects to when the buyer cancels
  the transaction in order to choose a different payment method. If the full URL
  to this page is https://www.example.com/paypal/action/cancel.html, the
  relative URL is paypal/action/cancel.html.
  """
  cancel_url: String!

  """
  The relative URL of the page that PayPal redirects to when the payment has
  been put on hold for additional review. This condition mostly applies to ACH
  transactions, and is not applicable to most PayPal solutions. If the full URL
  to this page is https://www.example.com/paypal/action/success_pending.html,
  the relative URL is paypal/action/success_pending.html.
  """
  pending_url: String

  """
  The relative URL of the final confirmation page that PayPal redirects to upon
  payment success. If the full URL to this page is
  https://www.example.com/paypal/action/return.html, the relative URL is
  paypal/action/return.html.
  """
  return_url: String!

  """
  The relative URL of the order confirmation page that PayPal redirects to when
  the payment is successful and additional confirmation is not needed. Not
  applicable to most PayPal solutions. If the full URL to this page is
  https://www.example.com/paypal/action/success.html, the relative URL is
  paypal/action/success.html.
  """
  success_url: String
}

"""Contains attributes specific to tangible products."""
interface PhysicalProductInterface {
  """The weight of the item, in units defined by the store."""
  weight: Float
}

"""Defines Pickup Location information."""
type PickupLocation {
  city: String
  contact_name: String
  country_id: String
  description: String
  email: String
  fax: String
  latitude: Float
  longitude: Float
  name: String
  phone: String
  pickup_location_code: String
  postcode: String
  region: String
  region_id: Int
  street: String
}

"""
PickupLocationFilterInput defines the list of attributes and filters for the search.
"""
input PickupLocationFilterInput {
  """Filter by city."""
  city: FilterTypeInput

  """Filter by country."""
  country_id: FilterTypeInput

  """Filter by pickup location name."""
  name: FilterTypeInput

  """Filter by pickup location code."""
  pickup_location_code: FilterTypeInput

  """Filter by postcode."""
  postcode: FilterTypeInput

  """Filter by region."""
  region: FilterTypeInput

  """Filter by region id."""
  region_id: FilterTypeInput

  """Filter by street."""
  street: FilterTypeInput
}

"""Top level object returned in a pickup locations search."""
type PickupLocations {
  """An array of pickup locations that match the specific search request."""
  items: [PickupLocation]

  """
  An object that includes the page_info and currentPage values specified in the query.
  """
  page_info: SearchResultPageInfo

  """The number of products returned."""
  total_count: Int
}

"""
PickupLocationSortInput specifies attribute to use for sorting search results
and indicates whether the results are sorted in ascending or descending order.
"""
input PickupLocationSortInput {
  """City where pickup location is placed."""
  city: SortEnum

  """Name of the contact person."""
  contact_name: SortEnum

  """Id of the country in two letters."""
  country_id: SortEnum

  """Description of the pickup location."""
  description: SortEnum

  """
  Distance to the address, requested by distance filter. Applicable only with
  distance filter. If distance sort order is present, all other sort orders will be ignored.
  """
  distance: SortEnum

  """Contact email of the pickup location."""
  email: SortEnum

  """Contact fax of the pickup location."""
  fax: SortEnum

  """Geographic latitude where pickup location is placed."""
  latitude: SortEnum

  """Geographic longitude where pickup location is placed."""
  longitude: SortEnum

  """
  The pickup location name. Customer use this to identify the pickup location.
  """
  name: SortEnum

  """Contact phone number of the pickup location."""
  phone: SortEnum

  """A code assigned to pickup location to identify the source."""
  pickup_location_code: SortEnum

  """Postcode where pickup location is placed."""
  postcode: SortEnum

  """Name of the region."""
  region: SortEnum

  """Id of the region."""
  region_id: SortEnum

  """Street where pickup location is placed."""
  street: SortEnum
}

"""Top level object returned in a pickup locations search."""
type pickupLocationsWithAvailability {
  """An array of pickup locations that match the specific search request."""
  items: [pickupLocationWithAvailability]

  """
  An object that includes the page_info and currentPage values specified in the query.
  """
  page_info: SearchResultPageInfo

  """The number of products returned."""
  total_count: Int
}

"""Defines Pickup Location information."""
type pickupLocationWithAvailability {
  availabilityStatus: String
  city: String
  contact_name: String
  country_id: String
  description: String
  email: String
  fax: String
  latitude: Float
  longitude: Float
  name: String
  phone: String
  pickup_location_code: String
  postcode: String

  """Information about products which should be delivered."""
  productAvailability: [productAvailabilityOutput]
  region: String
  region_id: Int
  street: String
}

"""
Defines the input required to run the placeAmRmaCustomerReturnRequest mutation
"""
input PlaceAmRmaReturnRequestInput {
  """The chat message"""
  comment: String

  """Fullfilled custom fields list"""
  custom_fields: [AmRmaCustomFieldInput]

  """Files Attached to a Message."""
  files: [SendAmRmaMessageFileInput]

  """The order ID for return request."""
  order_id: Int!

  """Is policy checkbox was checked."""
  policy_allowed: Int

  """An array with return items."""
  return_items: [PlaceAmRmaReturnRequestItemInput]!
}

"""Defines the input of return items for place request mutation"""
input PlaceAmRmaReturnRequestItemInput {
  """Return condition ID"""
  condition: Int!

  """Files Attached to a Message."""
  files: [SendAmRmaMessageFileInput]

  """Order item ID for return."""
  order_item_id: Int!

  """Return qty"""
  qty: Int!

  """Return reason ID"""
  reason: Int!

  """Return resolution ID"""
  resolution: Int!

  """Is item requested as return."""
  return: Int!
}

"""Specifies the quote to be converted to an order."""
input PlaceOrderInput {
  """The unique ID of a `Cart` object."""
  cart_id: String!
}

"""Contains the results of the request to place an order."""
type PlaceOrderOutput {
  """The ID of the order."""
  order: Order!
}

"""
Deprecated. Use `ProductPrice` instead. Defines the price of a product as well as any tax-related adjustments.
"""
type Price {
  """
  An array that provides information about tax, weee, or weee_tax adjustments.
  """
  adjustments: [PriceAdjustment] @deprecated(reason: "Use `ProductPrice` instead.")

  """The price of a product plus a three-letter currency code."""
  amount: Money @deprecated(reason: "Use `ProductPrice` instead.")
}

"""
Deprecated. Taxes will be included or excluded in the price. Defines the amount
of money to apply as an adjustment, the type of adjustment to apply, and whether
the item is included or excluded from the adjustment.
"""
type PriceAdjustment {
  """The amount of the price adjustment and its currency code."""
  amount: Money

  """Indicates whether the adjustment involves tax, weee, or weee_tax."""
  code: PriceAdjustmentCodesEnum @deprecated(reason: "`PriceAdjustment` is deprecated.")

  """
  Indicates whether the entity described by the code attribute is included or excluded from the adjustment.
  """
  description: PriceAdjustmentDescriptionEnum @deprecated(reason: "`PriceAdjustment` is deprecated.")
}

"""`PriceAdjustment.code` is deprecated."""
enum PriceAdjustmentCodesEnum {
  TAX @deprecated(reason: "`PriceAdjustmentCodesEnum` is deprecated. Tax is included or excluded in the price. Tax is not shown separately in Catalog.")
  WEEE @deprecated(reason: "WEEE code is deprecated. Use `fixed_product_taxes.label` instead.")
  WEEE_TAX @deprecated(reason: "Use `fixed_product_taxes` instead.  Tax is included or excluded in price. The tax is not shown separtely in Catalog.")
}

"""
`PriceAdjustmentDescriptionEnum` is deprecated. States whether a price adjustment is included or excluded.
"""
enum PriceAdjustmentDescriptionEnum {
  INCLUDED
  EXCLUDED
}

"""
Contains the price range for a product. If the product has a single price, the minimum and maximum price will be the same.
"""
type PriceRange {
  """The highest possible price for the product."""
  maximum_price: ProductPrice

  """The lowest possible price for the product."""
  minimum_price: ProductPrice!
}

"""Defines the price type."""
enum PriceTypeEnum {
  FIXED
  PERCENT
  DYNAMIC
}

"""Contains a product attribute code and value."""
type ProductAttribute {
  """The unique identifier for a product attribute code."""
  code: String!

  """The display value of the attribute."""
  value: String!
}

"""
Defines the filters to be used in the search. A filter contains at least one
attribute, a comparison operator, and the value that is being searched for.
"""
input ProductAttributeFilterInput {
  """Attribute label: Brand"""
  accessory_brand: FilterEqualTypeInput

  """Attribute label: Gemstone Addon"""
  accessory_gemstone_addon: FilterEqualTypeInput

  """Attribute label: Recyclable Material"""
  accessory_recyclable_material: FilterEqualTypeInput

  """Attribute label: Activity"""
  activity: FilterEqualTypeInput

  """Deprecated: use `category_uid` to filter product by category ID."""
  category_id: FilterEqualTypeInput

  """Filter product by the unique ID for a `CategoryInterface` object."""
  category_uid: FilterEqualTypeInput

  """Attribute label: Color"""
  color: FilterEqualTypeInput

  """Attribute label: Description"""
  description: FilterMatchTypeInput

  """Attribute label: Description_test"""
  description_test: FilterMatchTypeInput

  """Attribute label: Color"""
  fashion_color: FilterEqualTypeInput

  """Attribute label: Material"""
  fashion_material: FilterEqualTypeInput

  """Attribute label: Style"""
  fashion_style: FilterEqualTypeInput

  """Attribute label: Has Video"""
  has_video: FilterEqualTypeInput

  """Attribute label: Product Name"""
  name: FilterMatchTypeInput

  """Attribute label: Price"""
  price: FilterRangeTypeInput

  """Attribute label: Seller ID"""
  seller_id: FilterEqualTypeInput

  """Attribute label: Short Description"""
  short_description: FilterMatchTypeInput

  """Attribute label: SKU"""
  sku: FilterEqualTypeInput

  """The part of the URL that identifies the product"""
  url_key: FilterEqualTypeInput
}

type ProductAttributeMetadata implements AttributeMetadataInterface {
  """An array of attribute labels defined for the current store."""
  attribute_labels: [StoreLabels]

  """
  The unique identifier for an attribute code. This value should be in lowercase letters without spaces.
  """
  code: String

  """The data type of the attribute."""
  data_type: ObjectDataTypeEnum

  """The type of entity that defines the attribute."""
  entity_type: AttributeEntityTypeEnum

  """Indicates whether the attribute is a system attribute."""
  is_system: Boolean

  """The label assigned to the attribute."""
  label: String

  """The relative position of the attribute."""
  sort_order: Int

  """Frontend UI properties of the attribute."""
  ui_input: UiInputTypeInterface

  """The unique ID of an attribute."""
  uid: ID

  """Places in the store front where the attribute is used."""
  used_in_components: [CustomAttributesListsEnum]
}

"""
Specifies the attribute to use for sorting search results and indicates whether
the results are sorted in ascending or descending order. It's possible to sort
products using searchable attributes with enabled 'Use in Filter Options' option
"""
input ProductAttributeSortInput {
  """Attribute label: Description"""
  description: SortEnum

  """Attribute label: Description_test"""
  description_test: SortEnum

  """Sort by the Product Discount Percentage."""
  discount_percentage: SortEnum

  """Sort by the Product created date."""
  news_from_date: SortEnum

  """Sort by the position assigned to each product."""
  position: SortEnum

  """Attribute label: Price"""
  price: SortEnum

  """Sort by the search relevance score (default)."""
  relevance: SortEnum
}

"""Product Information used for Pickup Locations search."""
type productAvailabilityOutput {
  """Product Qty."""
  qty: Float

  """Product SKU."""
  sku: String
}

"""Contains the discount applied to a product price."""
type ProductDiscount {
  """The actual value of the discount."""
  amount_off: Float

  """The discount expressed a percentage."""
  percent_off: Float
}

"""
ProductFilterInput is deprecated, use @ProductAttributeFilterInput instead.
ProductFilterInput defines the filters to be used in the search. A filter
contains at least one attribute, a comparison operator, and the value that is
being searched for.
"""
input ProductFilterInput {
  """The category ID the product belongs to."""
  category_id: FilterTypeInput

  """The product's country of origin."""
  country_of_manufacture: FilterTypeInput

  """The timestamp indicating when the product was created."""
  created_at: FilterTypeInput

  """The name of a custom layout."""
  custom_layout: FilterTypeInput

  """XML code that is applied as a layout update to the product page."""
  custom_layout_update: FilterTypeInput

  """
  Detailed information about the product. The value can include simple HTML tags.
  """
  description: FilterTypeInput

  """Indicates whether a gift message is available."""
  gift_message_available: FilterTypeInput

  """
  Indicates whether additional attributes have been created for the product.
  """
  has_options: FilterTypeInput

  """The relative path to the main image on the product page."""
  image: FilterTypeInput

  """The label assigned to a product image."""
  image_label: FilterTypeInput

  """A number representing the product's manufacturer."""
  manufacturer: FilterTypeInput

  """
  The numeric maximal price of the product. Do not include the currency code.
  """
  max_price: FilterTypeInput

  """
  A brief overview of the product for search results listings, maximum 255 characters.
  """
  meta_description: FilterTypeInput

  """
  A comma-separated list of keywords that are visible only to search engines.
  """
  meta_keyword: FilterTypeInput

  """
  A string that is displayed in the title bar and tab of the browser and in search results lists.
  """
  meta_title: FilterTypeInput

  """
  The numeric minimal price of the product. Do not include the currency code.
  """
  min_price: FilterTypeInput

  """The product name. Customers use this name to identify the product."""
  name: FilterTypeInput

  """
  The beginning date for new product listings, and determines if the product is featured as a new product.
  """
  news_from_date: FilterTypeInput

  """The end date for new product listings."""
  news_to_date: FilterTypeInput

  """
  If the product has multiple options, determines where they appear on the product page.
  """
  options_container: FilterTypeInput

  """The keyword required to perform a logical OR comparison."""
  or: ProductFilterInput

  """The price of an item."""
  price: FilterTypeInput

  """Indicates whether the product has required options."""
  required_options: FilterTypeInput

  """A short description of the product. Its use depends on the theme."""
  short_description: FilterTypeInput

  """
  A number or code assigned to a product to identify the product, options, price, and manufacturer.
  """
  sku: FilterTypeInput

  """The relative path to the small image, which is used on catalog pages."""
  small_image: FilterTypeInput

  """The label assigned to a product's small image."""
  small_image_label: FilterTypeInput

  """The beginning date that a product has a special price."""
  special_from_date: FilterTypeInput

  """The discounted price of the product. Do not include the currency code."""
  special_price: FilterTypeInput

  """The end date that a product has a special price."""
  special_to_date: FilterTypeInput

  """The file name of a swatch image."""
  swatch_image: FilterTypeInput

  """The relative path to the product's thumbnail image."""
  thumbnail: FilterTypeInput

  """The label assigned to a product's thumbnail image."""
  thumbnail_label: FilterTypeInput

  """
  The price when tier pricing is in effect and the items purchased threshold has been reached.
  """
  tier_price: FilterTypeInput

  """The timestamp indicating when the product was updated."""
  updated_at: FilterTypeInput

  """The part of the URL that identifies the product"""
  url_key: FilterTypeInput
  url_path: FilterTypeInput

  """The weight of the item, in units defined by the store."""
  weight: FilterTypeInput
}

"""Contains product image information, including the image URL and label."""
type ProductImage implements MediaGalleryInterface {
  """Indicates whether the image is hidden from view."""
  disabled: Boolean

  """The label of the product image or video."""
  label: String

  """The media item's position after it has been sorted."""
  position: Int

  """The URL of the product image or video."""
  url: String
}

"""Product Information used for Pickup Locations search."""
input ProductInfoInput {
  """Product Qty."""
  qty: Float

  """Product SKU."""
  sku: String!
}

"""Contains fields that are common to all types of products."""
interface ProductInterface {
  accessory_announcement_date: String
  accessory_brand: Int
  accessory_custom_engraving_text: String
  accessory_description_detailed_extra: String
  accessory_description_extra: String
  accessory_description_pagebuilder_extra: String
  accessory_gemstone_addon: String
  accessory_recyclable_material: Int
  activity: String

  """An array of product return messages."""
  amrma_return_info: [AmRmaProductReturnMessage]

  """The attribute set assigned to the product."""
  attribute_set_id: Int @deprecated(reason: "The field should not be used on the storefront.")
  brand: Int

  """
  The relative canonical URL. This value is returned only if the system setting
  'Use Canonical Link Meta Tag For Products' is enabled.
  """
  canonical_url: String

  """The categories assigned to a product."""
  categories: [CategoryInterface]
  color: Int

  """The product's country of origin."""
  country_of_manufacture: String

  """Timestamp indicating when the product was created."""
  created_at: String @deprecated(reason: "The field should not be used on the storefront.")

  """Crosssell Products"""
  crosssell_products: [ProductInterface]

  """List of product custom attributes details."""
  custom_attributes: [CustomAttribute]!

  """
  Detailed information about the product. The value can include simple HTML tags.
  """
  description: ComplexTextValue
  description_extra: String
  description_test: String
  discount_percentage: Float
  fashion_color: Int
  fashion_material: String
  fashion_size: Int
  fashion_style: String
  format: Int

  """Indicates whether a gift message is available."""
  gift_message_available: String
  has_video: Int

  """The ID number assigned to the product."""
  id: Int @deprecated(reason: "Use the `uid` field instead.")

  """The relative path to the main image on the product page."""
  image: ProductImage

  """A number representing the product's manufacturer."""
  manufacturer: Int

  """An array of media gallery objects."""
  media_gallery: [MediaGalleryInterface]

  """An array of MediaGalleryEntry objects."""
  media_gallery_entries: [MediaGalleryEntry] @deprecated(reason: "Use `media_gallery` instead.")

  """
  A brief overview of the product for search results listings, maximum 255 characters.
  """
  meta_description: String

  """
  A comma-separated list of keywords that are visible only to search engines.
  """
  meta_keyword: String

  """
  A string that is displayed in the title bar and tab of the browser and in search results lists.
  """
  meta_title: String

  """The product name. Customers use this name to identify the product."""
  name: String

  """
  The beginning date for new product listings, and determines if the product is featured as a new product.
  """
  new_from_date: String @deprecated(reason: "The field should not be used on the storefront.")

  """The end date for new product listings."""
  new_to_date: String @deprecated(reason: "The field should not be used on the storefront.")

  """Product stock only x left count"""
  only_x_left_in_stock: Float

  """
  If the product has multiple options, determines where they appear on the product page.
  """
  options_container: String

  """Indicates the price of an item."""
  price: ProductPrices @deprecated(reason: "Use `price_range` for product price information.")

  """The range of prices for the product"""
  price_range: PriceRange!

  """An array of `TierPrice` objects."""
  price_tiers: [TierPrice]

  """An array of `ProductLinks` objects."""
  product_links: [ProductLinksInterface]

  """The average of all the ratings given to the product."""
  rating_summary: Float!

  """An array of products to be displayed in a Related Products block."""
  related_products: [ProductInterface]

  """The total count of all the reviews given to the product."""
  review_count: Int!

  """The list of products reviews."""
  reviews(
    """The maximum number of results to return at once. The default is 20."""
    pageSize: Int = 20

    """The page of results to return. The default is 1."""
    currentPage: Int = 1
  ): ProductReviews!
  seller_id: Int

  """A short description of the product. Its use depends on the theme."""
  short_description: ComplexTextValue

  """
  A number or code assigned to a product to identify the product, options, price, and manufacturer.
  """
  sku: String

  """The relative path to the small image, which is used on catalog pages."""
  small_image: ProductImage

  """The beginning date that a product has a special price."""
  special_from_date: String @deprecated(reason: "The field should not be used on the storefront.")

  """The discounted price of the product."""
  special_price: Float

  """The end date for a product with a special price."""
  special_to_date: String

  """Stock status of the product"""
  stock_status: ProductStockStatus

  """The file name of a swatch image."""
  swatch_image: String

  """The relative path to the product's thumbnail image."""
  thumbnail: ProductImage

  """
  The price when tier pricing is in effect and the items purchased threshold has been reached.
  """
  tier_price: Float @deprecated(reason: "Use `price_tiers` for product tier price information.")

  """An array of ProductTierPrices objects."""
  tier_prices: [ProductTierPrices] @deprecated(reason: "Use `price_tiers` for product tier price information.")

  """
  One of simple, virtual, bundle, downloadable, grouped, or configurable.
  """
  type_id: String @deprecated(reason: "Use `__typename` instead.")

  """The unique ID for a `ProductInterface` object."""
  uid: ID!

  """Timestamp indicating when the product was updated."""
  updated_at: String @deprecated(reason: "The field should not be used on the storefront.")

  """Upsell Products"""
  upsell_products: [ProductInterface]

  """The part of the URL that identifies the product"""
  url_key: String
  url_path: String @deprecated(reason: "Use product's `canonical_url` or url rewrites instead")

  """URL rewrites list"""
  url_rewrites: [UrlRewrite]

  """The part of the product URL that is appended after the url key"""
  url_suffix: String
  video_file: String

  """An array of websites in which the product is available."""
  websites: [Website] @deprecated(reason: "The field should not be used on the storefront.")
}

"""An implementation of `ProductLinksInterface`."""
type ProductLinks implements ProductLinksInterface {
  """One of related, associated, upsell, or crosssell."""
  link_type: String

  """The SKU of the linked product."""
  linked_product_sku: String

  """
  The type of linked product (simple, virtual, bundle, downloadable, grouped, configurable).
  """
  linked_product_type: String

  """The position within the list of product links."""
  position: Int

  """The identifier of the linked product."""
  sku: String
}

"""
Contains information about linked products, including the link type and product type of each item.
"""
interface ProductLinksInterface {
  """One of related, associated, upsell, or crosssell."""
  link_type: String

  """The SKU of the linked product."""
  linked_product_sku: String

  """
  The type of linked product (simple, virtual, bundle, downloadable, grouped, configurable).
  """
  linked_product_type: String

  """The position within the list of product links."""
  position: Int

  """The identifier of the linked product."""
  sku: String
}

"""
Contains an image in base64 format and basic information about the image.
"""
type ProductMediaGalleryEntriesContent {
  """The image in base64 format."""
  base64_encoded_data: String

  """The file name of the image."""
  name: String

  """The MIME type of the file, such as image/png."""
  type: String
}

"""Contains a link to a video file and basic information about the video."""
type ProductMediaGalleryEntriesVideoContent {
  """Must be external-video."""
  media_type: String

  """A description of the video."""
  video_description: String

  """Optional data about the video."""
  video_metadata: String

  """Describes the video source."""
  video_provider: String

  """The title of the video."""
  video_title: String

  """The URL to the video."""
  video_url: String
}

"""Represents a product price."""
type ProductPrice {
  """
  The price discount. Represents the difference between the regular and final price.
  """
  discount: ProductDiscount

  """The final price of the product after applying discounts."""
  final_price: Money!

  """
  An array of the multiple Fixed Product Taxes that can be applied to a product price.
  """
  fixed_product_taxes: [FixedProductTax]

  """The regular price of the product."""
  regular_price: Money!

  """The estimated the one point earn for product price."""
  the_1_point_earn: Float!
}

"""
Deprecated. Use `PriceRange` instead. Contains the regular price of an item, as
well as its minimum and maximum prices. Only composite products, which include
bundle, configurable, and grouped products, can contain a minimum and maximum price.
"""
type ProductPrices {
  """
  The highest possible final price for all the options defined within a
  composite product. If you are specifying a price range, this would be the `to` value.
  """
  maximalPrice: Price @deprecated(reason: "Use `PriceRange.maximum_price` instead.")

  """
  The lowest possible final price for all the options defined within a composite
  product. If you are specifying a price range, this would be the `from` value.
  """
  minimalPrice: Price @deprecated(reason: "Use `PriceRange.minimum_price` instead.")

  """The base price of a product."""
  regularPrice: Price @deprecated(reason: "Use `regular_price` from `PriceRange.minimum_price` or `PriceRange.maximum_price` instead.")
}

"""Contains details of a product review."""
type ProductReview {
  """The average of all ratings for this product."""
  average_rating: Float!

  """The date the review was created."""
  created_at: String!

  """The customer's nickname. Defaults to the customer name, if logged in."""
  nickname: String!

  """The reviewed product."""
  product: ProductInterface!

  """
  An array of ratings by rating category, such as quality, price, and value.
  """
  ratings_breakdown: [ProductReviewRating]!

  """The summary (title) of the review."""
  summary: String!

  """The review text."""
  text: String!
}

"""Contains data about a single aspect of a product review."""
type ProductReviewRating {
  """
  The label assigned to an aspect of a product that is being rated, such as quality or price.
  """
  name: String!

  """
  The rating value given by customer. By default, possible values range from 1 to 5.
  """
  value: String!
}

"""Contains the reviewer's rating for a single aspect of a review."""
input ProductReviewRatingInput {
  """An encoded rating ID."""
  id: String!

  """An encoded rating value ID."""
  value_id: String!
}

"""Contains details about a single aspect of a product review."""
type ProductReviewRatingMetadata {
  """An encoded rating ID."""
  id: String!

  """
  The label assigned to an aspect of a product that is being rated, such as quality or price.
  """
  name: String!

  """List of product review ratings sorted by position."""
  values: [ProductReviewRatingValueMetadata]!
}

"""Contains an array of metadata about each aspect of a product review."""
type ProductReviewRatingsMetadata {
  """An array of product reviews sorted by position."""
  items: [ProductReviewRatingMetadata]!
}

"""Contains details about a single value in a product review."""
type ProductReviewRatingValueMetadata {
  """A ratings scale, such as the number of stars awarded."""
  value: String!

  """An encoded rating value ID."""
  value_id: String!
}

"""Contains an array of product reviews."""
type ProductReviews {
  """An array of product reviews."""
  items: [ProductReview]!

  """Metadata for pagination rendering."""
  page_info: SearchResultPageInfo!
}

"""Contains the results of a `products` query."""
type Products {
  """
  A bucket that contains the attribute code and label for each filterable option.
  """
  aggregations(filter: AggregationsFilterInput): [Aggregation]

  """Layered navigation filters array."""
  filters: [LayerFilter] @deprecated(reason: "Use `aggregations` instead.")

  """An array of products that match the specified search criteria."""
  items: [ProductInterface]

  """
  An object that includes the page_info and currentPage values specified in the query.
  """
  page_info: SearchResultPageInfo

  """
  An object that includes the default sort field and all available sort fields.
  """
  sort_fields: SortFields

  """
  An array of search suggestions for case when search query have no results.
  """
  suggestions: [SearchSuggestion]

  """
  The number of products that are marked as visible. By default, in complex
  products, parent products are visible, but their child products are not.
  """
  total_count: Int
}

"""
Deprecated. Use `ProductAttributeSortInput` instead. Specifies the attribute to
use for sorting search results and indicates whether the results are sorted in
ascending or descending order.
"""
input ProductSortInput {
  """The product's country of origin."""
  country_of_manufacture: SortEnum

  """The timestamp indicating when the product was created."""
  created_at: SortEnum

  """The name of a custom layout."""
  custom_layout: SortEnum

  """XML code that is applied as a layout update to the product page."""
  custom_layout_update: SortEnum

  """
  Detailed information about the product. The value can include simple HTML tags.
  """
  description: SortEnum

  """Indicates whether a gift message is available."""
  gift_message_available: SortEnum

  """
  Indicates whether additional attributes have been created for the product.
  """
  has_options: SortEnum

  """The relative path to the main image on the product page."""
  image: SortEnum

  """The label assigned to a product image."""
  image_label: SortEnum

  """A number representing the product's manufacturer."""
  manufacturer: SortEnum

  """
  A brief overview of the product for search results listings, maximum 255 characters.
  """
  meta_description: SortEnum

  """
  A comma-separated list of keywords that are visible only to search engines.
  """
  meta_keyword: SortEnum

  """
  A string that is displayed in the title bar and tab of the browser and in search results lists.
  """
  meta_title: SortEnum

  """The product name. Customers use this name to identify the product."""
  name: SortEnum

  """
  The beginning date for new product listings, and determines if the product is featured as a new product.
  """
  news_from_date: SortEnum

  """The end date for new product listings."""
  news_to_date: SortEnum

  """
  If the product has multiple options, determines where they appear on the product page.
  """
  options_container: SortEnum

  """The price of the item."""
  price: SortEnum

  """Indicates whether the product has required options."""
  required_options: SortEnum

  """A short description of the product. Its use depends on the theme."""
  short_description: SortEnum

  """
  A number or code assigned to a product to identify the product, options, price, and manufacturer.
  """
  sku: SortEnum

  """The relative path to the small image, which is used on catalog pages."""
  small_image: SortEnum

  """The label assigned to a product's small image."""
  small_image_label: SortEnum

  """The beginning date that a product has a special price."""
  special_from_date: SortEnum

  """The discounted price of the product."""
  special_price: SortEnum

  """The end date that a product has a special price."""
  special_to_date: SortEnum

  """Indicates the criteria to sort swatches."""
  swatch_image: SortEnum

  """The relative path to the product's thumbnail image."""
  thumbnail: SortEnum

  """The label assigned to a product's thumbnail image."""
  thumbnail_label: SortEnum

  """
  The price when tier pricing is in effect and the items purchased threshold has been reached.
  """
  tier_price: SortEnum

  """The timestamp indicating when the product was updated."""
  updated_at: SortEnum

  """The part of the URL that identifies the product"""
  url_key: SortEnum
  url_path: SortEnum

  """The weight of the item, in units defined by the store."""
  weight: SortEnum
}

"""
This enumeration states whether a product stock status is in stock or out of stock
"""
enum ProductStockStatus {
  IN_STOCK
  OUT_OF_STOCK
}

"""
Deprecated. Use `TierPrice` instead. Defines a tier price, which is a quantity
discount offered to a specific customer group.
"""
type ProductTierPrices {
  """The ID of the customer group."""
  customer_group_id: String @deprecated(reason: "Not relevant for the storefront.")

  """The percentage discount of the item."""
  percentage_value: Float @deprecated(reason: "Use `TierPrice.discount` instead.")

  """
  The number of items that must be purchased to qualify for tier pricing.
  """
  qty: Float @deprecated(reason: "Use `TierPrice.quantity` instead.")

  """The price of the fixed price item."""
  value: Float @deprecated(reason: "Use `TierPrice.final_price` instead.")

  """The ID assigned to the website."""
  website_id: Float @deprecated(reason: "Not relevant for the storefront.")
}

"""Contains information about a product video."""
type ProductVideo implements MediaGalleryInterface {
  """Indicates whether the image is hidden from view."""
  disabled: Boolean

  """The label of the product image or video."""
  label: String

  """The media item's position after it has been sorted."""
  position: Int

  """The URL of the product image or video."""
  url: String

  """Contains a `ProductMediaGalleryEntriesVideoContent` object."""
  video_content: ProductMediaGalleryEntriesVideoContent
}

type Query {
  """
  Return details about custom EAV attributes, and optionally, system attributes.
  """
  attributesMetadata(
    """The type of entity to search."""
    entityType: AttributeEntityTypeEnum!

    """An array of attribute IDs to search."""
    attributeUids: [ID!]

    """Indicates whether to return matching system attributes as well."""
    showSystemAttributes: Boolean
  ): AttributesMetadata

  """Get a list of available store views and their config information."""
  availableStores(
    """Filter store views by the current store group."""
    useCurrentGroup: Boolean
  ): [StoreConfig]

  """Return information about the specified shopping cart."""
  cart(
    """The unique ID of the cart to query."""
    cart_id: String!
  ): Cart

  """Return a list of categories that match the specified filter."""
  categories(
    """Identifies which Category filter inputs to search for and return."""
    filters: CategoryFilterInput

    """
    Specifies the maximum number of results to return at once. The default value is 20.
    """
    pageSize: Int = 20

    """Specifies which page of results to return. The default value is 1."""
    currentPage: Int = 1
  ): CategoryResult

  """
  Search for categories that match the criteria specified in the `search` and `filter` attributes.
  """
  category(
    """The category ID to use as the root of the search."""
    id: Int
  ): CategoryTree @deprecated(reason: "Use `categoryList` instead.")

  """Return an array of categories based on the specified filters."""
  categoryList(
    """Identifies which Category filter inputs to search for and return."""
    filters: CategoryFilterInput
  ): [CategoryTree]

  """Return Terms and Conditions configuration information."""
  checkoutAgreements: [CheckoutAgreement]

  """Return information about CMS blocks."""
  cmsBlocks(
    """An array of CMS block IDs."""
    identifiers: [String]
  ): CmsBlocks

  """Return details about a CMS page."""
  cmsPage(
    """The ID of the CMS page."""
    id: Int

    """The identifier of the CMS page."""
    identifier: String
  ): CmsPage

  """Return products that have been added to the specified compare list."""
  compareList(
    """The unique ID of the compare list to be queried."""
    uid: ID!
  ): CompareList

  """The countries query provides information for all countries."""
  countries: [Country]

  """The countries query provides information for a single country."""
  country(id: String): Country

  """Return information about the store's currency."""
  currency: Currency

  """Return the attribute type, given an attribute code and entity type."""
  customAttributeMetadata(
    """
    An input object that specifies the attribute code and entity type to search.
    """
    attributes: [AttributeInput!]!
  ): CustomAttributeMetadata

  """Return detailed information about a customer account."""
  customer: Customer
  customerBankAccounts(
    """Specifies which page of results to return. The default value is 1."""
    currentPage: Int = 1

    """
    Specifies the maximum number of results to return at once. The default value is 20.
    """
    pageSize: Int = 20
  ): [CustomerBankAccount]

  """Return information about the customer's shopping cart."""
  customerCart: Cart!
  customerOrders(
    """Defines the filter to use for searching customer orders."""
    filter: CustomerOrdersFilterInput

    """Specifies which page of results to return. The default value is 1."""
    currentPage: Int = 1

    """
    Specifies the maximum number of results to return at once. The default value is 20.
    """
    pageSize: Int = 20

    """
    Specifies which attribute to sort on, and whether to return the results in ascending or descending order.
    """
    order: CustomerOrdersSortInput
  ): CustomerOrders @deprecated(reason: "Use the `customer` query instead.")

  """Return a list of customer payment tokens stored in the vault."""
  customerPaymentTokens: CustomerPaymentTokens
  customerRemark: String
  customerSalesShipment(
    """Shipment filters"""
    filter: CustomerShipmentFilterInput

    """Specifies which page of results to return. The default value is 1."""
    currentPage: Int = 1

    """
    Specifies the maximum number of results to return at once. The default value is 20.
    """
    pageSize: Int = 20

    """Sort order for shipment list"""
    sort: CustomerSalesShipmentSortInput
  ): CustomerSalesShipments

  """A list of customer's returnable orders"""
  getAmRmaOrderList: [AmRmaOrder]

  """Get return policy page"""
  getAmRmaPolicy: AmRmaPolicy

  """Return Request Chat Messages."""
  getAmRmaRequestMessages(
    """Hash of the Return Request"""
    hash: String!

    """ID of a last message from which to get messages"""
    last_message_id: Int
  ): [AmRmaMessage]

  """Get Return Request by ID.'"""
  getAmRmaReturnById(
    """Id of a Return Request,"""
    request_id: Int!
  ): AmRmaReturnRequest

  """Return Request Instructions For Coresponding Status."""
  getAmRmaReturnInstruction(
    """Id of Status."""
    status_id: Int!
  ): String

  """A list of customer's return requests"""
  getAmRmaReturnsForCurrentCustomer: [AmRmaReturnRequest]
  getAmRmaSettings: AmRmaSetting

  """
  Retrieve the secure PayPal URL for a Payments Pro Hosted Solution transaction.
  """
  getHostedProUrl(
    """An input object that specifies the cart ID."""
    input: HostedProUrlInput!
  ): HostedProUrl

  """
  Retrieve payment credentials for a transaction. Use this query for Payflow Link and Payments Advanced payment methods.
  """
  getPayflowLinkToken(
    """
    An input object that defines the requirements to receive a payment token.
    """
    input: PayflowLinkTokenInput!
  ): PayflowLinkToken

  """
  Check whether the specified email has already been used to create a customer account.
  """
  isEmailAvailable(
    """The email address to check."""
    email: String!
  ): IsEmailAvailableOutput

  """
  The pickup locations query searches for locations that match the search request requirements.
  """
  pickupLocations(
    """Perform search by location using radius and search term."""
    area: AreaInput

    """Apply filters by attributes."""
    filters: PickupLocationFilterInput

    """
    Specifies which attribute to sort on, and whether to return the results in ascending or descending order.
    """
    sort: PickupLocationSortInput

    """
    The maximum number of pickup locations to return at once. The attribute is optional.
    """
    pageSize: Int = 20

    """Specifies which page of results to return. The default value is 1."""
    currentPage: Int = 1

    """Information about products which should be delivered."""
    productsInfo: [ProductInfoInput]
  ): PickupLocations

  """
  The pickup locations query searches for locations that match the search request requirements.
  """
  pickupLocationsWithAvailability(
    """Perform search by location using radius and search term."""
    area: AreaInput

    """Apply filters by attributes."""
    filters: PickupLocationFilterInput

    """
    Specifies which attribute to sort on, and whether to return the results in ascending or descending order.
    """
    sort: PickupLocationSortInput

    """
    The maximum number of pickup locations to return at once. The attribute is optional.
    """
    pageSize: Int = 20

    """Specifies which page of results to return. The default value is 1."""
    currentPage: Int = 1

    """Information about products which should be delivered."""
    productsInfo: [ProductInfoInput]
  ): pickupLocationsWithAvailability

  """
  The pickup locations query searches for locations that match the search request requirements.
  """
  productAvailability(
    """Perform search by location using radius and search term."""
    area: AreaInput

    """Apply filters by attributes."""
    filters: PickupLocationFilterInput

    """
    Specifies which attribute to sort on, and whether to return the results in ascending or descending order.
    """
    sort: PickupLocationSortInput

    """
    The maximum number of pickup locations to return at once. The attribute is optional.
    """
    pageSize: Int = 20

    """Specifies which page of results to return. The default value is 1."""
    currentPage: Int = 1

    """Information about products which should be delivered."""
    productsInfo: [ProductInfoInput]
  ): pickupLocationsWithAvailability

  """
  Return the active ratings attributes and the values each rating can have.
  """
  productReviewRatingsMetadata: ProductReviewRatingsMetadata!

  """
  Search for products that match the criteria specified in the `search` and `filter` attributes.
  """
  products(
    """One or more keywords to use in a full-text search."""
    search: String

    """The product attributes to search for and return."""
    filter: ProductAttributeFilterInput

    """
    The maximum number of results to return at once. The default value is 20.
    """
    pageSize: Int = 20

    """The page of results to return. The default value is 1."""
    currentPage: Int = 1

    """
    Specifies which attributes to sort on, and whether to return the results in ascending or descending order.
    """
    sort: ProductAttributeSortInput
  ): Products

  """Returns details about Google reCAPTCHA V3-Invisible configuration."""
  recaptchaV3Config: ReCaptchaConfigurationV3

  """Get the seller based on id or seller_code"""
  retailerByCode(
    """The seller code for getting seller"""
    seller_code: String!
  ): Retailer

  """Get the seller based on id or seller_code"""
  retailerById(
    """The ID for getting seller"""
    id: Int!
  ): Retailer

  """The list of retailers"""
  retailers(
    """
    The maximum number of results to return at once. The default value is 20.
    """
    pageSize: Int = 20

    """The page of results to return. The default value is 1."""
    currentPage: Int = 1
  ): Retailers

  """
  Return the full details for a specified product, category, or CMS page.
  """
  route(
    """A `url_key` appended by the `url_suffix, if one exists."""
    url: String!
  ): RoutableInterface
  shipmentStateList: [SalesShipmentStates]

  """Return details about the store's configuration."""
  storeConfig: StoreConfig

  """Return the relative URL for a specified product, category or CMS page."""
  urlResolver(
    """A `url_key` appended by the `url_suffix, if one exists."""
    url: String!
  ): EntityUrl @deprecated(reason: "Use the `route` query instead.")

  """Return the contents of a customer's wish list."""
  wishlist: Wishlist @deprecated(reason: "Moved under `Customer.wishlist`.")
}

input RateAmRmaReturnRequest {
  """Rating Comment of Return Request."""
  comment: String

  """Hash of Return Request."""
  hash: String!

  """Rating Value of Return Request from 1 to 5."""
  rating: Int!
}

"""Contains reCAPTCHA V3-Invisible configuration details."""
type ReCaptchaConfigurationV3 {
  """The position of the invisible reCAPTCHA badge on each page."""
  badge_position: String!

  """The message that appears to the user if validation fails."""
  failure_message: String!

  """
  A list of forms on the storefront that have been configured to use reCAPTCHA V3.
  """
  forms: [ReCaptchaFormEnum]!

  """
  A two-character code that specifies the language that is used for Google reCAPTCHA text and messaging.
  """
  language_code: String

  """
  The minimum score that identifies a user interaction as a potential risk.
  """
  minimum_score: Float!

  """
  The website key generated when the Google reCAPTCHA account was registered.
  """
  website_key: String!
}

enum ReCaptchaFormEnum {
  PLACE_ORDER
  CONTACT
  CUSTOMER_LOGIN
  CUSTOMER_FORGOT_PASSWORD
  CUSTOMER_CREATE
  CUSTOMER_EDIT
  NEWSLETTER
  PRODUCT_REVIEW
  SENDFRIEND
  BRAINTREE
}

"""Receive shipment input data"""
input ReceiveShipmentInput {
  shipment_id: ID!
}

"""Return shipment update result"""
type ReceiveShipmentOutput {
  result: Boolean!
}

type Region {
  """The two-letter code for the region, such as TX for Texas."""
  code: String

  """The unique ID for a `Region` object."""
  id: Int

  """The name of the region, such as Texas."""
  name: String
}

input RemoveAmRmaTrackingNumberInput {
  """Hash of Return Request."""
  hash: String!

  """ID of a Tracking Number."""
  tracking_id: Int!
}

"""Specifies the cart from which to remove a coupon."""
input RemoveCouponFromCartInput {
  """The unique ID of a `Cart` object."""
  cart_id: String!
}

"""Contains details about the cart after removing a coupon."""
type RemoveCouponFromCartOutput {
  """The cart after removing a coupon."""
  cart: Cart
}

"""Specifies which items to remove from the cart."""
input RemoveItemFromCartInput {
  """The unique ID of a `Cart` object."""
  cart_id: String!

  """Deprecated. Use `cart_item_uid` instead."""
  cart_item_id: Int

  """Required field. The unique ID for a `CartItemInterface` object."""
  cart_item_uid: ID
}

"""Contains details about the cart after removing an item."""
type RemoveItemFromCartOutput {
  """The cart after removing an item."""
  cart: Cart!
}

"""Defines which products to remove from a compare list."""
input RemoveProductsFromCompareListInput {
  """An array of product IDs to remove from the compare list."""
  products: [ID]!

  """The unique identifier of the compare list to modify."""
  uid: ID!
}

"""Contains the customer's wish list and any errors encountered."""
type RemoveProductsFromWishlistOutput {
  """
  An array of errors encountered while deleting products from a wish list.
  """
  user_errors: [WishListUserInputError]!

  """Contains the wish list with after items were successfully deleted."""
  wishlist: Wishlist!
}

"""Contains the cart and any errors after adding products."""
type ReorderItemsOutput {
  """Detailed information about the customer's cart."""
  cart: Cart!

  """An array of reordering errors."""
  userInputErrors: [CheckoutUserInputError]!
}

type Retailer {
  """The address of the seller"""
  address: RetailerAddress

  """The datetime when the seller is created"""
  created_at: String

  """The list of seller custom attribute"""
  custom_attributes: [RetailerCustomAttribute]

  """The ID of seller"""
  id: Int

  """Is seller active"""
  is_active: Boolean

  """The image path of seller"""
  media_path: String

  """The Name of seller"""
  name: String

  """The unique seller code for seller"""
  seller_code: String

  """The datetime when the seller is last updated"""
  updated_at: String
}

type RetailerAddress {
  """The address city"""
  city: String

  """The address coorinates"""
  coordinates: Coordinate

  """The country code"""
  country_id: String

  """The address postcode"""
  postcode: String

  """The address region"""
  region: String

  """The address street"""
  street: [String]
}

type RetailerCustomAttribute {
  """The attribute code of a custom attribute"""
  attribute_code: String

  """The value of a custom attribute"""
  value: String
}

type Retailers {
  """An array of retailers"""
  items: [Retailer]

  """
  An object that includes the page_info and currentPage values specified in the query.
  """
  page_info: SearchResultPageInfo

  """The number of retailers"""
  total_count: Int
}

"""Contains the result of a request to revoke a customer token."""
type RevokeCustomerTokenOutput {
  """The result of a request to revoke a customer token."""
  result: Boolean!
}

"""Routable entities serve as the model for a rendered page."""
interface RoutableInterface {
  """
  Contains 0 when there is no redirect error. A value of 301 indicates the URL
  of the requested resource has been changed permanently, while a value of 302
  indicates a temporary redirect.
  """
  redirect_code: Int!

  """
  The internal relative URL. If the specified URL is a redirect, the query returns the redirected URL, not the original.
  """
  relative_url: String

  """One of PRODUCT, CATEGORY, or CMS_PAGE."""
  type: UrlRewriteEntityTypeEnum
}

"""Contains details about a comment."""
type SalesCommentItem {
  """The text of the message."""
  message: String!

  """The timestamp of the comment."""
  timestamp: String!
}

type SalesItemInterface {
  """The entered gift message for the order item"""
  gift_message: GiftMessage
}

"""Shipment State Data"""
type SalesShipmentStates {
  is_show_in_tab: Boolean
  state_id: Int
  value: String
}

"""Provides navigation for the query response."""
type SearchResultPageInfo {
  """The specific page to return."""
  current_page: Int

  """The maximum number of items to return per page of results."""
  page_size: Int

  """The total number of pages in the response."""
  total_pages: Int
}

"""A string that contains search suggestion"""
type SearchSuggestion {
  """The search suggestion of existing product."""
  search: String!
}

"""Defines selectable input types of the attribute."""
interface SelectableInputTypeInterface {
  """An array of attribute options."""
  attribute_options: [AttributeOptionInterface]
}

type SelectedAttributeOption {
  """Selected attribute option details."""
  attribute_option: [AttributeOptionInterface]
}

"""Contains details about a selected configurable option."""
type SelectedConfigurableOption {
  """The unique ID for a `ConfigurableProductOptions` object."""
  configurable_product_option_uid: ID!

  """The unique ID for a `ConfigurableProductOptionsValues` object."""
  configurable_product_option_value_uid: ID!
  id: Int! @deprecated(reason: "Use `SelectedConfigurableOption.configurable_product_option_uid` instead.")

  """The display text for the option."""
  option_label: String!
  value_id: Int! @deprecated(reason: "Use `SelectedConfigurableOption.configurable_product_option_value_uid` instead.")

  """The display name of the selected configurable option."""
  value_label: String!
}

"""Identifies a customized product that has been placed in a cart."""
type SelectedCustomizableOption {
  """
  The unique ID for a specific `CustomizableOptionInterface` object, such as a
  `CustomizableFieldOption`, `CustomizableFileOption`, or
  `CustomizableAreaOption` object.
  """
  customizable_option_uid: ID!
  id: Int! @deprecated(reason: "Use `SelectedCustomizableOption.customizable_option_uid` instead.")

  """Indicates whether the customizable option is required."""
  is_required: Boolean!

  """The display name of the selected customizable option."""
  label: String!

  """A value indicating the order to display this option."""
  sort_order: Int!

  """The type of `CustomizableOptionInterface` object."""
  type: String!

  """An array of selectable values."""
  values: [SelectedCustomizableOptionValue]!
}

"""Identifies the value of the selected customized option."""
type SelectedCustomizableOptionValue {
  """
  The unique ID for a value object that corresponds to the object represented by the `customizable_option_uid` attribute.
  """
  customizable_option_value_uid: ID!
  id: Int! @deprecated(reason: "Use `SelectedCustomizableOptionValue.customizable_option_value_uid` instead.")

  """The display name of the selected value."""
  label: String!

  """The price of the selected customizable value."""
  price: CartItemSelectedOptionValuePrice!

  """The text identifying the selected value."""
  value: String!
}

"""Describes the payment method the shopper selected."""
type SelectedPaymentMethod {
  """The payment method code."""
  code: String!

  """The purchase order number."""
  purchase_order_number: String

  """The payment method title."""
  title: String!
}

"""Contains details about the selected shipping method and carrier."""
type SelectedShippingMethod {
  """The cost of shipping using this shipping method."""
  amount: Money!
  base_amount: Money @deprecated(reason: "The field should not be used on the storefront.")

  """
  A string that identifies a commercial carrier or an offline shipping method.
  """
  carrier_code: String!

  """The label for the carrier code."""
  carrier_title: String!

  """A shipping method code associated with a carrier."""
  method_code: String!

  """The label for the method code."""
  method_title: String!
}

"""Contains details about the selected shipping method and carrier."""
type SelectedShippingMethodInclTax {
  """The cost of shipping incl tax using this shipping method."""
  amount: Money!
}

"""Apply seller shipping cost."""
input SellerShippingOnCartInput {
  cart_id: String!
}

input SendAmRmaMessageFileInput {
  """Hash of File."""
  filehash: String!

  """Real Name of File."""
  filename: String!
}

input SendAmRmaMessageInput {
  """Files Attached to a Message."""
  files: [SendAmRmaMessageFileInput]

  """Hash of Return Request."""
  hash: String!

  """Content of a Message."""
  message: String
}

"""Defines the referenced product and the email sender and recipients."""
input SendEmailToFriendInput {
  """The ID of the product that the sender is referencing."""
  product_id: Int!

  """An array containing information about each recipient."""
  recipients: [SendEmailToFriendRecipientInput]!

  """Information about the customer and the content of the message."""
  sender: SendEmailToFriendSenderInput!
}

"""Contains information about the sender and recipients."""
type SendEmailToFriendOutput {
  """An array containing information about each recipient."""
  recipients: [SendEmailToFriendRecipient]

  """Information about the customer and the content of the message."""
  sender: SendEmailToFriendSender
}

"""An output object that contains information about the recipient."""
type SendEmailToFriendRecipient {
  """The email address of the recipient."""
  email: String!

  """The name of the recipient."""
  name: String!
}

"""Contains details about a recipient."""
input SendEmailToFriendRecipientInput {
  """The email address of the recipient."""
  email: String!

  """The name of the recipient."""
  name: String!
}

"""An output object that contains information about the sender."""
type SendEmailToFriendSender {
  """The email address of the sender."""
  email: String!

  """The text of the message to be sent."""
  message: String!

  """The name of the sender."""
  name: String!
}

"""Contains details about the sender."""
input SendEmailToFriendSenderInput {
  """The email address of the sender."""
  email: String!

  """The text of the message to be sent."""
  message: String!

  """The name of the sender."""
  name: String!
}

"""
Contains details about the configuration of the Email to a Friend feature.
"""
type SendFriendConfiguration {
  """Indicates whether the Email to a Friend feature is enabled."""
  enabled_for_customers: Boolean!

  """Indicates whether the Email to a Friend feature is enabled for guests."""
  enabled_for_guests: Boolean!
}

"""Sets the billing address."""
input SetBillingAddressOnCartInput {
  """The billing address."""
  billing_address: BillingAddressInput!

  """The unique ID of a `Cart` object."""
  cart_id: String!
}

"""Contains details about the cart after setting the billing address."""
type SetBillingAddressOnCartOutput {
  """The cart after setting the billing address."""
  cart: Cart!
}

"""Defines the guest email and cart."""
input SetGuestEmailOnCartInput {
  """The unique ID of a `Cart` object."""
  cart_id: String!

  """The email address of the guest."""
  email: String!
}

"""Contains details about the cart after setting the email of a guest."""
type SetGuestEmailOnCartOutput {
  """The cart after setting the guest email."""
  cart: Cart!
}

"""Applies a payment method to the quote."""
input SetPaymentMethodAndPlaceOrderInput {
  """The unique ID of a `Cart` object."""
  cart_id: String!

  """The payment method data to apply to the cart."""
  payment_method: PaymentMethodInput!
}

"""Applies a payment method to the cart."""
input SetPaymentMethodOnCartInput {
  """The unique ID of a `Cart` object."""
  cart_id: String!

  """The payment method data to apply to the cart."""
  payment_method: PaymentMethodInput!
}

"""Contains details about the cart after setting the payment method."""
type SetPaymentMethodOnCartOutput {
  """The cart after setting the payment method."""
  cart: Cart!
}

"""Specifies an array of addresses to use for shipping."""
input SetShippingAddressesOnCartInput {
  """The unique ID of a `Cart` object."""
  cart_id: String!

  """An array of shipping addresses."""
  shipping_addresses: [ShippingAddressInput]!
}

"""Contains details about the cart after setting the shipping addresses."""
type SetShippingAddressesOnCartOutput {
  """The cart after setting the shipping addresses."""
  cart: Cart!
}

"""Applies one or shipping methods to the cart."""
input SetShippingMethodsOnCartInput {
  """The unique ID of a `Cart` object."""
  cart_id: String!

  """An array of shipping methods."""
  shipping_methods: [ShippingMethodInput]!
}

"""Contains details about the cart after setting the shipping methods."""
type SetShippingMethodsOnCartOutput {
  """The cart after setting the shipping methods."""
  cart: Cart!
}

type ShipmentItem implements ShipmentItemInterface {
  """Item additional data"""
  additional_data: String

  """The unique ID for a `ShipmentItemInterface` object."""
  id: ID!

  """The order item associated with the shipment item."""
  order_item: OrderItemInterface

  """The name of the base product."""
  product_name: String

  """The sale price for the base product."""
  product_sale_price: Money!

  """The SKU of the base product."""
  product_sku: String!

  """The number of shipped items."""
  quantity_shipped: Float!
}

"""Order shipment item details."""
interface ShipmentItemInterface {
  """Item additional data"""
  additional_data: String

  """The unique ID for a `ShipmentItemInterface` object."""
  id: ID!

  """The order item associated with the shipment item."""
  order_item: OrderItemInterface

  """The name of the base product."""
  product_name: String

  """The sale price for the base product."""
  product_sale_price: Money!

  """The SKU of the base product."""
  product_sku: String!

  """The number of shipped items."""
  quantity_shipped: Float!
}

"""Contains order shipment tracking details."""
type ShipmentTracking {
  """The shipping carrier for the order delivery."""
  carrier: String!

  """The tracking number of the order shipment."""
  number: String

  """The shipment tracking title."""
  title: String!
}

"""Defines a single shipping address."""
input ShippingAddressInput {
  """Defines a shipping address."""
  address: CartAddressInput

  """
  An ID from the customer's address book that uniquely identifies the address to be used for shipping.
  """
  customer_address_id: Int

  """Text provided by the shopper."""
  customer_notes: String

  """The code of Pickup Location which will be used for In-Store Pickup."""
  pickup_location_code: String
}

"""Contains details about the billing address."""
type ShippingCartAddress implements CartAddressInterface {
  """
  An array that lists the shipping methods that can be applied to the cart.
  """
  available_shipping_methods: [AvailableShippingMethod]
  cart_items: [CartItemQuantity] @deprecated(reason: "Use `cart_items_v2` instead.")

  """An array that lists the items in the cart."""
  cart_items_v2: [CartItemInterface]

  """The city specified for the billing or shipping address."""
  city: String

  """The company specified for the billing or shipping address."""
  company: String

  """An object containing the country label and code."""
  country: CartAddressCountry!

  """Text provided by the shopper."""
  customer_notes: String

  """The request district of the customer or guest."""
  district: String

  """The first name of the customer or guest."""
  firstname: String!
  items_weight: Float @deprecated(reason: "This information should not be exposed on the frontend.")

  """The last name of the customer or guest."""
  lastname: String!
  pickup_location_code: String

  """The ZIP or postal code of the billing or shipping address."""
  postcode: String

  """An object containing the region label and code."""
  region: CartAddressRegion

  """The request tax invoice of the customer or guest."""
  request_tax_invoice: Boolean

  """An object that describes the selected shipping method incl tax."""
  selected_shipping_including_tax: SelectedShippingMethodInclTax

  """An object that describes the selected shipping method."""
  selected_shipping_method: SelectedShippingMethod

  """An array containing the street for the billing or shipping address."""
  street: [String]!

  """The request sub_district of the customer or guest."""
  sub_district: String

  """The telephone number for the billing or shipping address."""
  telephone: String

  """VAT ID"""
  vat_id: String
}

"""
Defines an individual shipping discount. This discount can be applied to shipping.
"""
type ShippingDiscount {
  """The amount of the discount."""
  amount: Money!
}

"""Contains details about shipping and handling costs."""
type ShippingHandling {
  """The shipping amount, excluding tax."""
  amount_excluding_tax: Money

  """The shipping amount, including tax."""
  amount_including_tax: Money

  """The applied discounts to the shipping."""
  discounts: [ShippingDiscount]

  """Details about taxes applied for shipping."""
  taxes: [TaxItem]

  """The total amount for shipping."""
  total_amount: Money!
}

"""Defines the shipping carrier and method."""
input ShippingMethodInput {
  """
  A string that identifies a commercial carrier or an offline delivery method.
  """
  carrier_code: String!

  """
  A string that indicates which service a commercial carrier will use to ship
  items. For offline delivery methods, this value is similar to the label
  displayed on the checkout page.
  """
  method_code: String!
}

"""An implementation for simple product cart items."""
type SimpleCartItem implements CartItemInterface {
  """An array of product return messages."""
  amrma_return_info: [AmRmaProductReturnMessage]

  """An array containing the customizable options the shopper selected."""
  customizable_options: [SelectedCustomizableOption]!

  """An array of errors encountered while loading the cart item"""
  errors: [CartItemError]

  """The entered gift message for the cart item"""
  gift_message: GiftMessage
  id: String! @deprecated(reason: "Use `uid` instead.")

  """
  Contains details about the price of the item, including taxes and discounts.
  """
  prices: CartItemPrices

  """Details about an item in the cart."""
  product: ProductInterface!

  """The quantity of this item in the cart."""
  quantity: Float!

  """Contains details about the seller of the item"""
  seller: Retailer

  """The unique ID for a `CartItemInterface` object."""
  uid: ID!
}

"""
Defines a simple product, which is tangible and is usually sold in single units or in fixed quantities.
"""
type SimpleProduct implements ProductInterface & RoutableInterface & PhysicalProductInterface & CustomizableProductInterface {
  accessory_announcement_date: String
  accessory_brand: Int
  accessory_custom_engraving_text: String
  accessory_description_detailed_extra: String
  accessory_description_extra: String
  accessory_description_pagebuilder_extra: String
  accessory_gemstone_addon: String
  accessory_recyclable_material: Int
  activity: String

  """An array of product return messages."""
  amrma_return_info: [AmRmaProductReturnMessage]

  """The attribute set assigned to the product."""
  attribute_set_id: Int @deprecated(reason: "The field should not be used on the storefront.")
  brand: Int

  """
  The relative canonical URL. This value is returned only if the system setting
  'Use Canonical Link Meta Tag For Products' is enabled.
  """
  canonical_url: String

  """The categories assigned to a product."""
  categories: [CategoryInterface]
  color: Int

  """The product's country of origin."""
  country_of_manufacture: String

  """Timestamp indicating when the product was created."""
  created_at: String @deprecated(reason: "The field should not be used on the storefront.")

  """Crosssell Products"""
  crosssell_products: [ProductInterface]

  """List of product custom attributes details."""
  custom_attributes: [CustomAttribute]!

  """
  Detailed information about the product. The value can include simple HTML tags.
  """
  description: ComplexTextValue
  description_extra: String
  description_test: String
  discount_percentage: Float
  fashion_color: Int
  fashion_material: String
  fashion_size: Int
  fashion_style: String
  format: Int

  """Indicates whether a gift message is available."""
  gift_message_available: String
  has_video: Int

  """The ID number assigned to the product."""
  id: Int @deprecated(reason: "Use the `uid` field instead.")

  """The relative path to the main image on the product page."""
  image: ProductImage

  """A number representing the product's manufacturer."""
  manufacturer: Int

  """An array of media gallery objects."""
  media_gallery: [MediaGalleryInterface]

  """An array of MediaGalleryEntry objects."""
  media_gallery_entries: [MediaGalleryEntry] @deprecated(reason: "Use `media_gallery` instead.")

  """
  A brief overview of the product for search results listings, maximum 255 characters.
  """
  meta_description: String

  """
  A comma-separated list of keywords that are visible only to search engines.
  """
  meta_keyword: String

  """
  A string that is displayed in the title bar and tab of the browser and in search results lists.
  """
  meta_title: String

  """The product name. Customers use this name to identify the product."""
  name: String

  """
  The beginning date for new product listings, and determines if the product is featured as a new product.
  """
  new_from_date: String @deprecated(reason: "The field should not be used on the storefront.")

  """The end date for new product listings."""
  new_to_date: String @deprecated(reason: "The field should not be used on the storefront.")

  """Product stock only x left count"""
  only_x_left_in_stock: Float

  """An array of options for a customizable product."""
  options: [CustomizableOptionInterface]

  """
  If the product has multiple options, determines where they appear on the product page.
  """
  options_container: String

  """Indicates the price of an item."""
  price: ProductPrices @deprecated(reason: "Use `price_range` for product price information.")

  """The range of prices for the product"""
  price_range: PriceRange!

  """An array of `TierPrice` objects."""
  price_tiers: [TierPrice]

  """An array of `ProductLinks` objects."""
  product_links: [ProductLinksInterface]

  """The average of all the ratings given to the product."""
  rating_summary: Float!

  """
  Contains 0 when there is no redirect error. A value of 301 indicates the URL
  of the requested resource has been changed permanently, while a value of 302
  indicates a temporary redirect.
  """
  redirect_code: Int!

  """An array of products to be displayed in a Related Products block."""
  related_products: [ProductInterface]

  """
  The internal relative URL. If the specified URL is a redirect, the query returns the redirected URL, not the original.
  """
  relative_url: String

  """The total count of all the reviews given to the product."""
  review_count: Int!

  """The list of products reviews."""
  reviews(
    """The maximum number of results to return at once. The default is 20."""
    pageSize: Int = 20

    """The page of results to return. The default is 1."""
    currentPage: Int = 1
  ): ProductReviews!
  seller_id: Int

  """A short description of the product. Its use depends on the theme."""
  short_description: ComplexTextValue

  """
  A number or code assigned to a product to identify the product, options, price, and manufacturer.
  """
  sku: String

  """The relative path to the small image, which is used on catalog pages."""
  small_image: ProductImage

  """The beginning date that a product has a special price."""
  special_from_date: String @deprecated(reason: "The field should not be used on the storefront.")

  """The discounted price of the product."""
  special_price: Float

  """The end date for a product with a special price."""
  special_to_date: String

  """Stock status of the product"""
  stock_status: ProductStockStatus

  """The file name of a swatch image."""
  swatch_image: String

  """The relative path to the product's thumbnail image."""
  thumbnail: ProductImage

  """
  The price when tier pricing is in effect and the items purchased threshold has been reached.
  """
  tier_price: Float @deprecated(reason: "Use `price_tiers` for product tier price information.")

  """An array of ProductTierPrices objects."""
  tier_prices: [ProductTierPrices] @deprecated(reason: "Use `price_tiers` for product tier price information.")

  """One of PRODUCT, CATEGORY, or CMS_PAGE."""
  type: UrlRewriteEntityTypeEnum

  """
  One of simple, virtual, bundle, downloadable, grouped, or configurable.
  """
  type_id: String @deprecated(reason: "Use `__typename` instead.")

  """The unique ID for a `ProductInterface` object."""
  uid: ID!

  """Timestamp indicating when the product was updated."""
  updated_at: String @deprecated(reason: "The field should not be used on the storefront.")

  """Upsell Products"""
  upsell_products: [ProductInterface]

  """The part of the URL that identifies the product"""
  url_key: String
  url_path: String @deprecated(reason: "Use product's `canonical_url` or url rewrites instead")

  """URL rewrites list"""
  url_rewrites: [UrlRewrite]

  """The part of the product URL that is appended after the url key"""
  url_suffix: String
  video_file: String

  """An array of websites in which the product is available."""
  websites: [Website] @deprecated(reason: "The field should not be used on the storefront.")

  """The weight of the item, in units defined by the store."""
  weight: Float
}

"""Defines a single product to add to the cart."""
input SimpleProductCartItemInput {
  """An array that defines customizable options for the product."""
  customizable_options: [CustomizableOptionInput]

  """
  An object containing the `sku`, `quantity`, and other relevant information about the product.
  """
  data: CartItemInput!
}

"""Contains a simple product wish list item."""
type SimpleWishlistItem implements WishlistItemInterface {
  """The date and time the item was added to the wish list."""
  added_at: String!

  """Custom options selected for the wish list item."""
  customizable_options: [SelectedCustomizableOption]!

  """The description of the item."""
  description: String

  """The unique ID for a `WishlistItemInterface` object."""
  id: ID!

  """Product details of the wish list item."""
  product: ProductInterface

  """The quantity of this wish list item."""
  quantity: Float!
}

"""Indicates whether to return results in ascending or descending order."""
enum SortEnum {
  ASC
  DESC
}

"""Defines a possible sort field."""
type SortField {
  """The label of the sort field."""
  label: String

  """The attribute code of the sort field."""
  value: String
}

"""
Contains a default value for sort fields and all available sort fields.
"""
type SortFields {
  """The default sort field value."""
  default: String

  """An array of possible sort fields."""
  options: [SortField]
}

"""Contains information about a store's configuration."""
type StoreConfig {
  """
  Contains scripts that must be included in the HTML before the closing `<body>` tag.
  """
  absolute_footer: String

  """
  Indicates whether guest users can write product reviews. Possible values: 1 (Yes) and 0 (No).
  """
  allow_guests_to_write_product_reviews: String

  """The value of the Allow Gift Messages for Order Items option"""
  allow_items: String

  """The value of the Allow Gift Messages on Order Level option"""
  allow_order: String

  """
  Indicates whether to enable autocomplete on login and forgot password forms.
  """
  autocomplete_on_storefront: Boolean

  """The base currency code."""
  base_currency_code: String

  """
  A fully-qualified URL that is used to create relative links to the `base_url`.
  """
  base_link_url: String

  """The fully-qualified URL that specifies the location of media files."""
  base_media_url: String

  """
  The fully-qualified URL that specifies the location of static view files.
  """
  base_static_url: String

  """The storeâ€™s fully-qualified base URL."""
  base_url: String

  """Braintree cc vault status."""
  braintree_cc_vault_active: String

  """The default sort order of the search results list."""
  catalog_default_sort_by: String

  """
  Corresponds to the 'Display Prices In Product Lists' field in the Admin. It
  indicates how FPT information is displayed on category pages.
  """
  category_fixed_product_tax_display_setting: FixedProductTaxDisplaySettings

  """The suffix applied to category pages, such as `.htm` or `.html`."""
  category_url_suffix: String

  """Indicates whether only specific countries can use this payment method."""
  check_money_order_enable_for_specific_countries: Boolean

  """Indicates whether the Check/Money Order payment method is enabled."""
  check_money_order_enabled: Boolean

  """The name of the party to whom the check must be payable."""
  check_money_order_make_check_payable_to: String

  """
  The maximum order amount required to qualify for the Check/Money Order payment method.
  """
  check_money_order_max_order_total: String

  """
  The minimum order amount required to qualify for the Check/Money Order payment method.
  """
  check_money_order_min_order_total: String

  """
  The status of new orders placed using the Check/Money Order payment method.
  """
  check_money_order_new_order_status: String

  """
  A comma-separated list of specific countries allowed to use the Check/Money Order payment method.
  """
  check_money_order_payment_from_specific_countries: String

  """The full street address or PO Box where the checks are mailed."""
  check_money_order_send_check_to: String

  """
  A number indicating the position of the Check/Money Order payment method in
  the list of available payment methods during checkout.
  """
  check_money_order_sort_order: Int

  """
  The title of the Check/Money Order payment method displayed on the storefront.
  """
  check_money_order_title: String

  """The name of the CMS page that identifies the home page for the store."""
  cms_home_page: String

  """
  A specific CMS page that displays when cookies are not enabled for the browser.
  """
  cms_no_cookies: String

  """
  A specific CMS page that displays when a 404 'Page Not Found' error occurs.
  """
  cms_no_route: String

  """A code assigned to the store to identify it."""
  code: String @deprecated(reason: "Use `store_code` instead.")

  """
  Indicates whether the `parent` or child (`itself`) thumbnail should be used in the cart for configurable products.
  """
  configurable_thumbnail_source: String

  """Indicates whether the Contact Us form in enabled."""
  contact_enabled: Boolean!

  """The copyright statement that appears at the bottom of each page."""
  copyright: String

  """
  The description that provides a summary of your site for search engine
  listings. It should not be more than 160 characters in length.
  """
  default_description: String

  """The default display currency code."""
  default_display_currency_code: String

  """
  A series of keywords that describe your store, each separated by a comma.
  """
  default_keywords: String

  """
  The title that appears at the title bar of each page when viewed in a browser.
  """
  default_title: String

  """
  Controls the display of the demo store notice at the top of the page. Options: 0 (No) or 1 (Yes).
  """
  demonotice: Int

  """The landing page that is associated with the base URL."""
  front: String

  """The default number of products per page in Grid View."""
  grid_per_page: Int

  """
  A list of numbers that define how many products can be displayed in Grid View.
  """
  grid_per_page_values: String

  """
  Scripts that must be included in the HTML before the closing `<head>` tag.
  """
  head_includes: String

  """
  The small graphic image (favicon) that appears in the address bar and tab of the browser.
  """
  head_shortcut_icon: String

  """The path to the logo that appears in the header."""
  header_logo_src: String

  """The ID number assigned to the store."""
  id: Int @deprecated(reason: "Use `store_code` instead.")

  """
  Indicates whether the store view has been designated as the default within the store group.
  """
  is_default_store: Boolean

  """
  Indicates whether the store group has been designated as the default within the website.
  """
  is_default_store_group: Boolean

  """The format of the search results list."""
  list_mode: String

  """The default number of products per page in List View."""
  list_per_page: Int

  """
  A list of numbers that define how many products can be displayed in List View.
  """
  list_per_page_values: String

  """The store locale."""
  locale: String

  """The Alt text that is associated with the logo."""
  logo_alt: String

  """The height of the logo image, in pixels."""
  logo_height: Int

  """The width of the logo image, in pixels."""
  logo_width: Int

  """Indicates whether wishlists are enabled (1) or disabled (0)."""
  magento_wishlist_general_is_enabled: String

  """The minimum number of characters required for a valid password."""
  minimum_password_length: String

  """Indicates whether newsletters are enabled."""
  newsletter_enabled: Boolean!

  """
  The default page that displays when a 404 'Page not Found' error occurs.
  """
  no_route: String

  """Payflow Pro vault status."""
  payment_payflowpro_cc_vault_active: String

  """
  Corresponds to the 'Display Prices On Product View Page' field in the Admin.
  It indicates how FPT information is displayed on product pages.
  """
  product_fixed_product_tax_display_setting: FixedProductTaxDisplaySettings

  """
  Indicates whether product reviews are enabled. Possible values: 1 (Yes) and 0 (No).
  """
  product_reviews_enabled: String

  """The suffix applied to product pages, such as `.htm` or `.html`."""
  product_url_suffix: String

  """
  The number of different character classes (lowercase, uppercase, digits, special characters) required in a password.
  """
  required_character_classes_number: String

  """The ID of the root category."""
  root_category_id: Int @deprecated(reason: "Use `root_category_uid` instead.")

  """The unique ID for a `CategoryInterface` object."""
  root_category_uid: ID

  """
  Corresponds to the 'Display Prices In Sales Modules' field in the Admin. It
  indicates how FPT information is displayed on cart, checkout, and order pages.
  """
  sales_fixed_product_tax_display_setting: FixedProductTaxDisplaySettings

  """
  A secure fully-qualified URL that is used to create relative links to the `base_url`.
  """
  secure_base_link_url: String

  """
  The secure fully-qualified URL that specifies the location of media files.
  """
  secure_base_media_url: String

  """
  The secure fully-qualified URL that specifies the location of static view files.
  """
  secure_base_static_url: String

  """The storeâ€™s fully-qualified secure base URL."""
  secure_base_url: String

  """Email to a Friend configuration."""
  send_friend: SendFriendConfiguration

  """
  Indicates whether a breadcrumb trail appears on all CMS pages in the catalog. 0 (No) or 1 (Yes).
  """
  show_cms_breadcrumbs: Int

  """
  The unique ID of the store view. In the Admin, this is called the Store View
  Code. When making a GraphQL call, assign this value to the `Store` header to
  provide the scope.
  """
  store_code: ID

  """
  The unique ID assigned to the store group. In the Admin, this is called the Store Name.
  """
  store_group_code: ID

  """The label assigned to the store group."""
  store_group_name: String

  """The label assigned to the store view."""
  store_name: String

  """The store view sort order."""
  store_sort_order: Int

  """The time zone of the store."""
  timezone: String

  """
  A prefix that appears before the title to create a two- or three-part title.
  """
  title_prefix: String

  """
  The character that separates the category name and subcategory in the browser title bar.
  """
  title_separator: String

  """
  A suffix that appears after the title to create a two- or three-part title.
  """
  title_suffix: String

  """Indicates whether the store code should be used in the URL."""
  use_store_in_url: Boolean

  """The unique ID for the website."""
  website_code: ID

  """The ID number assigned to the website store."""
  website_id: Int @deprecated(reason: "The field should not be used on the storefront.")

  """The label assigned to the website."""
  website_name: String

  """The unit of weight."""
  weight_unit: String

  """
  Text that appears in the header of the page and includes the name of the logged in customer.
  """
  welcome: String

  """Indicates whether only specific countries can use this payment method."""
  zero_subtotal_enable_for_specific_countries: Boolean

  """Indicates whether the Zero Subtotal payment method is enabled."""
  zero_subtotal_enabled: Boolean

  """
  The status of new orders placed using the Zero Subtotal payment method.
  """
  zero_subtotal_new_order_status: String

  """
  When the new order status is 'Processing', this can be set to
  `authorize_capture` to automatically invoice all items that have a zero balance.
  """
  zero_subtotal_payment_action: String

  """
  A comma-separated list of specific countries allowed to use the Zero Subtotal payment method.
  """
  zero_subtotal_payment_from_specific_countries: String

  """
  A number indicating the position of the Zero Subtotal payment method in the
  list of available payment methods during checkout.
  """
  zero_subtotal_sort_order: Int

  """
  The title of the Zero Subtotal payment method displayed on the storefront.
  """
  zero_subtotal_title: String
}

"""Indicates where an attribute can be displayed."""
type StorefrontProperties {
  """
  The relative position of the attribute in the layered navigation block.
  """
  position: Int

  """
  Indicates whether the attribute is filterable with results, without results, or not at all.
  """
  use_in_layered_navigation: UseInLayeredNavigationOptions

  """Indicates whether the attribute is displayed in product listings."""
  use_in_product_listing: Boolean

  """
  Indicates whether the attribute can be used in layered navigation on search results pages.
  """
  use_in_search_results_layered_navigation: Boolean

  """Indicates whether the attribute is displayed on product pages."""
  visible_on_catalog_pages: Boolean
}

"""Contains the store code and label of an attribute."""
type StoreLabels {
  """The label assigned to the attribute."""
  label: String

  """The assigned store code."""
  store_code: String
}

"""Contains the result of the `subscribeEmailToNewsletter` operation."""
type SubscribeEmailToNewsletterOutput {
  """The status of the subscription request."""
  status: SubscriptionStatusesEnum
}

"""Indicates the status of the request."""
enum SubscriptionStatusesEnum {
  NOT_ACTIVE
  SUBSCRIBED
  UNSUBSCRIBED
  UNCONFIRMED
}

"""Describes the swatch type and a value."""
type SwatchData {
  """Type of swatch filter item: 1 - text, 2 - image"""
  swatch_type: String

  """The type of swatch filter item: 1 - text; 2 - image."""
  type: String

  """Value for swatch item (text or image link)"""
  value: String
}

interface SwatchDataInterface {
  """The value can be represented as color (HEX code), image link, or text."""
  value: String
}

type SwatchLayerFilterItem implements LayerFilterItemInterface & SwatchLayerFilterItemInterface {
  """The count of items per filter."""
  items_count: Int @deprecated(reason: "Use `AggregationOption.count` instead.")

  """The label for a filter."""
  label: String @deprecated(reason: "Use `AggregationOption.label` instead.")

  """Data required to render a swatch filter item."""
  swatch_data: SwatchData

  """The value of a filter request variable to be used in query."""
  value_string: String @deprecated(reason: "Use `AggregationOption.value` instead.")
}

interface SwatchLayerFilterItemInterface {
  """Data required to render a swatch filter item."""
  swatch_data: SwatchData
}

"""Contains tax item details."""
type TaxItem {
  """The amount of tax applied to the item."""
  amount: Money!

  """The rate used to calculate the tax."""
  rate: Float!

  """A title that describes the tax."""
  title: String!
}

type TextSwatchData implements SwatchDataInterface {
  """The value can be represented as color (HEX code), image link, or text."""
  value: String
}

"""Defines a price based on the quantity purchased."""
type TierPrice {
  """The price discount that this tier represents."""
  discount: ProductDiscount

  """The price of the product at this tier."""
  final_price: Money

  """
  The minimum number of items that must be purchased to qualify for this price tier.
  """
  quantity: Float
}

type UiAttributeTypeAny implements UiInputTypeInterface {
  """Indicates whether the attribute value allowed to have html content."""
  is_html_allowed: Boolean

  """The frontend input type of the attribute."""
  ui_input_type: UiInputTypeEnum
}

type UiAttributeTypeBoolean implements UiInputTypeInterface & AttributeOptionsInterface & SelectableInputTypeInterface {
  """An array of attribute options."""
  attribute_options: [AttributeOptionInterface]

  """Indicates whether the attribute value allowed to have html content."""
  is_html_allowed: Boolean

  """The frontend input type of the attribute."""
  ui_input_type: UiInputTypeEnum
}

type UiAttributeTypeFixedProductTax implements UiInputTypeInterface {
  """Indicates whether the attribute value allowed to have html content."""
  is_html_allowed: Boolean

  """The frontend input type of the attribute."""
  ui_input_type: UiInputTypeEnum
}

type UiAttributeTypeMultiSelect implements UiInputTypeInterface & AttributeOptionsInterface & SelectableInputTypeInterface {
  """An array of attribute options."""
  attribute_options: [AttributeOptionInterface]

  """Indicates whether the attribute value allowed to have html content."""
  is_html_allowed: Boolean

  """The frontend input type of the attribute."""
  ui_input_type: UiInputTypeEnum
}

type UiAttributeTypePageBuilder implements UiInputTypeInterface {
  """Indicates whether the attribute value allowed to have html content."""
  is_html_allowed: Boolean

  """The frontend input type of the attribute."""
  ui_input_type: UiInputTypeEnum
}

type UiAttributeTypeSelect implements UiInputTypeInterface & AttributeOptionsInterface & SelectableInputTypeInterface {
  """An array of attribute options."""
  attribute_options: [AttributeOptionInterface]

  """Indicates whether the attribute value allowed to have html content."""
  is_html_allowed: Boolean

  """The frontend input type of the attribute."""
  ui_input_type: UiInputTypeEnum
}

type UiAttributeTypeTextarea implements UiInputTypeInterface {
  """Indicates whether the attribute value allowed to have html content."""
  is_html_allowed: Boolean

  """The frontend input type of the attribute."""
  ui_input_type: UiInputTypeEnum
}

type UiAttributeTypeTextEditor implements UiInputTypeInterface {
  """Indicates whether the attribute value allowed to have html content."""
  is_html_allowed: Boolean

  """The frontend input type of the attribute."""
  ui_input_type: UiInputTypeEnum
}

enum UiInputTypeEnum {
  BOOLEAN
  DATE
  DATETIME
  GALLERY
  IMAGE
  MEDIA_IMAGE
  MULTISELECT
  PRICE
  SELECT
  TEXT
  TEXTAREA
  TEXTEDITOR
  WEIGHT
  FIXED_PRODUCT_TAX
  PAGEBUILDER
}

"""Defines frontend UI properties of an attribute."""
interface UiInputTypeInterface {
  """Indicates whether the attribute value allowed to have html content."""
  is_html_allowed: Boolean

  """The frontend input type of the attribute."""
  ui_input_type: UiInputTypeEnum
}

"""Modifies the specified items in the cart."""
input UpdateCartItemsInput {
  """The unique ID of a `Cart` object."""
  cart_id: String!

  """An array of items to be updated."""
  cart_items: [CartItemUpdateInput]!
}

"""Contains details about the cart after updating items."""
type UpdateCartItemsOutput {
  """The cart after updating products."""
  cart: Cart!
}

"""Contains the customer's wish list and any errors encountered."""
type UpdateProductsInWishlistOutput {
  """An array of errors encountered while updating products in a wish list."""
  user_errors: [WishListUserInputError]!

  """Contains the wish list with all items that were successfully updated."""
  wishlist: Wishlist!
}

"""Contains URL rewrite details."""
type UrlRewrite {
  """An array of request parameters."""
  parameters: [HttpQueryParameter]

  """The request URL."""
  url: String
}

"""This enumeration defines the entity type."""
enum UrlRewriteEntityTypeEnum {
  CMS_PAGE
  PRODUCT
  CATEGORY
}

"""Defines whether the attribute is filterable in layered navigation."""
enum UseInLayeredNavigationOptions {
  NO
  FILTERABLE_WITH_RESULTS
  FILTERABLE_NO_RESULT
}

"""Contains required input for payment methods with Vault support."""
input VaultTokenInput {
  """The public hash of the payment token."""
  public_hash: String!
}

"""An implementation for virtual product cart items."""
type VirtualCartItem implements CartItemInterface {
  """An array of product return messages."""
  amrma_return_info: [AmRmaProductReturnMessage]

  """An array containing customizable options the shopper selected."""
  customizable_options: [SelectedCustomizableOption]!

  """An array of errors encountered while loading the cart item"""
  errors: [CartItemError]
  id: String! @deprecated(reason: "Use `uid` instead.")

  """
  Contains details about the price of the item, including taxes and discounts.
  """
  prices: CartItemPrices

  """Details about an item in the cart."""
  product: ProductInterface!

  """The quantity of this item in the cart."""
  quantity: Float!

  """Contains details about the seller of the item"""
  seller: Retailer

  """The unique ID for a `CartItemInterface` object."""
  uid: ID!
}

"""
Defines a virtual product, which is a non-tangible product that does not require shipping and is not kept in inventory.
"""
type VirtualProduct implements ProductInterface & RoutableInterface & CustomizableProductInterface {
  accessory_announcement_date: String
  accessory_brand: Int
  accessory_custom_engraving_text: String
  accessory_description_detailed_extra: String
  accessory_description_extra: String
  accessory_description_pagebuilder_extra: String
  accessory_gemstone_addon: String
  accessory_recyclable_material: Int
  activity: String

  """An array of product return messages."""
  amrma_return_info: [AmRmaProductReturnMessage]

  """The attribute set assigned to the product."""
  attribute_set_id: Int @deprecated(reason: "The field should not be used on the storefront.")
  brand: Int

  """
  The relative canonical URL. This value is returned only if the system setting
  'Use Canonical Link Meta Tag For Products' is enabled.
  """
  canonical_url: String

  """The categories assigned to a product."""
  categories: [CategoryInterface]
  color: Int

  """The product's country of origin."""
  country_of_manufacture: String

  """Timestamp indicating when the product was created."""
  created_at: String @deprecated(reason: "The field should not be used on the storefront.")

  """Crosssell Products"""
  crosssell_products: [ProductInterface]

  """List of product custom attributes details."""
  custom_attributes: [CustomAttribute]!

  """
  Detailed information about the product. The value can include simple HTML tags.
  """
  description: ComplexTextValue
  description_extra: String
  description_test: String
  discount_percentage: Float
  fashion_color: Int
  fashion_material: String
  fashion_size: Int
  fashion_style: String
  format: Int

  """Indicates whether a gift message is available."""
  gift_message_available: String
  has_video: Int

  """The ID number assigned to the product."""
  id: Int @deprecated(reason: "Use the `uid` field instead.")

  """The relative path to the main image on the product page."""
  image: ProductImage

  """A number representing the product's manufacturer."""
  manufacturer: Int

  """An array of media gallery objects."""
  media_gallery: [MediaGalleryInterface]

  """An array of MediaGalleryEntry objects."""
  media_gallery_entries: [MediaGalleryEntry] @deprecated(reason: "Use `media_gallery` instead.")

  """
  A brief overview of the product for search results listings, maximum 255 characters.
  """
  meta_description: String

  """
  A comma-separated list of keywords that are visible only to search engines.
  """
  meta_keyword: String

  """
  A string that is displayed in the title bar and tab of the browser and in search results lists.
  """
  meta_title: String

  """The product name. Customers use this name to identify the product."""
  name: String

  """
  The beginning date for new product listings, and determines if the product is featured as a new product.
  """
  new_from_date: String @deprecated(reason: "The field should not be used on the storefront.")

  """The end date for new product listings."""
  new_to_date: String @deprecated(reason: "The field should not be used on the storefront.")

  """Product stock only x left count"""
  only_x_left_in_stock: Float

  """An array of options for a customizable product."""
  options: [CustomizableOptionInterface]

  """
  If the product has multiple options, determines where they appear on the product page.
  """
  options_container: String

  """Indicates the price of an item."""
  price: ProductPrices @deprecated(reason: "Use `price_range` for product price information.")

  """The range of prices for the product"""
  price_range: PriceRange!

  """An array of `TierPrice` objects."""
  price_tiers: [TierPrice]

  """An array of `ProductLinks` objects."""
  product_links: [ProductLinksInterface]

  """The average of all the ratings given to the product."""
  rating_summary: Float!

  """
  Contains 0 when there is no redirect error. A value of 301 indicates the URL
  of the requested resource has been changed permanently, while a value of 302
  indicates a temporary redirect.
  """
  redirect_code: Int!

  """An array of products to be displayed in a Related Products block."""
  related_products: [ProductInterface]

  """
  The internal relative URL. If the specified URL is a redirect, the query returns the redirected URL, not the original.
  """
  relative_url: String

  """The total count of all the reviews given to the product."""
  review_count: Int!

  """The list of products reviews."""
  reviews(
    """The maximum number of results to return at once. The default is 20."""
    pageSize: Int = 20

    """The page of results to return. The default is 1."""
    currentPage: Int = 1
  ): ProductReviews!
  seller_id: Int

  """A short description of the product. Its use depends on the theme."""
  short_description: ComplexTextValue

  """
  A number or code assigned to a product to identify the product, options, price, and manufacturer.
  """
  sku: String

  """The relative path to the small image, which is used on catalog pages."""
  small_image: ProductImage

  """The beginning date that a product has a special price."""
  special_from_date: String @deprecated(reason: "The field should not be used on the storefront.")

  """The discounted price of the product."""
  special_price: Float

  """The end date for a product with a special price."""
  special_to_date: String

  """Stock status of the product"""
  stock_status: ProductStockStatus

  """The file name of a swatch image."""
  swatch_image: String

  """The relative path to the product's thumbnail image."""
  thumbnail: ProductImage

  """
  The price when tier pricing is in effect and the items purchased threshold has been reached.
  """
  tier_price: Float @deprecated(reason: "Use `price_tiers` for product tier price information.")

  """An array of ProductTierPrices objects."""
  tier_prices: [ProductTierPrices] @deprecated(reason: "Use `price_tiers` for product tier price information.")

  """One of PRODUCT, CATEGORY, or CMS_PAGE."""
  type: UrlRewriteEntityTypeEnum

  """
  One of simple, virtual, bundle, downloadable, grouped, or configurable.
  """
  type_id: String @deprecated(reason: "Use `__typename` instead.")

  """The unique ID for a `ProductInterface` object."""
  uid: ID!

  """Timestamp indicating when the product was updated."""
  updated_at: String @deprecated(reason: "The field should not be used on the storefront.")

  """Upsell Products"""
  upsell_products: [ProductInterface]

  """The part of the URL that identifies the product"""
  url_key: String
  url_path: String @deprecated(reason: "Use product's `canonical_url` or url rewrites instead")

  """URL rewrites list"""
  url_rewrites: [UrlRewrite]

  """The part of the product URL that is appended after the url key"""
  url_suffix: String
  video_file: String

  """An array of websites in which the product is available."""
  websites: [Website] @deprecated(reason: "The field should not be used on the storefront.")
}

"""Defines a single product to add to the cart."""
input VirtualProductCartItemInput {
  """An array that defines customizable options for the product."""
  customizable_options: [CustomizableOptionInput]

  """
  An object containing the `sku`, `quantity`, and other relevant information about the product.
  """
  data: CartItemInput!
}

"""Contains a virtual product wish list item."""
type VirtualWishlistItem implements WishlistItemInterface {
  """The date and time the item was added to the wish list."""
  added_at: String!

  """Custom options selected for the wish list item."""
  customizable_options: [SelectedCustomizableOption]!

  """The description of the item."""
  description: String

  """The unique ID for a `WishlistItemInterface` object."""
  id: ID!

  """Product details of the wish list item."""
  product: ProductInterface

  """The quantity of this wish list item."""
  quantity: Float!
}

"""
Deprecated. It should not be used on the storefront. Contains information about a website.
"""
type Website {
  """A code assigned to the website to identify it."""
  code: String @deprecated(reason: "The field should not be used on the storefront.")

  """The default group ID of the website."""
  default_group_id: String @deprecated(reason: "The field should not be used on the storefront.")

  """The ID number assigned to the website."""
  id: Int @deprecated(reason: "The field should not be used on the storefront.")

  """Indicates whether this is the default website."""
  is_default: Boolean @deprecated(reason: "The field should not be used on the storefront.")

  """The website name. Websites use this name to identify it easier."""
  name: String @deprecated(reason: "The field should not be used on the storefront.")

  """The attribute to use for sorting websites."""
  sort_order: Int @deprecated(reason: "The field should not be used on the storefront.")
}

"""Contains a customer wish list."""
type Wishlist {
  """The unique ID for a `Wishlist` object."""
  id: ID
  items: [WishlistItem] @deprecated(reason: "Use the `items_v2` field instead.")

  """The number of items in the wish list."""
  items_count: Int

  """An array of items in the customer's wish list."""
  items_v2(currentPage: Int = 1, pageSize: Int = 20): WishlistItems

  """An encrypted code that Magento uses to link to the wish list."""
  sharing_code: String

  """The time of the last modification to the wish list."""
  updated_at: String
}

"""
Contains details about errors encountered when a customer added wish list items to the cart.
"""
type WishlistCartUserInputError {
  """An error code that describes the error encountered."""
  code: WishlistCartUserInputErrorType!

  """A localized error message."""
  message: String!

  """The unique ID of the `Wishlist` object containing an error."""
  wishlistId: ID!

  """The unique ID of the wish list item containing an error."""
  wishlistItemId: ID!
}

"""A list of possible error types."""
enum WishlistCartUserInputErrorType {
  PRODUCT_NOT_FOUND
  NOT_SALABLE
  INSUFFICIENT_STOCK
  UNDEFINED
}

"""Contains details about a wish list item."""
type WishlistItem {
  """The time when the customer added the item to the wish list."""
  added_at: String

  """The customer's comment about this item."""
  description: String

  """The unique ID for a `WishlistItem` object."""
  id: Int

  """Details about the wish list item."""
  product: ProductInterface

  """The quantity of this wish list item"""
  qty: Float
}

"""Defines the items to add to a wish list."""
input WishlistItemInput {
  """An array of options that the customer entered."""
  entered_options: [EnteredOptionInput]

  """For complex product types, the SKU of the parent product."""
  parent_sku: String

  """The amount or number of items to add."""
  quantity: Float!

  """An array of strings corresponding to options the customer selected."""
  selected_options: [ID]

  """
  The SKU of the product to add. For complex product types, specify the child product SKU.
  """
  sku: String!
}

"""The interface for wish list items."""
interface WishlistItemInterface {
  """The date and time the item was added to the wish list."""
  added_at: String!

  """Custom options selected for the wish list item."""
  customizable_options: [SelectedCustomizableOption]!

  """The description of the item."""
  description: String

  """The unique ID for a `WishlistItemInterface` object."""
  id: ID!

  """Product details of the wish list item."""
  product: ProductInterface

  """The quantity of this wish list item."""
  quantity: Float!
}

"""Contains an array of items in a wish list."""
type WishlistItems {
  """A list of items in the wish list."""
  items: [WishlistItemInterface]!

  """Contains pagination metadata."""
  page_info: SearchResultPageInfo
}

"""Defines updates to items in a wish list."""
input WishlistItemUpdateInput {
  """Customer-entered comments about the item."""
  description: String

  """An array of options that the customer entered."""
  entered_options: [EnteredOptionInput]

  """The new amount or number of this item."""
  quantity: Float

  """An array of strings corresponding to options the customer selected."""
  selected_options: [ID]

  """The unique ID for a `WishlistItemInterface` object."""
  wishlist_item_id: ID!
}

"""Deprecated: Use the `Wishlist` type instead."""
type WishlistOutput {
  """An array of items in the customer's wish list"""
  items: [WishlistItem] @deprecated(reason: "Use the `Wishlist.items` field instead.")

  """The number of items in the wish list."""
  items_count: Int @deprecated(reason: "Use the `Wishlist.items_count` field instead.")

  """
  When multiple wish lists are enabled, the name the customer assigns to the wishlist.
  """
  name: String @deprecated(reason: "This field is related to Commerce functionality and is always `null` in Open Source.")

  """An encrypted code that links to the wish list."""
  sharing_code: String @deprecated(reason: "Use the `Wishlist.sharing_code` field instead.")

  """The time of the last modification to the wish list."""
  updated_at: String @deprecated(reason: "Use the `Wishlist.updated_at` field instead.")
}

"""An error encountered while performing operations with WishList."""
type WishListUserInputError {
  """A wish list-specific error code."""
  code: WishListUserInputErrorType!

  """A localized error message."""
  message: String!
}

"""A list of possible error types."""
enum WishListUserInputErrorType {
  PRODUCT_NOT_FOUND
  UNDEFINED
}

